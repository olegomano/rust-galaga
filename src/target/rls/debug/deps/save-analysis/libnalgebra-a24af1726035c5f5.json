{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1","program":"/home/oleg/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nalgebra","--edition=2018","/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"matrixmultiply\"","--cfg","feature=\"rand_distr\"","--cfg","feature=\"std\"","-C","metadata=a24af1726035c5f5","-C","extra-filename=-a24af1726035c5f5","--out-dir","/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps","-L","dependency=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps","--extern","approx=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libapprox-ae346aae61f4dbf0.rmeta","--extern","generic_array=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libgeneric_array-dd533f4133241709.rmeta","--extern","matrixmultiply=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libmatrixmultiply-ab832608860acfc9.rmeta","--extern","num_complex=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libnum_complex-0b79d1c4263add0f.rmeta","--extern","num_rational=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libnum_rational-2b0daedc4b6e7b1e.rmeta","--extern","num_traits=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libnum_traits-15186f8f9f53c559.rmeta","--extern","rand=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/librand-82194892bec00dd4.rmeta","--extern","rand_distr=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/librand_distr-b51c23233167e6ca.rmeta","--extern","simba=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libsimba-55e33333899865d5.rmeta","--extern","typenum=/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libtypenum-795d8d841311468c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/oleg/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/oleg/Documents/dev/galaga/src/target/rls/debug/deps/libnalgebra-a24af1726035c5f5.rmeta"},"prelude":{"crate_id":{"name":"nalgebra","disambiguator":[169358451541837436,17556735445722683507]},"crate_root":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src","external_crates":[{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":18,"id":{"name":"approx","disambiguator":[8391902732824745655,14888329288371716252]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":19,"id":{"name":"num_traits","disambiguator":[11348060067260856026,14620577537453903898]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":20,"id":{"name":"matrixmultiply","disambiguator":[10562598039905590557,1059175509725795943]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":21,"id":{"name":"rawpointer","disambiguator":[3579614606721996550,8746839539414533476]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":22,"id":{"name":"rand_distr","disambiguator":[4484835802315577978,3579957770929875320]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","num":23,"id":{"name":"rand","disambiguator":[11891681820880638453,14346926187935127971]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":24,"id":{"name":"rand_core","disambiguator":[6274849471579002166,16395362155083340552]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":25,"id":{"name":"getrandom","disambiguator":[16481951045535261410,17997612378561297275]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[7018816409641344841,8400008450036017920]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":28,"id":{"name":"rand_chacha","disambiguator":[17508503535984198128,8144802541024032975]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","num":29,"id":{"name":"ppv_lite86","disambiguator":[5486910781073359264,15253540615556416119]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","num":30,"id":{"name":"simba","disambiguator":[1008031160235436825,10436780516471508302]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","num":31,"id":{"name":"num_complex","disambiguator":[2234435905665002869,3858055944766738801]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","num":32,"id":{"name":"paste","disambiguator":[17702991015953864323,17135768066532145297]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","num":33,"id":{"name":"proc_macro_hack","disambiguator":[18107074244595300940,7254669559897049488]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","num":34,"id":{"name":"paste_impl","disambiguator":[18240303781103151534,11634139876387164469]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","num":35,"id":{"name":"generic_array","disambiguator":[4557543049115035924,5966712552823034802]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","num":36,"id":{"name":"typenum","disambiguator":[18180955760897073304,8095750286315890553]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","num":37,"id":{"name":"num_rational","disambiguator":[11673780652696189111,17389037484674897269]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","num":38,"id":{"name":"num_integer","disambiguator":[17273783957195152462,6174027260302838260]}}],"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":0,"byte_end":14754,"line_start":1,"line_end":540,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VectorSum, Matrix, MatrixSum, Vector, RowVector, SquareMatrix","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15483,"byte_end":15484,"line_start":41,"line_end":41,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Norm","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15508,"byte_end":15509,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Scalar","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15531,"byte_end":15532,"line_start":43,"line_end":43,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Unit, Normed","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15568,"byte_end":15569,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"DefaultAllocator","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15596,"byte_end":15597,"line_start":46,"line_end":46,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"U2, DimName, DimDiff, U3, Dim, DimSub, Dynamic, U1","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15621,"byte_end":15622,"line_start":48,"line_end":48,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"MatrixMN, Vector1, Vector4, Matrix4, Matrix2x3, Vector3, VectorN, RowVectorN, Matrix3, Vector2, MatrixN, DMatrix, Matrix2","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15651,"byte_end":15652,"line_start":49,"line_end":49,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"VectorSliceN, MatrixSliceMutMN, DVectorSlice, DVectorSliceMut, MatrixSliceMN","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15683,"byte_end":15684,"line_start":50,"line_end":50,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"ArrayStorage","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15714,"byte_end":15715,"line_start":51,"line_end":51,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"SliceStorage, MatrixSliceMut, SliceStorageMut, MatrixSlice","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15792,"byte_end":15793,"line_start":53,"line_end":53,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"VecStorage","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507433,"byte_end":507449,"line_start":89,"line_end":89,"column_start":34,"column_end":50},"alias_span":null,"name":"AbstractRotation","value":"","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507473,"byte_end":507474,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507503,"byte_end":507504,"line_start":92,"line_end":92,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Point2, Point3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507531,"byte_end":507532,"line_start":94,"line_end":94,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Rotation","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507564,"byte_end":507565,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"Rotation2, Rotation3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507594,"byte_end":507595,"line_start":97,"line_end":97,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"UnitQuaternion, Quaternion","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507626,"byte_end":507627,"line_start":99,"line_end":99,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"UnitComplex","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507657,"byte_end":507658,"line_start":101,"line_end":101,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Translation","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507693,"byte_end":507694,"line_start":102,"line_end":102,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"Translation3, Translation2","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507721,"byte_end":507722,"line_start":104,"line_end":104,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Isometry","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507754,"byte_end":507755,"line_start":105,"line_end":105,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"IsometryMatrix3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507784,"byte_end":507785,"line_start":107,"line_end":107,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Similarity","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507819,"byte_end":507820,"line_start":108,"line_end":108,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507848,"byte_end":507849,"line_start":110,"line_end":110,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"TCategoryMul, SuperTCategoryOf, TCategory, TProjective, TAffine, SubTCategoryOf, Transform, TGeneral","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507882,"byte_end":507883,"line_start":111,"line_end":111,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Projective3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507912,"byte_end":507913,"line_start":113,"line_end":113,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Reflection","parent":{"krate":0,"index":3899}},{"kind":"Use","ref_id":{"krate":0,"index":6964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507944,"byte_end":507957,"line_start":115,"line_end":115,"column_start":29,"column_end":42},"alias_span":null,"name":"Orthographic3","value":"","parent":{"krate":0,"index":3899}},{"kind":"Use","ref_id":{"krate":0,"index":7038},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":507986,"byte_end":507998,"line_start":116,"line_end":116,"column_start":28,"column_end":40},"alias_span":null,"name":"Perspective3","value":"","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032407,"byte_end":1032408,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Bidiagonal","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032434,"byte_end":1032435,"line_start":32,"line_end":32,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032464,"byte_end":1032465,"line_start":33,"line_end":33,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032510,"byte_end":1032511,"line_start":35,"line_end":35,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032540,"byte_end":1032541,"line_start":36,"line_end":36,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032569,"byte_end":1032570,"line_start":37,"line_end":37,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Hessenberg","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032590,"byte_end":1032591,"line_start":38,"line_end":38,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"LU","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032629,"byte_end":1032630,"line_start":39,"line_end":39,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"PermutationSequence","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032650,"byte_end":1032651,"line_start":40,"line_end":40,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032674,"byte_end":1032675,"line_start":41,"line_end":41,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032696,"byte_end":1032697,"line_start":42,"line_end":42,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032730,"byte_end":1032731,"line_start":43,"line_end":43,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032770,"byte_end":1032771,"line_start":44,"line_end":44,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"SymmetricTridiagonal","parent":{"krate":0,"index":7104}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4235,"byte_end":4236,"line_start":133,"line_end":133,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"VectorSliceN, Matrix, Norm, DimName, U2, Unit, Scalar, RowVectorN, Vector, Normed, allocator, MatrixMN, storage, VectorN, U3, DefaultAllocator, Dim, MatrixN, dimension, constraint, U1","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4263,"byte_end":4264,"line_start":134,"line_end":134,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4289,"byte_end":4290,"line_start":135,"line_end":135,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4494,"byte_end":4498,"line_start":142,"line_end":142,"column_start":9,"column_end":13},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":471},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4669,"byte_end":4676,"line_start":150,"line_end":150,"column_start":22,"column_end":29},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":144},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4707,"byte_end":4716,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"alias_span":null,"name":"ClosedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":150},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4718,"byte_end":4727,"line_start":152,"line_end":152,"column_start":16,"column_end":25},"alias_span":null,"name":"ClosedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":148},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4729,"byte_end":4738,"line_start":152,"line_end":152,"column_start":27,"column_end":36},"alias_span":null,"name":"ClosedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":146},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4740,"byte_end":4749,"line_start":152,"line_end":152,"column_start":38,"column_end":47},"alias_span":null,"name":"ClosedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":72},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4751,"byte_end":4763,"line_start":152,"line_end":152,"column_start":49,"column_end":61},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":167},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4765,"byte_end":4770,"line_start":152,"line_end":152,"column_start":63,"column_end":68},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":28},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4772,"byte_end":4781,"line_start":152,"line_end":152,"column_start":70,"column_end":79},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":394},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4808,"byte_end":4816,"line_start":154,"line_end":154,"column_start":23,"column_end":31},"alias_span":null,"name":"SimdBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":463},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4818,"byte_end":4834,"line_start":154,"line_end":154,"column_start":33,"column_end":49},"alias_span":null,"name":"SimdComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":540},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4836,"byte_end":4850,"line_start":154,"line_end":154,"column_start":51,"column_end":65},"alias_span":null,"name":"SimdPartialOrd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":571},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4852,"byte_end":4865,"line_start":154,"line_end":154,"column_start":67,"column_end":80},"alias_span":null,"name":"SimdRealField","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":0,"byte_end":14754,"line_start":1,"line_end":540,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":3899},{"krate":0,"index":7104},{"krate":0,"index":8148},{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156},{"krate":0,"index":24828},{"krate":0,"index":8157},{"krate":0,"index":8158},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8166},{"krate":0,"index":8167},{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8172},{"krate":0,"index":8173},{"krate":0,"index":8174},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8178},{"krate":0,"index":8180},{"krate":0,"index":8182},{"krate":0,"index":8184},{"krate":0,"index":8186},{"krate":0,"index":8188},{"krate":0,"index":8190},{"krate":0,"index":8194},{"krate":0,"index":8198},{"krate":0,"index":8202},{"krate":0,"index":8204},{"krate":0,"index":8206},{"krate":0,"index":8208},{"krate":0,"index":8210},{"krate":0,"index":8212},{"krate":0,"index":8215},{"krate":0,"index":8218},{"krate":0,"index":8221},{"krate":0,"index":8224},{"krate":0,"index":8227},{"krate":0,"index":8230},{"krate":0,"index":8233},{"krate":0,"index":8236},{"krate":0,"index":8239},{"krate":0,"index":8242},{"krate":0,"index":8245},{"krate":0,"index":8248},{"krate":0,"index":8251}],"decl_id":null,"docs":"# nalgebra","sig":null,"attributes":[{"value":"*\n# nalgebra\n\n**nalgebra** is a linear algebra library written for Rust targeting:\n\n* General-purpose linear algebra (still lacks a lot of features…)\n* Real-time computer graphics.\n* Real-time computer physics.\n\n## Using **nalgebra**\nYou will need the last stable build of the [rust compiler](https://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\nnalgebra = \"0.18\"\n```\n\n\nMost useful functionalities of **nalgebra** are grouped in the root module `nalgebra::`.\n\nHowever, the recommended way to use **nalgebra** is to import types and traits\nexplicitly, and call free-functions using the `na::` prefix:\n\n```.rust\n#[macro_use]\nextern crate approx; // For the macro relative_eq!\nextern crate nalgebra as na;\nuse na::{Vector3, Rotation3};\n\nfn main() {\n    let axis  = Vector3::x_axis();\n    let angle = 1.57;\n    let b     = Rotation3::from_axis_angle(&axis, angle);\n\n    relative_eq!(b.axis().unwrap(), axis);\n    relative_eq!(b.angle(), angle);\n}\n```\n\n\n## Features\n**nalgebra** is meant to be a general-purpose, low-dimensional, linear algebra library, with\nan optimized set of tools for computer graphics and physics. Those features include:\n\n* A single parametrizable type `Matrix` for vectors, (square or rectangular) matrices, and slices\n  with dimensions known either at compile-time (using type-level integers) or at runtime.\n* Matrices and vectors with compile-time sizes are statically allocated while dynamic ones are\n  allocated on the heap.\n* Convenient aliases for low-dimensional matrices and vectors: `Vector1` to `Vector6` and\n  `Matrix1x1` to `Matrix6x6`, including rectangular matrices like `Matrix2x5`.\n* Points sizes known at compile time, and convenience aliases: `Point1` to `Point6`.\n* Translation (seen as a transformation that composes by multiplication): `Translation2`,\n  `Translation3`.\n* Rotation matrices: `Rotation2`, `Rotation3`.\n* Quaternions: `Quaternion`, `UnitQuaternion` (for 3D rotation).\n* Unit complex numbers can be used for 2D rotation: `UnitComplex`.\n* Algebraic entities with a norm equal to one: `Unit<T>`, e.g., `Unit<Vector3<f32>>`.\n* Isometries (translation ⨯ rotation): `Isometry2`, `Isometry3`\n* Similarity transformations (translation ⨯ rotation ⨯ uniform scale): `Similarity2`, `Similarity3`.\n* Affine transformations stored as a homogeneous matrix: `Affine2`, `Affine3`.\n* Projective (i.e. invertible) transformations stored as a homogeneous matrix: `Projective2`,\n  `Projective3`.\n* General transformations that does not have to be invertible, stored as a homogeneous matrix:\n  `Transform2`, `Transform3`.\n* 3D projections for computer graphics: `Perspective3`, `Orthographic3`.\n* Matrix factorizations: `Cholesky`, `QR`, `LU`, `FullPivLU`, `SVD`, `Schur`, `Hessenberg`, `SymmetricEigen`.\n* Insertion and removal of rows of columns of a matrix.\n*/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":0,"byte_end":2939,"line_start":1,"line_end":71,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":2990,"byte_end":3020,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":3021,"byte_end":3044,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":3045,"byte_end":3077,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":3078,"byte_end":3109,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"deny(unused_results)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":3110,"byte_end":3134,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":3135,"byte_end":3157,"line_start":82,"line_end":82,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":62},{"krate":0,"index":316},{"krate":0,"index":360},{"krate":0,"index":380},{"krate":0,"index":463},{"krate":0,"index":584},{"krate":0,"index":715},{"krate":0,"index":1005},{"krate":0,"index":1073},{"krate":0,"index":1204},{"krate":0,"index":1815},{"krate":0,"index":1924},{"krate":0,"index":2023},{"krate":0,"index":2074},{"krate":0,"index":2200},{"krate":0,"index":2248},{"krate":0,"index":2481},{"krate":0,"index":2637},{"krate":0,"index":2788},{"krate":0,"index":3229},{"krate":0,"index":3255},{"krate":0,"index":3412},{"krate":0,"index":3571},{"krate":0,"index":3611},{"krate":0,"index":3622},{"krate":0,"index":3684},{"krate":0,"index":3697},{"krate":0,"index":3771},{"krate":0,"index":3877},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for vector and matrix computations.\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Data structures for vector and matrix computations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14756,"byte_end":14851,"line_start":1,"line_end":1,"column_start":1,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::base::allocator","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":21028},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":21032},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21036},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":29},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":58}],"decl_id":null,"docs":" Abstract definition of a matrix data storage allocator.\n","sig":null,"attributes":[{"value":"/ Abstract definition of a matrix data storage allocator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":15796,"byte_end":15855,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16526,"byte_end":16535,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::base::allocator::Allocator","value":"Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`\n elements of type `N`.","sig":null,"attributes":[{"value":"/ A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16097,"byte_end":16187,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ elements of type `N`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16188,"byte_end":16213,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16214,"byte_end":16217,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An allocator is said to be:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16218,"byte_end":16249,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/   − static:  if `R` and `C` both implement `DimName`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16250,"byte_end":16309,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/   − dynamic: if either one (or both) of `R` or `C` is equal to `Dynamic`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16310,"byte_end":16389,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16390,"byte_end":16393,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Every allocator must be both static and dynamic. Though not all implementations may share the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16394,"byte_end":16491,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ same `Buffer` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16492,"byte_end":16515,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16651,"byte_end":16657,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::base::allocator::Allocator::Buffer","value":"type Buffer: ContiguousStorageMut<N, R, C> + Clone;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The type of buffer this allocator can instanciate.\n","sig":null,"attributes":[{"value":"/ The type of buffer this allocator can instanciate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16587,"byte_end":16641,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16816,"byte_end":16838,"line_start":24,"line_end":24,"column_start":15,"column_end":37},"name":"allocate_uninitialized","qualname":"::base::allocator::Allocator::allocate_uninitialized","value":"pub unsafe fn allocate_uninitialized(R, C) -> Self::Buffer","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Allocates a buffer with the given number of rows and columns without initializing its content.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer with the given number of rows and columns without initializing its content.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16703,"byte_end":16801,"line_start":23,"line_end":23,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16963,"byte_end":16985,"line_start":27,"line_end":27,"column_start":8,"column_end":30},"name":"allocate_from_iterator","qualname":"::base::allocator::Allocator::allocate_from_iterator","value":"pub fn allocate_from_iterator<I: IntoIterator<Item = N>>(R, C, I)\n-> Self::Buffer","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Allocates a buffer initialized with the content of the given iterator.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer initialized with the content of the given iterator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16881,"byte_end":16955,"line_start":26,"line_end":26,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17261,"byte_end":17272,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"Reallocator","qualname":"::base::allocator::Reallocator","value":"Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>: Allocator<N, RFrom, CFrom> + Allocator<N, RTo, CTo>","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×\n CFrom) elements to a smaller or larger size (RTo, CTo).\n","sig":null,"attributes":[{"value":"/ A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17093,"byte_end":17190,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ CFrom) elements to a smaller or larger size (RTo, CTo).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17191,"byte_end":17250,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17882,"byte_end":17897,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"reallocate_copy","qualname":"::base::allocator::Reallocator::reallocate_copy","value":"pub unsafe fn reallocate_copy(RTo, CTo,\n                              <Self as Allocator<N, RFrom, CFrom>>::Buffer)\n-> <Self as Allocator<N, RTo, CTo>>::Buffer","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer\n `buf`. Data stored by `buf` are linearly copied to the output:","sig":null,"attributes":[{"value":"/ Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17391,"byte_end":17485,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `buf`. Data stored by `buf` are linearly copied to the output:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17490,"byte_end":17556,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17561,"byte_end":17564,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * The copy is performed as if both were just arrays (without a matrix structure).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17569,"byte_end":17654,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ * If `buf` is larger than the output size, then extra elements of `buf` are truncated.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17659,"byte_end":17749,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ * If `buf` is smaller than the output size, then extra elements of the output are left","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17754,"byte_end":17844,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ uninitialized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17849,"byte_end":17867,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18144,"byte_end":18154,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SameShapeR","qualname":"::base::allocator::SameShapeR","value":"<ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of rows of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18052,"byte_end":18134,"line_start":53,"line_end":53,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18324,"byte_end":18334,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"SameShapeC","qualname":"::base::allocator::SameShapeC","value":"<ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of columns of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18229,"byte_end":18314,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18522,"byte_end":18540,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"SameShapeAllocator","qualname":"::base::allocator::SameShapeAllocator","value":"SameShapeAllocator<N, R1, C1, R2, C2>: Allocator<N, R1, C1> + Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows and columns to be respectively the same.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows and columns to be respectively the same.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18432,"byte_end":18511,"line_start":60,"line_end":60,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19213,"byte_end":19237,"line_start":87,"line_end":87,"column_start":11,"column_end":35},"name":"SameShapeVectorAllocator","qualname":"::base::allocator::SameShapeVectorAllocator","value":"SameShapeVectorAllocator<N, R1, R2>: Allocator<N, R1> + Allocator<N, SameShapeR<R1, R2>> +\nSameShapeAllocator<N, R1, U1, R2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows to be equal.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows to be equal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19151,"byte_end":19202,"line_start":86,"line_end":86,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20886,"byte_end":20892,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"icamax","qualname":"<Vector<N, D, S>>::icamax","value":"pub fn icamax(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest complex or real absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest complex or real absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20422,"byte_end":20517,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20522,"byte_end":20525,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20530,"byte_end":20545,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20550,"byte_end":20553,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20558,"byte_end":20565,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20570,"byte_end":20601,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20606,"byte_end":20634,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20639,"byte_end":20670,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20675,"byte_end":20703,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(Complex::new(11.0, 3.0), Complex::new(-15.0, 0.0), Complex::new(13.0, 5.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20708,"byte_end":20811,"line_start":30,"line_end":30,"column_start":5,"column_end":108}},{"value":"/ assert_eq!(vec.icamax(), 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20816,"byte_end":20848,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20853,"byte_end":20860,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20865,"byte_end":20874,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21685,"byte_end":21691,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<N, D, S>>::argmax","value":"pub fn argmax(&Self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the largest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21398,"byte_end":21478,"line_start":54,"line_end":54,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21483,"byte_end":21486,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21491,"byte_end":21506,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21511,"byte_end":21514,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21519,"byte_end":21526,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21531,"byte_end":21559,"line_start":59,"line_end":59,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21564,"byte_end":21604,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmax(), (2, 13));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21609,"byte_end":21647,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21652,"byte_end":21659,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21664,"byte_end":21673,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22407,"byte_end":22411,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"imax","qualname":"<Vector<N, D, S>>::imax","value":"pub fn imax(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22138,"byte_end":22208,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22213,"byte_end":22216,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22221,"byte_end":22236,"line_start":84,"line_end":84,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22241,"byte_end":22244,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22249,"byte_end":22256,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22261,"byte_end":22289,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22294,"byte_end":22334,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imax(), 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22339,"byte_end":22369,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22374,"byte_end":22381,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22386,"byte_end":22395,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22744,"byte_end":22749,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"iamax","qualname":"<Vector<N, D, S>>::iamax","value":"pub fn iamax(&Self) -> usize where N: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22465,"byte_end":22544,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22549,"byte_end":22552,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22557,"byte_end":22572,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22577,"byte_end":22580,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22585,"byte_end":22592,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22597,"byte_end":22625,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22630,"byte_end":22670,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamax(), 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22675,"byte_end":22706,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22711,"byte_end":22718,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":22723,"byte_end":22732,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23498,"byte_end":23504,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<N, D, S>>::argmin","value":"pub fn argmin(&Self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the smallest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23209,"byte_end":23290,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23295,"byte_end":23298,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23303,"byte_end":23318,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23323,"byte_end":23326,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23331,"byte_end":23338,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23343,"byte_end":23371,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23376,"byte_end":23416,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmin(), (1, -15));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23421,"byte_end":23460,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23465,"byte_end":23472,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23477,"byte_end":23486,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24221,"byte_end":24225,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"imin","qualname":"<Vector<N, D, S>>::imin","value":"pub fn imin(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":23951,"byte_end":24022,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24027,"byte_end":24030,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24035,"byte_end":24050,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24055,"byte_end":24058,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24063,"byte_end":24070,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24075,"byte_end":24103,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24108,"byte_end":24148,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imin(), 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24153,"byte_end":24183,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24188,"byte_end":24195,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24200,"byte_end":24209,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24559,"byte_end":24564,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"iamin","qualname":"<Vector<N, D, S>>::iamin","value":"pub fn iamin(&Self) -> usize where N: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24279,"byte_end":24359,"line_start":169,"line_end":169,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24364,"byte_end":24367,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24372,"byte_end":24387,"line_start":171,"line_end":171,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24392,"byte_end":24395,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24400,"byte_end":24407,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24412,"byte_end":24440,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24445,"byte_end":24485,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamin(), 0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24490,"byte_end":24521,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24526,"byte_end":24533,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":24538,"byte_end":24547,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25758,"byte_end":25769,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"icamax_full","qualname":"<Matrix<N, R, C, S>>::icamax_full","value":"pub fn icamax_full(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25186,"byte_end":25265,"line_start":203,"line_end":203,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25270,"byte_end":25273,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25278,"byte_end":25293,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25298,"byte_end":25301,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25306,"byte_end":25313,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25318,"byte_end":25349,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25354,"byte_end":25382,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25387,"byte_end":25418,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25423,"byte_end":25453,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(Complex::new(11.0, 1.0), Complex::new(-12.0, 2.0), Complex::new(13.0, 3.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25458,"byte_end":25562,"line_start":212,"line_end":212,"column_start":5,"column_end":109}},{"value":"/                          Complex::new(21.0, 43.0), Complex::new(22.0, 5.0), Complex::new(-23.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25567,"byte_end":25673,"line_start":213,"line_end":213,"column_start":5,"column_end":111}},{"value":"/ assert_eq!(mat.icamax_full(), (1, 0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25678,"byte_end":25720,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25725,"byte_end":25732,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25737,"byte_end":25746,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26740,"byte_end":26750,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"iamax_full","qualname":"<Matrix<N, R, C, S>>::iamax_full","value":"pub fn iamax_full(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26401,"byte_end":26480,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26485,"byte_end":26488,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26493,"byte_end":26508,"line_start":241,"line_end":241,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26513,"byte_end":26516,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26521,"byte_end":26528,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26533,"byte_end":26563,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, -12, 13,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26568,"byte_end":26609,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/                          21, 22, -23);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26614,"byte_end":26656,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.iamax_full(), (1, 2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26661,"byte_end":26702,"line_start":247,"line_end":247,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26707,"byte_end":26714,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26719,"byte_end":26728,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33842,"byte_end":33845,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"dot","qualname":"<Matrix<N, R, C, S>>::dot","value":"pub fn dot<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nSB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> + DimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":32934,"byte_end":33004,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33009,"byte_end":33012,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.transpose() * rhs`. For the sesquilinear complex dot product, use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33017,"byte_end":33109,"line_start":418,"line_end":418,"column_start":5,"column_end":97}},{"value":"/ `self.dotc(rhs)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33114,"byte_end":33135,"line_start":419,"line_end":419,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33140,"byte_end":33143,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33148,"byte_end":33234,"line_start":421,"line_end":421,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33239,"byte_end":33316,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33321,"byte_end":33324,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33329,"byte_end":33344,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33349,"byte_end":33352,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33357,"byte_end":33364,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix2x3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33369,"byte_end":33410,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33415,"byte_end":33458,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33463,"byte_end":33506,"line_start":429,"line_end":429,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(vec1.dot(&vec2), 1.4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33511,"byte_end":33548,"line_start":430,"line_end":430,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33553,"byte_end":33556,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33561,"byte_end":33605,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33610,"byte_end":33655,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix2x3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33660,"byte_end":33704,"line_start":434,"line_end":434,"column_start":5,"column_end":49}},{"value":"/                           0.4, 0.5, 0.6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33709,"byte_end":33754,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(mat1.dot(&mat2), 9.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33759,"byte_end":33796,"line_start":436,"line_end":436,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33801,"byte_end":33808,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33813,"byte_end":33816,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":33821,"byte_end":33830,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34960,"byte_end":34964,"line_start":468,"line_end":468,"column_start":12,"column_end":16},"name":"dotc","qualname":"<Matrix<N, R, C, S>>::dotc","value":"pub fn dotc<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nN: SimdComplexField, SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> +\nDimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate-linear dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The conjugate-linear dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34052,"byte_end":34139,"line_start":448,"line_end":448,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34144,"byte_end":34147,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.adjoint() * rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34152,"byte_end":34196,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ For real vectors, this is identical to `self.dot(&rhs)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34201,"byte_end":34261,"line_start":451,"line_end":451,"column_start":5,"column_end":65}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34266,"byte_end":34352,"line_start":452,"line_end":452,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34357,"byte_end":34434,"line_start":453,"line_end":453,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34439,"byte_end":34442,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34447,"byte_end":34462,"line_start":455,"line_end":455,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34467,"byte_end":34470,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34475,"byte_end":34482,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector2, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34487,"byte_end":34526,"line_start":458,"line_end":458,"column_start":5,"column_end":44}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34531,"byte_end":34607,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.4, 0.3), Complex::new(0.2, 0.1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34612,"byte_end":34688,"line_start":460,"line_end":460,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(vec1.dotc(&vec2), Complex::new(2.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34693,"byte_end":34751,"line_start":461,"line_end":461,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34756,"byte_end":34759,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ // Note that for complex vectors, we generally have:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34764,"byte_end":34820,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ // vec1.dotc(&vec2) != vec2.dot(&vec2)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34825,"byte_end":34867,"line_start":464,"line_end":464,"column_start":5,"column_end":47}},{"value":"/ assert_ne!(vec1.dotc(&vec2), vec1.dot(&vec2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34872,"byte_end":34922,"line_start":465,"line_end":465,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34927,"byte_end":34934,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":34939,"byte_end":34948,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35858,"byte_end":35864,"line_start":495,"line_end":495,"column_start":12,"column_end":18},"name":"tr_dot","qualname":"<Matrix<N, R, C, S>>::tr_dot","value":"pub fn tr_dot<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nSB: Storage<N, R2, C2>, ShapeConstraint: DimEq<C, R2> + DimEq<R, C2>","parent":null,"children":[],"decl_id":null,"docs":" The dot product between the transpose of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ The dot product between the transpose of `self` and `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35212,"byte_end":35274,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35279,"byte_end":35282,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35287,"byte_end":35302,"line_start":479,"line_end":479,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35307,"byte_end":35310,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35315,"byte_end":35322,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, RowVector3, Matrix2x3, Matrix3x2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35327,"byte_end":35391,"line_start":482,"line_end":482,"column_start":5,"column_end":69}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35396,"byte_end":35439,"line_start":483,"line_end":483,"column_start":5,"column_end":48}},{"value":"/ let vec2 = RowVector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35444,"byte_end":35490,"line_start":484,"line_end":484,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(vec1.tr_dot(&vec2), 1.4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35495,"byte_end":35535,"line_start":485,"line_end":485,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35540,"byte_end":35543,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35548,"byte_end":35592,"line_start":487,"line_end":487,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35597,"byte_end":35642,"line_start":488,"line_end":488,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix3x2::new(0.1, 0.4,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35647,"byte_end":35686,"line_start":489,"line_end":489,"column_start":5,"column_end":44}},{"value":"/                           0.2, 0.5,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35691,"byte_end":35730,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/                           0.3, 0.6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35735,"byte_end":35775,"line_start":491,"line_end":491,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat1.tr_dot(&mat2), 9.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35780,"byte_end":35820,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35825,"byte_end":35832,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":35837,"byte_end":35846,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37960,"byte_end":37965,"line_start":577,"line_end":577,"column_start":12,"column_end":17},"name":"axcpy","qualname":"<Vector<N, D, S>>::axcpy","value":"pub fn axcpy<D2: Dim, SB>(&mut Self, N, &Vector<N, D2, SB>, N, N) where\nSB: Storage<N, D2>, ShapeConstraint: DimEq<D, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x * c + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x * c + b * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37540,"byte_end":37583,"line_start":563,"line_end":563,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37588,"byte_end":37591,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37596,"byte_end":37642,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37647,"byte_end":37650,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37655,"byte_end":37670,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37675,"byte_end":37678,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37683,"byte_end":37690,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37695,"byte_end":37723,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37728,"byte_end":37775,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37780,"byte_end":37823,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"/ vec1.axcpy(5.0, &vec2, 2.0, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37828,"byte_end":37865,"line_start":573,"line_end":573,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37870,"byte_end":37922,"line_start":574,"line_end":574,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37927,"byte_end":37934,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37939,"byte_end":37948,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38962,"byte_end":38966,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"axpy","qualname":"<Vector<N, D, S>>::axpy","value":"pub fn axpy<D2: Dim, SB>(&mut Self, N, &Vector<N, D2, SB>, N) where N: One,\nSB: Storage<N, D2>, ShapeConstraint: DimEq<D, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x + b * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38551,"byte_end":38590,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38595,"byte_end":38598,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38603,"byte_end":38649,"line_start":599,"line_end":599,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38654,"byte_end":38657,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38662,"byte_end":38677,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38682,"byte_end":38685,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38690,"byte_end":38697,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38702,"byte_end":38730,"line_start":604,"line_end":604,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38735,"byte_end":38782,"line_start":605,"line_end":605,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38787,"byte_end":38830,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/ vec1.axpy(10.0, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38835,"byte_end":38867,"line_start":607,"line_end":607,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38872,"byte_end":38924,"line_start":608,"line_end":608,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38929,"byte_end":38936,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":38941,"byte_end":38950,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39835,"byte_end":39839,"line_start":638,"line_end":638,"column_start":12,"column_end":16},"name":"gemv","qualname":"<Vector<N, D, S>>::gemv","value":"pub fn gemv<R2: Dim, C2: Dim, D3: Dim, SB,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, R2, C2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<D, R2> + AreMultipliable<R2, C2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39254,"byte_end":39345,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39350,"byte_end":39380,"line_start":622,"line_end":622,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39385,"byte_end":39388,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39393,"byte_end":39437,"line_start":624,"line_end":624,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39442,"byte_end":39445,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39450,"byte_end":39465,"line_start":626,"line_end":626,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39470,"byte_end":39473,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39478,"byte_end":39485,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39490,"byte_end":39529,"line_start":629,"line_end":629,"column_start":5,"column_end":44}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39534,"byte_end":39576,"line_start":630,"line_end":630,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39581,"byte_end":39619,"line_start":631,"line_end":631,"column_start":5,"column_end":43}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39624,"byte_end":39660,"line_start":632,"line_end":632,"column_start":5,"column_end":41}},{"value":"/                        3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39665,"byte_end":39702,"line_start":633,"line_end":633,"column_start":5,"column_end":42}},{"value":"/ vec1.gemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39707,"byte_end":39745,"line_start":634,"line_end":634,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 21.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39750,"byte_end":39797,"line_start":635,"line_end":635,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39802,"byte_end":39809,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":39814,"byte_end":39823,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43163,"byte_end":43172,"line_start":745,"line_end":745,"column_start":12,"column_end":21},"name":"gemv_symm","qualname":"<Vector<N, D, S>>::gemv_symm","value":"pub fn gemv_symm<D2: Dim, D3: Dim, SB,\n                 SC>(&mut Self, N, &SquareMatrix<N, D2, SB>,\n                     &Vector<N, D3, SC>, N) where N: One,\nSB: Storage<N, D2, D2>, SC: Storage<N, D3>, ShapeConstraint: DimEq<D, D2> +\nAreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.\n","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":42870,"byte_end":42963,"line_start":741,"line_end":741,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":42968,"byte_end":43044,"line_start":742,"line_end":742,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43049,"byte_end":43058,"line_start":743,"line_end":743,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `sygemv` to match the original BLAS terminology.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43063,"byte_end":43151,"line_start":744,"line_end":744,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44761,"byte_end":44767,"line_start":789,"line_end":789,"column_start":12,"column_end":18},"name":"sygemv","qualname":"<Vector<N, D, S>>::sygemv","value":"pub fn sygemv<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &SquareMatrix<N, D2, SB>, &Vector<N, D3, SC>,\n                  N) where N: One, SB: Storage<N, D2, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<D, D2> + AreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43539,"byte_end":43632,"line_start":760,"line_end":760,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43637,"byte_end":43679,"line_start":761,"line_end":761,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43684,"byte_end":43687,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ For hermitian matrices, use `.hegemv` instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43692,"byte_end":43742,"line_start":763,"line_end":763,"column_start":5,"column_end":55}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43747,"byte_end":43841,"line_start":764,"line_end":764,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43846,"byte_end":43892,"line_start":765,"line_end":765,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43897,"byte_end":43900,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43905,"byte_end":43920,"line_start":767,"line_end":767,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43925,"byte_end":43928,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43933,"byte_end":43940,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43945,"byte_end":43984,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":43989,"byte_end":44025,"line_start":771,"line_end":771,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44030,"byte_end":44067,"line_start":772,"line_end":772,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44072,"byte_end":44114,"line_start":773,"line_end":773,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44119,"byte_end":44157,"line_start":774,"line_end":774,"column_start":5,"column_end":43}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44162,"byte_end":44202,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44207,"byte_end":44254,"line_start":776,"line_end":776,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44259,"byte_end":44262,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44267,"byte_end":44270,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44275,"byte_end":44353,"line_start":779,"line_end":779,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44358,"byte_end":44434,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44439,"byte_end":44484,"line_start":781,"line_end":781,"column_start":5,"column_end":50}},{"value":"/ let mat = Matrix2::new(1.0, 9999999.9999999,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44489,"byte_end":44537,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44542,"byte_end":44579,"line_start":783,"line_end":783,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44584,"byte_end":44626,"line_start":784,"line_end":784,"column_start":5,"column_end":47}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44631,"byte_end":44671,"line_start":785,"line_end":785,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44676,"byte_end":44723,"line_start":786,"line_end":786,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44728,"byte_end":44735,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":44740,"byte_end":44749,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46853,"byte_end":46859,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"hegemv","qualname":"<Vector<N, D, S>>::hegemv","value":"pub fn hegemv<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &SquareMatrix<N, D2, SB>, &Vector<N, D3, SC>,\n                  N) where N: SimdComplexField, SB: Storage<N, D2, D2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, D2> +\nAreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45151,"byte_end":45245,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45250,"byte_end":45292,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45297,"byte_end":45300,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45305,"byte_end":45399,"line_start":807,"line_end":807,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45404,"byte_end":45450,"line_start":808,"line_end":808,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45455,"byte_end":45458,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45463,"byte_end":45478,"line_start":810,"line_end":810,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45483,"byte_end":45486,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45491,"byte_end":45498,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45503,"byte_end":45551,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(2.0, -0.1),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45556,"byte_end":45631,"line_start":814,"line_end":814,"column_start":5,"column_end":80}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45636,"byte_end":45711,"line_start":815,"line_end":815,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45716,"byte_end":45796,"line_start":816,"line_end":816,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45801,"byte_end":45877,"line_start":817,"line_end":817,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45882,"byte_end":45962,"line_start":818,"line_end":818,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":45967,"byte_end":46057,"line_start":819,"line_end":819,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46062,"byte_end":46065,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46070,"byte_end":46073,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46078,"byte_end":46156,"line_start":822,"line_end":822,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46161,"byte_end":46237,"line_start":823,"line_end":823,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46242,"byte_end":46287,"line_start":824,"line_end":824,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46292,"byte_end":46295,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(99999999.9, 999999999.9),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46300,"byte_end":46389,"line_start":826,"line_end":826,"column_start":5,"column_end":94}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46394,"byte_end":46469,"line_start":827,"line_end":827,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46474,"byte_end":46554,"line_start":828,"line_end":828,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46559,"byte_end":46635,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46640,"byte_end":46720,"line_start":830,"line_end":830,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46725,"byte_end":46815,"line_start":831,"line_end":831,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46820,"byte_end":46827,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":46832,"byte_end":46841,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49133,"byte_end":49140,"line_start":909,"line_end":909,"column_start":12,"column_end":19},"name":"gemv_tr","qualname":"<Vector<N, D, S>>::gemv_tr","value":"pub fn gemv_tr<R2: Dim, C2: Dim, D3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>,\n                   N) where N: One, SB: Storage<N, R2, C2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, C2> +\nAreMultipliable<C2, R2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48478,"byte_end":48581,"line_start":890,"line_end":890,"column_start":5,"column_end":108}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48586,"byte_end":48616,"line_start":891,"line_end":891,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48621,"byte_end":48624,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48629,"byte_end":48673,"line_start":893,"line_end":893,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48678,"byte_end":48681,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48686,"byte_end":48701,"line_start":895,"line_end":895,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48706,"byte_end":48709,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48714,"byte_end":48721,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48726,"byte_end":48765,"line_start":898,"line_end":898,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48770,"byte_end":48806,"line_start":899,"line_end":899,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48811,"byte_end":48848,"line_start":900,"line_end":900,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48853,"byte_end":48895,"line_start":901,"line_end":901,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48900,"byte_end":48938,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/ let expected = mat.transpose() * vec2 * 10.0 + vec1 * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":48943,"byte_end":49005,"line_start":903,"line_end":903,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49010,"byte_end":49013,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_tr(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49018,"byte_end":49059,"line_start":905,"line_end":905,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49064,"byte_end":49095,"line_start":906,"line_end":906,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49100,"byte_end":49107,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49112,"byte_end":49121,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50483,"byte_end":50490,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"gemv_ad","qualname":"<Vector<N, D, S>>::gemv_ad","value":"pub fn gemv_ad<R2: Dim, C2: Dim, D3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>,\n                   N) where N: SimdComplexField, SB: Storage<N, R2, C2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, C2> +\nAreMultipliable<C2, R2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49532,"byte_end":49633,"line_start":924,"line_end":924,"column_start":5,"column_end":106}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49638,"byte_end":49668,"line_start":925,"line_end":925,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49673,"byte_end":49676,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ For real matrices, this is the same as `.gemv_tr`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49681,"byte_end":49735,"line_start":927,"line_end":927,"column_start":5,"column_end":59}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49740,"byte_end":49784,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49789,"byte_end":49792,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49797,"byte_end":49812,"line_start":930,"line_end":930,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49817,"byte_end":49820,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49825,"byte_end":49832,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49837,"byte_end":49885,"line_start":933,"line_end":933,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49890,"byte_end":49964,"line_start":934,"line_end":934,"column_start":5,"column_end":79}},{"value":"/                        Complex::new(5.0, 6.0), Complex::new(7.0, 8.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":49969,"byte_end":50044,"line_start":935,"line_end":935,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50049,"byte_end":50129,"line_start":936,"line_end":936,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50134,"byte_end":50210,"line_start":937,"line_end":937,"column_start":5,"column_end":81}},{"value":"/ let expected = mat.adjoint() * vec2 * Complex::new(10.0, 20.0) + vec1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50215,"byte_end":50315,"line_start":938,"line_end":938,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50320,"byte_end":50323,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_ad(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50328,"byte_end":50409,"line_start":940,"line_end":940,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50414,"byte_end":50445,"line_start":941,"line_end":941,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50450,"byte_end":50457,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50462,"byte_end":50471,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52431,"byte_end":52434,"line_start":1012,"line_end":1012,"column_start":12,"column_end":15},"name":"ger","qualname":"<Matrix<N, R1, C1, S>>::ger","value":"pub fn ger<D2: Dim, D3: Dim, SB,\n           SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N) where\nN: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":51882,"byte_end":51944,"line_start":995,"line_end":995,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":51949,"byte_end":51952,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":51957,"byte_end":52001,"line_start":997,"line_end":997,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52006,"byte_end":52009,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52014,"byte_end":52029,"line_start":999,"line_end":999,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52034,"byte_end":52037,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52042,"byte_end":52049,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52054,"byte_end":52104,"line_start":1002,"line_end":1002,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2x3::repeat(4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52109,"byte_end":52150,"line_start":1003,"line_end":1003,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52155,"byte_end":52193,"line_start":1004,"line_end":1004,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52198,"byte_end":52241,"line_start":1005,"line_end":1005,"column_start":5,"column_end":48}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52246,"byte_end":52308,"line_start":1006,"line_end":1006,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52313,"byte_end":52316,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ mat.ger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52321,"byte_end":52358,"line_start":1008,"line_end":1008,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52363,"byte_end":52393,"line_start":1009,"line_end":1009,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52398,"byte_end":52405,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52410,"byte_end":52419,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53572,"byte_end":53576,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"gerc","qualname":"<Matrix<N, R1, C1, S>>::gerc","value":"pub fn gerc<D2: Dim, D3: Dim, SB,\n            SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N) where\nN: SimdComplexField, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52779,"byte_end":52839,"line_start":1027,"line_end":1027,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52844,"byte_end":52847,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52852,"byte_end":52896,"line_start":1029,"line_end":1029,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52901,"byte_end":52904,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52909,"byte_end":52924,"line_start":1031,"line_end":1031,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52929,"byte_end":52932,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52937,"byte_end":52944,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52949,"byte_end":52988,"line_start":1034,"line_end":1034,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":52993,"byte_end":53052,"line_start":1035,"line_end":1035,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2x3::repeat(Complex::new(4.0, 5.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53057,"byte_end":53117,"line_start":1036,"line_end":1036,"column_start":5,"column_end":65}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53122,"byte_end":53198,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector3::new(Complex::new(0.6, 0.5), Complex::new(0.4, 0.5), Complex::new(0.2, 0.1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53203,"byte_end":53303,"line_start":1038,"line_end":1038,"column_start":5,"column_end":105}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53308,"byte_end":53408,"line_start":1039,"line_end":1039,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53413,"byte_end":53416,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ mat.gerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53421,"byte_end":53499,"line_start":1041,"line_end":1041,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53504,"byte_end":53534,"line_start":1042,"line_end":1042,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53539,"byte_end":53546,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53551,"byte_end":53560,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54790,"byte_end":54794,"line_start":1082,"line_end":1082,"column_start":12,"column_end":16},"name":"gemm","qualname":"<Matrix<N, R1, C1, S>>::gemm","value":"pub fn gemm<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: One, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C3> + AreMultipliable<R2, C2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":53961,"byte_end":54044,"line_start":1060,"line_end":1060,"column_start":5,"column_end":88}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54049,"byte_end":54083,"line_start":1061,"line_end":1061,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54088,"byte_end":54091,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54096,"byte_end":54140,"line_start":1063,"line_end":1063,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54145,"byte_end":54148,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54153,"byte_end":54168,"line_start":1065,"line_end":1065,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54173,"byte_end":54176,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54181,"byte_end":54188,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54193,"byte_end":54232,"line_start":1068,"line_end":1068,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54237,"byte_end":54291,"line_start":1069,"line_end":1069,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54296,"byte_end":54337,"line_start":1070,"line_end":1070,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54342,"byte_end":54386,"line_start":1071,"line_end":1071,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54391,"byte_end":54436,"line_start":1072,"line_end":1072,"column_start":5,"column_end":50}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54441,"byte_end":54490,"line_start":1073,"line_end":1073,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54495,"byte_end":54544,"line_start":1074,"line_end":1074,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54549,"byte_end":54599,"line_start":1075,"line_end":1075,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2 * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54604,"byte_end":54655,"line_start":1076,"line_end":1076,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54660,"byte_end":54663,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54668,"byte_end":54707,"line_start":1078,"line_end":1078,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(mat1, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54712,"byte_end":54752,"line_start":1079,"line_end":1079,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54757,"byte_end":54764,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":54769,"byte_end":54778,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60914,"byte_end":60921,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"name":"gemm_tr","qualname":"<Matrix<N, R1, C1, S>>::gemm_tr","value":"pub fn gemm_tr<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>,\n                   &Matrix<N, R3, C3, SC>, N) where N: One,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, C2> + SameNumberOfColumns<C1, C3> +\nAreMultipliable<C2, R2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60033,"byte_end":60128,"line_start":1214,"line_end":1214,"column_start":5,"column_end":100}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60133,"byte_end":60167,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60172,"byte_end":60175,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60180,"byte_end":60224,"line_start":1217,"line_end":1217,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60229,"byte_end":60232,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60237,"byte_end":60252,"line_start":1219,"line_end":1219,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60257,"byte_end":60260,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60265,"byte_end":60272,"line_start":1221,"line_end":1221,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60277,"byte_end":60316,"line_start":1222,"line_end":1222,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60321,"byte_end":60375,"line_start":1223,"line_end":1223,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60380,"byte_end":60421,"line_start":1224,"line_end":1224,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(1.0, 4.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60426,"byte_end":60465,"line_start":1225,"line_end":1225,"column_start":5,"column_end":44}},{"value":"/                           2.0, 5.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60470,"byte_end":60509,"line_start":1226,"line_end":1226,"column_start":5,"column_end":44}},{"value":"/                           3.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60514,"byte_end":60554,"line_start":1227,"line_end":1227,"column_start":5,"column_end":45}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60559,"byte_end":60608,"line_start":1228,"line_end":1228,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60613,"byte_end":60662,"line_start":1229,"line_end":1229,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60667,"byte_end":60717,"line_start":1230,"line_end":1230,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2.transpose() * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60722,"byte_end":60785,"line_start":1231,"line_end":1231,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60790,"byte_end":60793,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_tr(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60798,"byte_end":60840,"line_start":1233,"line_end":1233,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60845,"byte_end":60876,"line_start":1234,"line_end":1234,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60881,"byte_end":60888,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":60893,"byte_end":60902,"line_start":1236,"line_end":1236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63310,"byte_end":63317,"line_start":1299,"line_end":1299,"column_start":12,"column_end":19},"name":"gemm_ad","qualname":"<Matrix<N, R1, C1, S>>::gemm_ad","value":"pub fn gemm_ad<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>,\n                   &Matrix<N, R3, C3, SC>, N) where N: SimdComplexField,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, C2> + SameNumberOfColumns<C1, C3> +\nAreMultipliable<C2, R2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":61999,"byte_end":62092,"line_start":1276,"line_end":1276,"column_start":5,"column_end":98}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62097,"byte_end":62131,"line_start":1277,"line_end":1277,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62136,"byte_end":62139,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62144,"byte_end":62188,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62193,"byte_end":62196,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62201,"byte_end":62216,"line_start":1281,"line_end":1281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62221,"byte_end":62224,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62229,"byte_end":62236,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62241,"byte_end":62280,"line_start":1284,"line_end":1284,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62285,"byte_end":62348,"line_start":1285,"line_end":1285,"column_start":5,"column_end":68}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62353,"byte_end":62394,"line_start":1286,"line_end":1286,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(Complex::new(1.0, 4.0), Complex::new(7.0, 8.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62399,"byte_end":62476,"line_start":1287,"line_end":1287,"column_start":5,"column_end":82}},{"value":"/                           Complex::new(2.0, 5.0), Complex::new(9.0, 10.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62481,"byte_end":62559,"line_start":1288,"line_end":1288,"column_start":5,"column_end":83}},{"value":"/                           Complex::new(3.0, 6.0), Complex::new(11.0, 12.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62564,"byte_end":62644,"line_start":1289,"line_end":1289,"column_start":5,"column_end":85}},{"value":"/ let mat3 = Matrix3x4::new(Complex::new(0.1, 1.3), Complex::new(0.2, 1.4), Complex::new(0.3, 1.5), Complex::new(0.4, 1.6),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62649,"byte_end":62774,"line_start":1290,"line_end":1290,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.5, 1.7), Complex::new(0.6, 1.8), Complex::new(0.7, 1.9), Complex::new(0.8, 2.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62779,"byte_end":62904,"line_start":1291,"line_end":1291,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.9, 2.1), Complex::new(1.0, 2.2), Complex::new(1.1, 2.3), Complex::new(1.2, 2.4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":62909,"byte_end":63035,"line_start":1292,"line_end":1292,"column_start":5,"column_end":131}},{"value":"/ let expected = mat2.adjoint() * mat3 * Complex::new(10.0, 20.0) + mat1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63040,"byte_end":63141,"line_start":1293,"line_end":1293,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63146,"byte_end":63149,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_ad(Complex::new(10.0, 20.0), &mat2, &mat3, Complex::new(5.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63154,"byte_end":63236,"line_start":1295,"line_end":1295,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63241,"byte_end":63272,"line_start":1296,"line_end":1296,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63277,"byte_end":63284,"line_start":1297,"line_end":1297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":63289,"byte_end":63298,"line_start":1298,"line_end":1298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66480,"byte_end":66488,"line_start":1395,"line_end":1395,"column_start":12,"column_end":20},"name":"ger_symm","qualname":"<Matrix<N, R1, C1, S>>::ger_symm","value":"pub fn ger_symm<D2: Dim, D3: Dim, SB,\n                SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65491,"byte_end":65585,"line_start":1374,"line_end":1374,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65590,"byte_end":65601,"line_start":1375,"line_end":1375,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65606,"byte_end":65609,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65614,"byte_end":65709,"line_start":1377,"line_end":1377,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65714,"byte_end":65774,"line_start":1378,"line_end":1378,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65779,"byte_end":65782,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65787,"byte_end":65802,"line_start":1380,"line_end":1380,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65807,"byte_end":65810,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65815,"byte_end":65822,"line_start":1382,"line_end":1382,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65827,"byte_end":65866,"line_start":1383,"line_end":1383,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65871,"byte_end":65909,"line_start":1384,"line_end":1384,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65914,"byte_end":65952,"line_start":1385,"line_end":1385,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":65957,"byte_end":65995,"line_start":1386,"line_end":1386,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66000,"byte_end":66062,"line_start":1387,"line_end":1387,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66067,"byte_end":66173,"line_start":1388,"line_end":1388,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66178,"byte_end":66181,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ mat.ger_symm(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66186,"byte_end":66228,"line_start":1390,"line_end":1390,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66233,"byte_end":66297,"line_start":1391,"line_end":1391,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66302,"byte_end":66362,"line_start":1392,"line_end":1392,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66367,"byte_end":66376,"line_start":1393,"line_end":1393,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `syger` to match the original BLAS terminology.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66381,"byte_end":66468,"line_start":1394,"line_end":1394,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67784,"byte_end":67789,"line_start":1431,"line_end":1431,"column_start":12,"column_end":17},"name":"syger","qualname":"<Matrix<N, R1, C1, S>>::syger","value":"pub fn syger<D2: Dim, D3: Dim, SB,\n             SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66827,"byte_end":66921,"line_start":1410,"line_end":1410,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66926,"byte_end":66937,"line_start":1411,"line_end":1411,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66942,"byte_end":66945,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ For hermitian complex matrices, use `.hegerc` instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":66950,"byte_end":67008,"line_start":1413,"line_end":1413,"column_start":5,"column_end":63}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67013,"byte_end":67108,"line_start":1414,"line_end":1414,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67113,"byte_end":67173,"line_start":1415,"line_end":1415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67178,"byte_end":67181,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67186,"byte_end":67201,"line_start":1417,"line_end":1417,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67206,"byte_end":67209,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67214,"byte_end":67221,"line_start":1419,"line_end":1419,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67226,"byte_end":67265,"line_start":1420,"line_end":1420,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67270,"byte_end":67308,"line_start":1421,"line_end":1421,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67313,"byte_end":67351,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67356,"byte_end":67394,"line_start":1423,"line_end":1423,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67399,"byte_end":67461,"line_start":1424,"line_end":1424,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67466,"byte_end":67572,"line_start":1425,"line_end":1425,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67577,"byte_end":67580,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ mat.syger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67585,"byte_end":67624,"line_start":1427,"line_end":1427,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67629,"byte_end":67693,"line_start":1428,"line_end":1428,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67698,"byte_end":67758,"line_start":1429,"line_end":1429,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":67763,"byte_end":67772,"line_start":1430,"line_end":1430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69247,"byte_end":69253,"line_start":1466,"line_end":1466,"column_start":12,"column_end":18},"name":"hegerc","qualname":"<Matrix<N, R1, C1, S>>::hegerc","value":"pub fn hegerc<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: SimdComplexField, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68136,"byte_end":68229,"line_start":1446,"line_end":1446,"column_start":5,"column_end":98}},{"value":"/ matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68234,"byte_end":68245,"line_start":1447,"line_end":1447,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68250,"byte_end":68253,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68258,"byte_end":68353,"line_start":1449,"line_end":1449,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68358,"byte_end":68418,"line_start":1450,"line_end":1450,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68423,"byte_end":68426,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68431,"byte_end":68446,"line_start":1452,"line_end":1452,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68451,"byte_end":68454,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68459,"byte_end":68466,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68471,"byte_end":68519,"line_start":1455,"line_end":1455,"column_start":5,"column_end":53}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68524,"byte_end":68562,"line_start":1456,"line_end":1456,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 3.0), Complex::new(2.0, 4.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68567,"byte_end":68643,"line_start":1457,"line_end":1457,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.2, 0.4), Complex::new(0.1, 0.3));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68648,"byte_end":68724,"line_start":1458,"line_end":1458,"column_start":5,"column_end":81}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68729,"byte_end":68829,"line_start":1459,"line_end":1459,"column_start":5,"column_end":105}},{"value":"/ mat.m12 = Complex::new(99999.99999, 88888.88888); // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68834,"byte_end":68967,"line_start":1460,"line_end":1460,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68972,"byte_end":68975,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ mat.hegerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":68980,"byte_end":69060,"line_start":1462,"line_end":1462,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69065,"byte_end":69129,"line_start":1463,"line_end":1463,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, Complex::new(99999.99999, 88888.88888)); // This was untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69134,"byte_end":69221,"line_start":1464,"line_end":1464,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69226,"byte_end":69235,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":71184,"byte_end":71210,"line_start":1512,"line_end":1512,"column_start":12,"column_end":38},"name":"quadform_tr_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr_with_workspace","value":"pub fn quadform_tr_with_workspace<D2, S2, R3, C3, S3, D4,\n                                  S4>(&mut Self, &mut Vector<N, D2, S2>, N,\n                                      &Matrix<N, R3, C3, S3>,\n                                      &SquareMatrix<N, D4, S4>, N) where\nD2: Dim, R3: Dim, C3: Dim, D4: Dim, S2: StorageMut<N, D2>,\nS3: Storage<N, R3, C3>, S4: Storage<N, D4, D4>,\nShapeConstraint: DimEq<D1, D2> + DimEq<D1, R3> + DimEq<D2, R3> + DimEq<C3, D4>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69768,"byte_end":69859,"line_start":1486,"line_end":1486,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69864,"byte_end":69867,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69872,"byte_end":69962,"line_start":1488,"line_end":1488,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69967,"byte_end":69970,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69975,"byte_end":69990,"line_start":1490,"line_end":1490,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69995,"byte_end":69998,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70003,"byte_end":70010,"line_start":1492,"line_end":1492,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70015,"byte_end":70054,"line_start":1493,"line_end":1493,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70059,"byte_end":70098,"line_start":1494,"line_end":1494,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70103,"byte_end":70177,"line_start":1495,"line_end":1495,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70182,"byte_end":70263,"line_start":1496,"line_end":1496,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70268,"byte_end":70347,"line_start":1497,"line_end":1497,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70352,"byte_end":70428,"line_start":1498,"line_end":1498,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70433,"byte_end":70475,"line_start":1499,"line_end":1499,"column_start":5,"column_end":47}},{"value":"/ let lhs = DMatrix::from_row_slice(2, 3, &[1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70480,"byte_end":70540,"line_start":1500,"line_end":1500,"column_start":5,"column_end":65}},{"value":"/                                           4.0, 5.0, 6.0]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70545,"byte_end":70607,"line_start":1501,"line_end":1501,"column_start":5,"column_end":67}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70612,"byte_end":70672,"line_start":1502,"line_end":1502,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70677,"byte_end":70737,"line_start":1503,"line_end":1503,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70742,"byte_end":70804,"line_start":1504,"line_end":1504,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70809,"byte_end":70868,"line_start":1505,"line_end":1505,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70873,"byte_end":70915,"line_start":1506,"line_end":1506,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70920,"byte_end":70967,"line_start":1507,"line_end":1507,"column_start":5,"column_end":52}},{"value":"/ let expected = &lhs * &mid * lhs.transpose() * 10.0 + &mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":70972,"byte_end":71041,"line_start":1508,"line_end":1508,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":71046,"byte_end":71049,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr_with_workspace(&mut workspace, 10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":71054,"byte_end":71128,"line_start":1510,"line_end":1510,"column_start":5,"column_end":79}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":71133,"byte_end":71172,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72971,"byte_end":72982,"line_start":1559,"line_end":1559,"column_start":12,"column_end":23},"name":"quadform_tr","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr","value":"pub fn quadform_tr<R3, C3, S3, D4,\n                   S4>(&mut Self, N, &Matrix<N, R3, C3, S3>,\n                       &SquareMatrix<N, D4, S4>, N) where R3: Dim, C3: Dim,\nD4: Dim, S3: Storage<N, R3, C3>, S4: Storage<N, D4, D4>,\nShapeConstraint: DimEq<D1, D1> + DimEq<D1, R3> + DimEq<C3, D4>,\nDefaultAllocator: Allocator<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72005,"byte_end":72096,"line_start":1538,"line_end":1538,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72101,"byte_end":72104,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D1 for intermediate results.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72109,"byte_end":72188,"line_start":1540,"line_end":1540,"column_start":5,"column_end":84}},{"value":"/ If `D1` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72193,"byte_end":72276,"line_start":1541,"line_end":1541,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_tr_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72281,"byte_end":72353,"line_start":1542,"line_end":1542,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72358,"byte_end":72361,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72366,"byte_end":72381,"line_start":1544,"line_end":1544,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72386,"byte_end":72389,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72394,"byte_end":72401,"line_start":1546,"line_end":1546,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72406,"byte_end":72445,"line_start":1547,"line_end":1547,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3, Matrix2x3, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72450,"byte_end":72509,"line_start":1548,"line_end":1548,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72514,"byte_end":72552,"line_start":1549,"line_end":1549,"column_start":5,"column_end":43}},{"value":"/ let lhs = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72557,"byte_end":72600,"line_start":1550,"line_end":1550,"column_start":5,"column_end":48}},{"value":"/                          4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72605,"byte_end":72649,"line_start":1551,"line_end":1551,"column_start":5,"column_end":49}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72654,"byte_end":72695,"line_start":1552,"line_end":1552,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72700,"byte_end":72741,"line_start":1553,"line_end":1553,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72746,"byte_end":72788,"line_start":1554,"line_end":1554,"column_start":5,"column_end":47}},{"value":"/ let expected = lhs * mid * lhs.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72793,"byte_end":72859,"line_start":1555,"line_end":1555,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72864,"byte_end":72867,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr(10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72872,"byte_end":72915,"line_start":1557,"line_end":1557,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":72920,"byte_end":72959,"line_start":1558,"line_end":1558,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74997,"byte_end":75020,"line_start":1603,"line_end":1603,"column_start":12,"column_end":35},"name":"quadform_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_with_workspace","value":"pub fn quadform_with_workspace<D2, S2, D3, S3, R4, C4,\n                               S4>(&mut Self, &mut Vector<N, D2, S2>, N,\n                                   &SquareMatrix<N, D3, S3>,\n                                   &Matrix<N, R4, C4, S4>, N) where D2: Dim,\nD3: Dim, R4: Dim, C4: Dim, S2: StorageMut<N, D2>, S3: Storage<N, D3, D3>,\nS4: Storage<N, R4, C4>, ShapeConstraint: DimEq<D3, R4> + DimEq<D1, C4> +\nDimEq<D2, D3> + AreMultipliable<C4, R4, D2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73562,"byte_end":73653,"line_start":1578,"line_end":1578,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73658,"byte_end":73661,"line_start":1579,"line_end":1579,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73666,"byte_end":73756,"line_start":1580,"line_end":1580,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73761,"byte_end":73764,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73769,"byte_end":73776,"line_start":1582,"line_end":1582,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73781,"byte_end":73820,"line_start":1583,"line_end":1583,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73825,"byte_end":73864,"line_start":1584,"line_end":1584,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73869,"byte_end":73943,"line_start":1585,"line_end":1585,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":73948,"byte_end":74029,"line_start":1586,"line_end":1586,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74034,"byte_end":74113,"line_start":1587,"line_end":1587,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74118,"byte_end":74194,"line_start":1588,"line_end":1588,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74199,"byte_end":74241,"line_start":1589,"line_end":1589,"column_start":5,"column_end":47}},{"value":"/ let rhs = DMatrix::from_row_slice(3, 2, &[1.0, 2.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74246,"byte_end":74301,"line_start":1590,"line_end":1590,"column_start":5,"column_end":60}},{"value":"/                                           3.0, 4.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74306,"byte_end":74361,"line_start":1591,"line_end":1591,"column_start":5,"column_end":60}},{"value":"/                                           5.0, 6.0]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74366,"byte_end":74423,"line_start":1592,"line_end":1592,"column_start":5,"column_end":62}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74428,"byte_end":74488,"line_start":1593,"line_end":1593,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74493,"byte_end":74553,"line_start":1594,"line_end":1594,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74558,"byte_end":74620,"line_start":1595,"line_end":1595,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74625,"byte_end":74684,"line_start":1596,"line_end":1596,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74689,"byte_end":74731,"line_start":1597,"line_end":1597,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74736,"byte_end":74783,"line_start":1598,"line_end":1598,"column_start":5,"column_end":52}},{"value":"/ let expected = rhs.transpose() * &mid * &rhs * 10.0 + &mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74788,"byte_end":74857,"line_start":1599,"line_end":1599,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74862,"byte_end":74865,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_with_workspace(&mut workspace, 10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74870,"byte_end":74941,"line_start":1601,"line_end":1601,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":74946,"byte_end":74985,"line_start":1602,"line_end":1602,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76875,"byte_end":76883,"line_start":1652,"line_end":1652,"column_start":12,"column_end":20},"name":"quadform","qualname":"<SquareMatrix<N, D1, S>>::quadform","value":"pub fn quadform<D2, S2, R3, C3,\n                S3>(&mut Self, N, &SquareMatrix<N, D2, S2>,\n                    &Matrix<N, R3, C3, S3>, N) where D2: Dim, R3: Dim,\nC3: Dim, S2: Storage<N, D2, D2>, S3: Storage<N, R3, C3>,\nShapeConstraint: DimEq<D2, R3> + DimEq<D1, C3> +\nAreMultipliable<C3, R3, D2, U1>, DefaultAllocator: Allocator<N, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":75919,"byte_end":76010,"line_start":1632,"line_end":1632,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76015,"byte_end":76018,"line_start":1633,"line_end":1633,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D2 for intermediate results.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76023,"byte_end":76102,"line_start":1634,"line_end":1634,"column_start":5,"column_end":84}},{"value":"/ If `D2` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76107,"byte_end":76190,"line_start":1635,"line_end":1635,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76195,"byte_end":76264,"line_start":1636,"line_end":1636,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76269,"byte_end":76272,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76277,"byte_end":76284,"line_start":1638,"line_end":1638,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76289,"byte_end":76328,"line_start":1639,"line_end":1639,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3x2, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76333,"byte_end":76383,"line_start":1640,"line_end":1640,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76388,"byte_end":76426,"line_start":1641,"line_end":1641,"column_start":5,"column_end":43}},{"value":"/ let rhs = Matrix3x2::new(1.0, 2.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76431,"byte_end":76469,"line_start":1642,"line_end":1642,"column_start":5,"column_end":43}},{"value":"/                          3.0, 4.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76474,"byte_end":76512,"line_start":1643,"line_end":1643,"column_start":5,"column_end":43}},{"value":"/                          5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76517,"byte_end":76556,"line_start":1644,"line_end":1644,"column_start":5,"column_end":44}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76561,"byte_end":76602,"line_start":1645,"line_end":1645,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76607,"byte_end":76648,"line_start":1646,"line_end":1646,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76653,"byte_end":76695,"line_start":1647,"line_end":1647,"column_start":5,"column_end":47}},{"value":"/ let expected = rhs.transpose() * mid * rhs * 10.0 + mat * 5.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76700,"byte_end":76766,"line_start":1648,"line_end":1648,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76771,"byte_end":76774,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ mat.quadform(10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76779,"byte_end":76819,"line_start":1650,"line_end":1650,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":76824,"byte_end":76863,"line_start":1651,"line_end":1651,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constraint","qualname":"::base::constraint","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":8254},{"krate":0,"index":8258},{"krate":0,"index":8261},{"krate":0,"index":8264},{"krate":0,"index":8267},{"krate":0,"index":8271},{"krate":0,"index":8274},{"krate":0,"index":8277},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357}],"decl_id":null,"docs":" Compatibility constraints between matrix shapes, e.g., for addition or multiplication.\n","sig":null,"attributes":[{"value":"/ Compatibility constraints between matrix shapes, e.g., for addition or multiplication.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77475,"byte_end":77565,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77694,"byte_end":77709,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"ShapeConstraint","qualname":"::base::constraint::ShapeConstraint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used in `where` clauses for enforcing constraints.\n","sig":null,"attributes":[{"value":"/ A type used in `where` clauses for enforcing constraints.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77621,"byte_end":77682,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77770,"byte_end":77785,"line_start":9,"line_end":9,"column_start":11,"column_end":26},"name":"AreMultipliable","qualname":"::base::constraint::AreMultipliable","value":"AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Constraints `C1` and `R2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `C1` and `R2` to be equivalent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77712,"byte_end":77759,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78038,"byte_end":78043,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"DimEq","qualname":"::base::constraint::DimEq","value":"DimEq<D1: Dim, D2: Dim>","parent":null,"children":[{"krate":0,"index":336}],"decl_id":null,"docs":" Constraints `D1` and `D2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `D1` and `D2` to be equivalent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77980,"byte_end":78027,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78192,"byte_end":78206,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::DimEq::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78068,"byte_end":78164,"line_start":18,"line_end":18,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78169,"byte_end":78182,"line_start":19,"line_end":19,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":8254},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79439,"byte_end":79455,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"SameNumberOfRows","qualname":"::base::constraint::SameNumberOfRows","value":"SameNumberOfRows<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8257}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8267},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79589,"byte_end":79608,"line_start":67,"line_end":67,"column_start":5,"column_end":24},"name":"SameNumberOfColumns","qualname":"::base::constraint::SameNumberOfColumns","value":"SameNumberOfColumns<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8270}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79754,"byte_end":79767,"line_start":72,"line_end":72,"column_start":11,"column_end":24},"name":"SameDimension","qualname":"::base::constraint::SameDimension","value":"SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2>","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic\n entities (e.g. square matrices).\n","sig":null,"attributes":[{"value":"/ Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79613,"byte_end":79706,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/ entities (e.g. square matrices).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79707,"byte_end":79743,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79976,"byte_end":79990,"line_start":77,"line_end":77,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::SameDimension::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79852,"byte_end":79948,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79953,"byte_end":79966,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coordinates","qualname":"::base::coordinates","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":21112},{"krate":0,"index":367},{"krate":0,"index":21114},{"krate":0,"index":368},{"krate":0,"index":21116},{"krate":0,"index":369},{"krate":0,"index":21118},{"krate":0,"index":370},{"krate":0,"index":21120},{"krate":0,"index":371},{"krate":0,"index":21122},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":8280},{"krate":0,"index":8301},{"krate":0,"index":8303},{"krate":0,"index":8295},{"krate":0,"index":8297},{"krate":0,"index":8292},{"krate":0,"index":8288},{"krate":0,"index":8285},{"krate":0,"index":8283},{"krate":0,"index":8306},{"krate":0,"index":8328},{"krate":0,"index":8330},{"krate":0,"index":8322},{"krate":0,"index":8324},{"krate":0,"index":8319},{"krate":0,"index":8315},{"krate":0,"index":8312},{"krate":0,"index":8310},{"krate":0,"index":8333},{"krate":0,"index":8356},{"krate":0,"index":8358},{"krate":0,"index":8350},{"krate":0,"index":8352},{"krate":0,"index":8347},{"krate":0,"index":8343},{"krate":0,"index":8340},{"krate":0,"index":8338},{"krate":0,"index":8361},{"krate":0,"index":8385},{"krate":0,"index":8387},{"krate":0,"index":8379},{"krate":0,"index":8381},{"krate":0,"index":8376},{"krate":0,"index":8372},{"krate":0,"index":8369},{"krate":0,"index":8367},{"krate":0,"index":8390},{"krate":0,"index":8415},{"krate":0,"index":8417},{"krate":0,"index":8409},{"krate":0,"index":8411},{"krate":0,"index":8406},{"krate":0,"index":8402},{"krate":0,"index":8399},{"krate":0,"index":8397},{"krate":0,"index":8420},{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8440},{"krate":0,"index":8442},{"krate":0,"index":8437},{"krate":0,"index":8433},{"krate":0,"index":8430},{"krate":0,"index":8428},{"krate":0,"index":8451},{"krate":0,"index":8475},{"krate":0,"index":8477},{"krate":0,"index":8469},{"krate":0,"index":8471},{"krate":0,"index":8466},{"krate":0,"index":8462},{"krate":0,"index":8459},{"krate":0,"index":8457},{"krate":0,"index":8480},{"krate":0,"index":8504},{"krate":0,"index":8506},{"krate":0,"index":8498},{"krate":0,"index":8500},{"krate":0,"index":8495},{"krate":0,"index":8491},{"krate":0,"index":8488},{"krate":0,"index":8486},{"krate":0,"index":8509},{"krate":0,"index":8535},{"krate":0,"index":8537},{"krate":0,"index":8529},{"krate":0,"index":8531},{"krate":0,"index":8526},{"krate":0,"index":8522},{"krate":0,"index":8519},{"krate":0,"index":8517},{"krate":0,"index":8540},{"krate":0,"index":8568},{"krate":0,"index":8570},{"krate":0,"index":8562},{"krate":0,"index":8564},{"krate":0,"index":8559},{"krate":0,"index":8555},{"krate":0,"index":8552},{"krate":0,"index":8550},{"krate":0,"index":8573},{"krate":0,"index":8603},{"krate":0,"index":8605},{"krate":0,"index":8597},{"krate":0,"index":8599},{"krate":0,"index":8594},{"krate":0,"index":8590},{"krate":0,"index":8587},{"krate":0,"index":8585},{"krate":0,"index":8608},{"krate":0,"index":8640},{"krate":0,"index":8642},{"krate":0,"index":8634},{"krate":0,"index":8636},{"krate":0,"index":8631},{"krate":0,"index":8627},{"krate":0,"index":8624},{"krate":0,"index":8622},{"krate":0,"index":8645},{"krate":0,"index":8671},{"krate":0,"index":8673},{"krate":0,"index":8665},{"krate":0,"index":8667},{"krate":0,"index":8662},{"krate":0,"index":8658},{"krate":0,"index":8655},{"krate":0,"index":8653},{"krate":0,"index":8676},{"krate":0,"index":8705},{"krate":0,"index":8707},{"krate":0,"index":8699},{"krate":0,"index":8701},{"krate":0,"index":8696},{"krate":0,"index":8692},{"krate":0,"index":8689},{"krate":0,"index":8687},{"krate":0,"index":8710},{"krate":0,"index":8742},{"krate":0,"index":8744},{"krate":0,"index":8736},{"krate":0,"index":8738},{"krate":0,"index":8733},{"krate":0,"index":8729},{"krate":0,"index":8726},{"krate":0,"index":8724},{"krate":0,"index":8747},{"krate":0,"index":8782},{"krate":0,"index":8784},{"krate":0,"index":8776},{"krate":0,"index":8778},{"krate":0,"index":8773},{"krate":0,"index":8769},{"krate":0,"index":8766},{"krate":0,"index":8764},{"krate":0,"index":8787},{"krate":0,"index":8825},{"krate":0,"index":8827},{"krate":0,"index":8819},{"krate":0,"index":8821},{"krate":0,"index":8816},{"krate":0,"index":8812},{"krate":0,"index":8809},{"krate":0,"index":8807},{"krate":0,"index":8830},{"krate":0,"index":8858},{"krate":0,"index":8860},{"krate":0,"index":8852},{"krate":0,"index":8854},{"krate":0,"index":8849},{"krate":0,"index":8845},{"krate":0,"index":8842},{"krate":0,"index":8840},{"krate":0,"index":8863},{"krate":0,"index":8895},{"krate":0,"index":8897},{"krate":0,"index":8889},{"krate":0,"index":8891},{"krate":0,"index":8886},{"krate":0,"index":8882},{"krate":0,"index":8879},{"krate":0,"index":8877},{"krate":0,"index":8900},{"krate":0,"index":8936},{"krate":0,"index":8938},{"krate":0,"index":8930},{"krate":0,"index":8932},{"krate":0,"index":8927},{"krate":0,"index":8923},{"krate":0,"index":8920},{"krate":0,"index":8918},{"krate":0,"index":8941},{"krate":0,"index":8981},{"krate":0,"index":8983},{"krate":0,"index":8975},{"krate":0,"index":8977},{"krate":0,"index":8972},{"krate":0,"index":8968},{"krate":0,"index":8965},{"krate":0,"index":8963},{"krate":0,"index":8986},{"krate":0,"index":9030},{"krate":0,"index":9032},{"krate":0,"index":9024},{"krate":0,"index":9026},{"krate":0,"index":9021},{"krate":0,"index":9017},{"krate":0,"index":9014},{"krate":0,"index":9012},{"krate":0,"index":9035},{"krate":0,"index":9065},{"krate":0,"index":9067},{"krate":0,"index":9059},{"krate":0,"index":9061},{"krate":0,"index":9056},{"krate":0,"index":9052},{"krate":0,"index":9049},{"krate":0,"index":9047},{"krate":0,"index":9070},{"krate":0,"index":9105},{"krate":0,"index":9107},{"krate":0,"index":9099},{"krate":0,"index":9101},{"krate":0,"index":9096},{"krate":0,"index":9092},{"krate":0,"index":9089},{"krate":0,"index":9087},{"krate":0,"index":9110},{"krate":0,"index":9150},{"krate":0,"index":9152},{"krate":0,"index":9144},{"krate":0,"index":9146},{"krate":0,"index":9141},{"krate":0,"index":9137},{"krate":0,"index":9134},{"krate":0,"index":9132},{"krate":0,"index":9155},{"krate":0,"index":9200},{"krate":0,"index":9202},{"krate":0,"index":9194},{"krate":0,"index":9196},{"krate":0,"index":9191},{"krate":0,"index":9187},{"krate":0,"index":9184},{"krate":0,"index":9182},{"krate":0,"index":9205},{"krate":0,"index":9255},{"krate":0,"index":9257},{"krate":0,"index":9249},{"krate":0,"index":9251},{"krate":0,"index":9246},{"krate":0,"index":9242},{"krate":0,"index":9239},{"krate":0,"index":9237},{"krate":0,"index":9260},{"krate":0,"index":9292},{"krate":0,"index":9294},{"krate":0,"index":9286},{"krate":0,"index":9288},{"krate":0,"index":9283},{"krate":0,"index":9279},{"krate":0,"index":9276},{"krate":0,"index":9274},{"krate":0,"index":9297},{"krate":0,"index":9335},{"krate":0,"index":9337},{"krate":0,"index":9329},{"krate":0,"index":9331},{"krate":0,"index":9326},{"krate":0,"index":9322},{"krate":0,"index":9319},{"krate":0,"index":9317},{"krate":0,"index":9340},{"krate":0,"index":9384},{"krate":0,"index":9386},{"krate":0,"index":9378},{"krate":0,"index":9380},{"krate":0,"index":9375},{"krate":0,"index":9371},{"krate":0,"index":9368},{"krate":0,"index":9366},{"krate":0,"index":9389},{"krate":0,"index":9439},{"krate":0,"index":9441},{"krate":0,"index":9433},{"krate":0,"index":9435},{"krate":0,"index":9430},{"krate":0,"index":9426},{"krate":0,"index":9423},{"krate":0,"index":9421},{"krate":0,"index":9444},{"krate":0,"index":9500},{"krate":0,"index":9502},{"krate":0,"index":9494},{"krate":0,"index":9496},{"krate":0,"index":9491},{"krate":0,"index":9487},{"krate":0,"index":9484},{"krate":0,"index":9482},{"krate":0,"index":9505},{"krate":0,"index":9510},{"krate":0,"index":9514},{"krate":0,"index":9519},{"krate":0,"index":9523},{"krate":0,"index":9528},{"krate":0,"index":9532},{"krate":0,"index":9537},{"krate":0,"index":9541},{"krate":0,"index":9546},{"krate":0,"index":9550},{"krate":0,"index":9555},{"krate":0,"index":9559},{"krate":0,"index":9564},{"krate":0,"index":9568},{"krate":0,"index":9573},{"krate":0,"index":9577},{"krate":0,"index":9582},{"krate":0,"index":9586},{"krate":0,"index":9591},{"krate":0,"index":9595},{"krate":0,"index":9600},{"krate":0,"index":9604},{"krate":0,"index":9609},{"krate":0,"index":9613},{"krate":0,"index":9618},{"krate":0,"index":9622},{"krate":0,"index":9627},{"krate":0,"index":9631},{"krate":0,"index":9636},{"krate":0,"index":9640},{"krate":0,"index":9645},{"krate":0,"index":9649},{"krate":0,"index":9654},{"krate":0,"index":9658},{"krate":0,"index":9663},{"krate":0,"index":9667},{"krate":0,"index":9672},{"krate":0,"index":9676},{"krate":0,"index":9681},{"krate":0,"index":9685},{"krate":0,"index":9690},{"krate":0,"index":9694},{"krate":0,"index":9699},{"krate":0,"index":9703},{"krate":0,"index":9708},{"krate":0,"index":9712},{"krate":0,"index":9717},{"krate":0,"index":9721},{"krate":0,"index":9726},{"krate":0,"index":9730},{"krate":0,"index":9735},{"krate":0,"index":9739},{"krate":0,"index":9744},{"krate":0,"index":9748},{"krate":0,"index":9753},{"krate":0,"index":9757},{"krate":0,"index":9762},{"krate":0,"index":9766},{"krate":0,"index":9771},{"krate":0,"index":9775},{"krate":0,"index":9780},{"krate":0,"index":9784},{"krate":0,"index":9789},{"krate":0,"index":9793},{"krate":0,"index":9798},{"krate":0,"index":9802},{"krate":0,"index":9807},{"krate":0,"index":9811},{"krate":0,"index":9816},{"krate":0,"index":9820},{"krate":0,"index":9825}],"decl_id":null,"docs":" Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access\n components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead\n of `v[2]`.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80281,"byte_end":80304,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/ Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80306,"byte_end":80402,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80403,"byte_end":80500,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ of `v[2]`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80501,"byte_end":80515,"line_start":5,"line_end":5,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8280},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81991,"byte_end":81992,"line_start":60,"line_end":60,"column_start":14,"column_end":15},"name":"X","qualname":"::base::coordinates::X","value":"X { x }","parent":null,"children":[{"krate":0,"index":8282}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8282},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81994,"byte_end":81995,"line_start":60,"line_end":60,"column_start":17,"column_end":18},"name":"x","qualname":"::base::coordinates::X::x","value":"N","parent":{"krate":0,"index":8280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8306},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82011,"byte_end":82013,"line_start":61,"line_end":61,"column_start":14,"column_end":16},"name":"XY","qualname":"::base::coordinates::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":8308},{"krate":0,"index":8309}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8308},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82015,"byte_end":82016,"line_start":61,"line_end":61,"column_start":18,"column_end":19},"name":"x","qualname":"::base::coordinates::XY::x","value":"N","parent":{"krate":0,"index":8306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8309},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82018,"byte_end":82019,"line_start":61,"line_end":61,"column_start":21,"column_end":22},"name":"y","qualname":"::base::coordinates::XY::y","value":"N","parent":{"krate":0,"index":8306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8333},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82035,"byte_end":82038,"line_start":62,"line_end":62,"column_start":14,"column_end":17},"name":"XYZ","qualname":"::base::coordinates::XYZ","value":"XYZ { x, y, z }","parent":null,"children":[{"krate":0,"index":8335},{"krate":0,"index":8336},{"krate":0,"index":8337}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8335},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82040,"byte_end":82041,"line_start":62,"line_end":62,"column_start":19,"column_end":20},"name":"x","qualname":"::base::coordinates::XYZ::x","value":"N","parent":{"krate":0,"index":8333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8336},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82043,"byte_end":82044,"line_start":62,"line_end":62,"column_start":22,"column_end":23},"name":"y","qualname":"::base::coordinates::XYZ::y","value":"N","parent":{"krate":0,"index":8333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82046,"byte_end":82047,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"name":"z","qualname":"::base::coordinates::XYZ::z","value":"N","parent":{"krate":0,"index":8333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8361},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82063,"byte_end":82067,"line_start":63,"line_end":63,"column_start":14,"column_end":18},"name":"XYZW","qualname":"::base::coordinates::XYZW","value":"XYZW { x, y, z, w }","parent":null,"children":[{"krate":0,"index":8363},{"krate":0,"index":8364},{"krate":0,"index":8365},{"krate":0,"index":8366}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8363},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82069,"byte_end":82070,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"name":"x","qualname":"::base::coordinates::XYZW::x","value":"N","parent":{"krate":0,"index":8361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82072,"byte_end":82073,"line_start":63,"line_end":63,"column_start":23,"column_end":24},"name":"y","qualname":"::base::coordinates::XYZW::y","value":"N","parent":{"krate":0,"index":8361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8365},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82075,"byte_end":82076,"line_start":63,"line_end":63,"column_start":26,"column_end":27},"name":"z","qualname":"::base::coordinates::XYZW::z","value":"N","parent":{"krate":0,"index":8361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8366},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82078,"byte_end":82079,"line_start":63,"line_end":63,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::XYZW::w","value":"N","parent":{"krate":0,"index":8361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8390},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82095,"byte_end":82100,"line_start":64,"line_end":64,"column_start":14,"column_end":19},"name":"XYZWA","qualname":"::base::coordinates::XYZWA","value":"XYZWA { x, y, z, w, a }","parent":null,"children":[{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8394},{"krate":0,"index":8395},{"krate":0,"index":8396}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8392},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82102,"byte_end":82103,"line_start":64,"line_end":64,"column_start":21,"column_end":22},"name":"x","qualname":"::base::coordinates::XYZWA::x","value":"N","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8393},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82105,"byte_end":82106,"line_start":64,"line_end":64,"column_start":24,"column_end":25},"name":"y","qualname":"::base::coordinates::XYZWA::y","value":"N","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8394},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82108,"byte_end":82109,"line_start":64,"line_end":64,"column_start":27,"column_end":28},"name":"z","qualname":"::base::coordinates::XYZWA::z","value":"N","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8395},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82111,"byte_end":82112,"line_start":64,"line_end":64,"column_start":30,"column_end":31},"name":"w","qualname":"::base::coordinates::XYZWA::w","value":"N","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8396},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82114,"byte_end":82115,"line_start":64,"line_end":64,"column_start":33,"column_end":34},"name":"a","qualname":"::base::coordinates::XYZWA::a","value":"N","parent":{"krate":0,"index":8390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8420},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82131,"byte_end":82137,"line_start":65,"line_end":65,"column_start":14,"column_end":20},"name":"XYZWAB","qualname":"::base::coordinates::XYZWAB","value":"XYZWAB { x, y, z, w, a, b }","parent":null,"children":[{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425},{"krate":0,"index":8426},{"krate":0,"index":8427}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8422},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82139,"byte_end":82140,"line_start":65,"line_end":65,"column_start":22,"column_end":23},"name":"x","qualname":"::base::coordinates::XYZWAB::x","value":"N","parent":{"krate":0,"index":8420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8423},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82142,"byte_end":82143,"line_start":65,"line_end":65,"column_start":25,"column_end":26},"name":"y","qualname":"::base::coordinates::XYZWAB::y","value":"N","parent":{"krate":0,"index":8420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8424},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82145,"byte_end":82146,"line_start":65,"line_end":65,"column_start":28,"column_end":29},"name":"z","qualname":"::base::coordinates::XYZWAB::z","value":"N","parent":{"krate":0,"index":8420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8425},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82148,"byte_end":82149,"line_start":65,"line_end":65,"column_start":31,"column_end":32},"name":"w","qualname":"::base::coordinates::XYZWAB::w","value":"N","parent":{"krate":0,"index":8420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8426},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82151,"byte_end":82152,"line_start":65,"line_end":65,"column_start":34,"column_end":35},"name":"a","qualname":"::base::coordinates::XYZWAB::a","value":"N","parent":{"krate":0,"index":8420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8427},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82154,"byte_end":82155,"line_start":65,"line_end":65,"column_start":37,"column_end":38},"name":"b","qualname":"::base::coordinates::XYZWAB::b","value":"N","parent":{"krate":0,"index":8420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8451},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82171,"byte_end":82175,"line_start":66,"line_end":66,"column_start":14,"column_end":18},"name":"IJKW","qualname":"::base::coordinates::IJKW","value":"IJKW { i, j, k, w }","parent":null,"children":[{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8456}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8453},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82177,"byte_end":82178,"line_start":66,"line_end":66,"column_start":20,"column_end":21},"name":"i","qualname":"::base::coordinates::IJKW::i","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8454},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82180,"byte_end":82181,"line_start":66,"line_end":66,"column_start":23,"column_end":24},"name":"j","qualname":"::base::coordinates::IJKW::j","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8455},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82183,"byte_end":82184,"line_start":66,"line_end":66,"column_start":26,"column_end":27},"name":"k","qualname":"::base::coordinates::IJKW::k","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8456},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82186,"byte_end":82187,"line_start":66,"line_end":66,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::IJKW::w","value":"N","parent":{"krate":0,"index":8451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8480},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82248,"byte_end":82252,"line_start":71,"line_end":71,"column_start":14,"column_end":18},"name":"M2x2","qualname":"::base::coordinates::M2x2","value":"M2x2 { m11, m21, m12, m22 }","parent":null,"children":[{"krate":0,"index":8482},{"krate":0,"index":8483},{"krate":0,"index":8484},{"krate":0,"index":8485}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8482},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82254,"byte_end":82257,"line_start":71,"line_end":71,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x2::m11","value":"N","parent":{"krate":0,"index":8480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8483},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82259,"byte_end":82262,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x2::m21","value":"N","parent":{"krate":0,"index":8480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8484},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82283,"byte_end":82286,"line_start":72,"line_end":72,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x2::m12","value":"N","parent":{"krate":0,"index":8480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8485},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82288,"byte_end":82291,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x2::m22","value":"N","parent":{"krate":0,"index":8480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8509},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82307,"byte_end":82311,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"M2x3","qualname":"::base::coordinates::M2x3","value":"M2x3 { m11, m21, m12, m22, m13, m23 }","parent":null,"children":[{"krate":0,"index":8511},{"krate":0,"index":8512},{"krate":0,"index":8513},{"krate":0,"index":8514},{"krate":0,"index":8515},{"krate":0,"index":8516}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8511},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82313,"byte_end":82316,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x3::m11","value":"N","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8512},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82318,"byte_end":82321,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x3::m21","value":"N","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8513},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82342,"byte_end":82345,"line_start":74,"line_end":74,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x3::m12","value":"N","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8514},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82347,"byte_end":82350,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x3::m22","value":"N","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8515},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82371,"byte_end":82374,"line_start":75,"line_end":75,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x3::m13","value":"N","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8516},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82376,"byte_end":82379,"line_start":75,"line_end":75,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x3::m23","value":"N","parent":{"krate":0,"index":8509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8540},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82395,"byte_end":82399,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"name":"M2x4","qualname":"::base::coordinates::M2x4","value":"M2x4 { m11, m21, m12, m22, m13, m23, m14, m24 }","parent":null,"children":[{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547},{"krate":0,"index":8548},{"krate":0,"index":8549}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8542},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82401,"byte_end":82404,"line_start":76,"line_end":76,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x4::m11","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8543},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82406,"byte_end":82409,"line_start":76,"line_end":76,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x4::m21","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8544},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82430,"byte_end":82433,"line_start":77,"line_end":77,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x4::m12","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8545},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82435,"byte_end":82438,"line_start":77,"line_end":77,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x4::m22","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8546},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82459,"byte_end":82462,"line_start":78,"line_end":78,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x4::m13","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8547},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82464,"byte_end":82467,"line_start":78,"line_end":78,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x4::m23","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8548},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82488,"byte_end":82491,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x4::m14","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8549},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82493,"byte_end":82496,"line_start":79,"line_end":79,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x4::m24","value":"N","parent":{"krate":0,"index":8540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8573},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82512,"byte_end":82516,"line_start":80,"line_end":80,"column_start":14,"column_end":18},"name":"M2x5","qualname":"::base::coordinates::M2x5","value":"M2x5 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25 }","parent":null,"children":[{"krate":0,"index":8575},{"krate":0,"index":8576},{"krate":0,"index":8577},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8580},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8575},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82518,"byte_end":82521,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x5::m11","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8576},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82523,"byte_end":82526,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x5::m21","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8577},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82547,"byte_end":82550,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x5::m12","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8578},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82552,"byte_end":82555,"line_start":81,"line_end":81,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x5::m22","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8579},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82576,"byte_end":82579,"line_start":82,"line_end":82,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x5::m13","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8580},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82581,"byte_end":82584,"line_start":82,"line_end":82,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x5::m23","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8581},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82605,"byte_end":82608,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x5::m14","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8582},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82610,"byte_end":82613,"line_start":83,"line_end":83,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x5::m24","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8583},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82634,"byte_end":82637,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x5::m15","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8584},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82639,"byte_end":82642,"line_start":84,"line_end":84,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x5::m25","value":"N","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8608},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82658,"byte_end":82662,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"name":"M2x6","qualname":"::base::coordinates::M2x6","value":"M2x6 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25, m16, m26 }","parent":null,"children":[{"krate":0,"index":8610},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619},{"krate":0,"index":8620},{"krate":0,"index":8621}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8610},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82664,"byte_end":82667,"line_start":85,"line_end":85,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x6::m11","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8611},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82669,"byte_end":82672,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x6::m21","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8612},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82693,"byte_end":82696,"line_start":86,"line_end":86,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x6::m12","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8613},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82698,"byte_end":82701,"line_start":86,"line_end":86,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x6::m22","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8614},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82722,"byte_end":82725,"line_start":87,"line_end":87,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x6::m13","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8615},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82727,"byte_end":82730,"line_start":87,"line_end":87,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x6::m23","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8616},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82751,"byte_end":82754,"line_start":88,"line_end":88,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x6::m14","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8617},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82756,"byte_end":82759,"line_start":88,"line_end":88,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x6::m24","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8618},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82780,"byte_end":82783,"line_start":89,"line_end":89,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x6::m15","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82785,"byte_end":82788,"line_start":89,"line_end":89,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x6::m25","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8620},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82809,"byte_end":82812,"line_start":90,"line_end":90,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M2x6::m16","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8621},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82814,"byte_end":82817,"line_start":90,"line_end":90,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M2x6::m26","value":"N","parent":{"krate":0,"index":8608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8645},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82878,"byte_end":82882,"line_start":95,"line_end":95,"column_start":14,"column_end":18},"name":"M3x2","qualname":"::base::coordinates::M3x2","value":"M3x2 { m11, m21, m31, m12, m22, m32 }","parent":null,"children":[{"krate":0,"index":8647},{"krate":0,"index":8648},{"krate":0,"index":8649},{"krate":0,"index":8650},{"krate":0,"index":8651},{"krate":0,"index":8652}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8647},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82884,"byte_end":82887,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x2::m11","value":"N","parent":{"krate":0,"index":8645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8648},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82889,"byte_end":82892,"line_start":95,"line_end":95,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x2::m21","value":"N","parent":{"krate":0,"index":8645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8649},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82894,"byte_end":82897,"line_start":95,"line_end":95,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x2::m31","value":"N","parent":{"krate":0,"index":8645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8650},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82918,"byte_end":82921,"line_start":96,"line_end":96,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x2::m12","value":"N","parent":{"krate":0,"index":8645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8651},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82923,"byte_end":82926,"line_start":96,"line_end":96,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x2::m22","value":"N","parent":{"krate":0,"index":8645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8652},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82928,"byte_end":82931,"line_start":96,"line_end":96,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x2::m32","value":"N","parent":{"krate":0,"index":8645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8676},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82947,"byte_end":82951,"line_start":97,"line_end":97,"column_start":14,"column_end":18},"name":"M3x3","qualname":"::base::coordinates::M3x3","value":"M3x3 { m11, m21, m31, m12, m22, m32, m13, m23, m33 }","parent":null,"children":[{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681},{"krate":0,"index":8682},{"krate":0,"index":8683},{"krate":0,"index":8684},{"krate":0,"index":8685},{"krate":0,"index":8686}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8678},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82953,"byte_end":82956,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x3::m11","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8679},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82958,"byte_end":82961,"line_start":97,"line_end":97,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x3::m21","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8680},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82963,"byte_end":82966,"line_start":97,"line_end":97,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x3::m31","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8681},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82987,"byte_end":82990,"line_start":98,"line_end":98,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x3::m12","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8682},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82992,"byte_end":82995,"line_start":98,"line_end":98,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x3::m22","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8683},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":82997,"byte_end":83000,"line_start":98,"line_end":98,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x3::m32","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8684},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83021,"byte_end":83024,"line_start":99,"line_end":99,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x3::m13","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8685},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83026,"byte_end":83029,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x3::m23","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8686},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83031,"byte_end":83034,"line_start":99,"line_end":99,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x3::m33","value":"N","parent":{"krate":0,"index":8676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8710},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83050,"byte_end":83054,"line_start":100,"line_end":100,"column_start":14,"column_end":18},"name":"M3x4","qualname":"::base::coordinates::M3x4","value":"M3x4 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34 }","parent":null,"children":[{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716},{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8723}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8712},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83056,"byte_end":83059,"line_start":100,"line_end":100,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x4::m11","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8713},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83061,"byte_end":83064,"line_start":100,"line_end":100,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x4::m21","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83066,"byte_end":83069,"line_start":100,"line_end":100,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x4::m31","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8715},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83090,"byte_end":83093,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x4::m12","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8716},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83095,"byte_end":83098,"line_start":101,"line_end":101,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x4::m22","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8717},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83100,"byte_end":83103,"line_start":101,"line_end":101,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x4::m32","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8718},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83124,"byte_end":83127,"line_start":102,"line_end":102,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x4::m13","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8719},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83129,"byte_end":83132,"line_start":102,"line_end":102,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x4::m23","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8720},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83134,"byte_end":83137,"line_start":102,"line_end":102,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x4::m33","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8721},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83158,"byte_end":83161,"line_start":103,"line_end":103,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x4::m14","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8722},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83163,"byte_end":83166,"line_start":103,"line_end":103,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x4::m24","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8723},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83168,"byte_end":83171,"line_start":103,"line_end":103,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x4::m34","value":"N","parent":{"krate":0,"index":8710},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8747},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83187,"byte_end":83191,"line_start":104,"line_end":104,"column_start":14,"column_end":18},"name":"M3x5","qualname":"::base::coordinates::M3x5","value":"M3x5 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35 }","parent":null,"children":[{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8751},{"krate":0,"index":8752},{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760},{"krate":0,"index":8761},{"krate":0,"index":8762},{"krate":0,"index":8763}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8749},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83193,"byte_end":83196,"line_start":104,"line_end":104,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x5::m11","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8750},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83198,"byte_end":83201,"line_start":104,"line_end":104,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x5::m21","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8751},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83203,"byte_end":83206,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x5::m31","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8752},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83227,"byte_end":83230,"line_start":105,"line_end":105,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x5::m12","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8753},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83232,"byte_end":83235,"line_start":105,"line_end":105,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x5::m22","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8754},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83237,"byte_end":83240,"line_start":105,"line_end":105,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x5::m32","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8755},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83261,"byte_end":83264,"line_start":106,"line_end":106,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x5::m13","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8756},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83266,"byte_end":83269,"line_start":106,"line_end":106,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x5::m23","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8757},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83271,"byte_end":83274,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x5::m33","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8758},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83295,"byte_end":83298,"line_start":107,"line_end":107,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x5::m14","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8759},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83300,"byte_end":83303,"line_start":107,"line_end":107,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x5::m24","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8760},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83305,"byte_end":83308,"line_start":107,"line_end":107,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x5::m34","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8761},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83329,"byte_end":83332,"line_start":108,"line_end":108,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x5::m15","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8762},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83334,"byte_end":83337,"line_start":108,"line_end":108,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x5::m25","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8763},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83339,"byte_end":83342,"line_start":108,"line_end":108,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x5::m35","value":"N","parent":{"krate":0,"index":8747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8787},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83358,"byte_end":83362,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"M3x6","qualname":"::base::coordinates::M3x6","value":"M3x6 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35, m16, m26, m36 }","parent":null,"children":[{"krate":0,"index":8789},{"krate":0,"index":8790},{"krate":0,"index":8791},{"krate":0,"index":8792},{"krate":0,"index":8793},{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802},{"krate":0,"index":8803},{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8789},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83364,"byte_end":83367,"line_start":109,"line_end":109,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x6::m11","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8790},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83369,"byte_end":83372,"line_start":109,"line_end":109,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x6::m21","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8791},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83374,"byte_end":83377,"line_start":109,"line_end":109,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x6::m31","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8792},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83398,"byte_end":83401,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x6::m12","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8793},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83403,"byte_end":83406,"line_start":110,"line_end":110,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x6::m22","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8794},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83408,"byte_end":83411,"line_start":110,"line_end":110,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x6::m32","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8795},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83432,"byte_end":83435,"line_start":111,"line_end":111,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x6::m13","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8796},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83437,"byte_end":83440,"line_start":111,"line_end":111,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x6::m23","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8797},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83442,"byte_end":83445,"line_start":111,"line_end":111,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x6::m33","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8798},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83466,"byte_end":83469,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x6::m14","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8799},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83471,"byte_end":83474,"line_start":112,"line_end":112,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x6::m24","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8800},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83476,"byte_end":83479,"line_start":112,"line_end":112,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x6::m34","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8801},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83500,"byte_end":83503,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x6::m15","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8802},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83505,"byte_end":83508,"line_start":113,"line_end":113,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x6::m25","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8803},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83510,"byte_end":83513,"line_start":113,"line_end":113,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x6::m35","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8804},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83534,"byte_end":83537,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M3x6::m16","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8805},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83539,"byte_end":83542,"line_start":114,"line_end":114,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M3x6::m26","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8806},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83544,"byte_end":83547,"line_start":114,"line_end":114,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M3x6::m36","value":"N","parent":{"krate":0,"index":8787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8830},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83608,"byte_end":83612,"line_start":119,"line_end":119,"column_start":14,"column_end":18},"name":"M4x2","qualname":"::base::coordinates::M4x2","value":"M4x2 { m11, m21, m31, m41, m12, m22, m32, m42 }","parent":null,"children":[{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834},{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8837},{"krate":0,"index":8838},{"krate":0,"index":8839}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8832},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83614,"byte_end":83617,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x2::m11","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8833},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83619,"byte_end":83622,"line_start":119,"line_end":119,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x2::m21","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8834},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83624,"byte_end":83627,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x2::m31","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8835},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83629,"byte_end":83632,"line_start":119,"line_end":119,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x2::m41","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8836},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83653,"byte_end":83656,"line_start":120,"line_end":120,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x2::m12","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8837},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83658,"byte_end":83661,"line_start":120,"line_end":120,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x2::m22","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8838},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83663,"byte_end":83666,"line_start":120,"line_end":120,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x2::m32","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8839},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83668,"byte_end":83671,"line_start":120,"line_end":120,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x2::m42","value":"N","parent":{"krate":0,"index":8830},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8863},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83687,"byte_end":83691,"line_start":121,"line_end":121,"column_start":14,"column_end":18},"name":"M4x3","qualname":"::base::coordinates::M4x3","value":"M4x3 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43 }","parent":null,"children":[{"krate":0,"index":8865},{"krate":0,"index":8866},{"krate":0,"index":8867},{"krate":0,"index":8868},{"krate":0,"index":8869},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8874},{"krate":0,"index":8875},{"krate":0,"index":8876}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8865},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83693,"byte_end":83696,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x3::m11","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8866},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83698,"byte_end":83701,"line_start":121,"line_end":121,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x3::m21","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8867},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83703,"byte_end":83706,"line_start":121,"line_end":121,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x3::m31","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8868},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83708,"byte_end":83711,"line_start":121,"line_end":121,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x3::m41","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8869},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83732,"byte_end":83735,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x3::m12","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8870},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83737,"byte_end":83740,"line_start":122,"line_end":122,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x3::m22","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8871},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83742,"byte_end":83745,"line_start":122,"line_end":122,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x3::m32","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8872},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83747,"byte_end":83750,"line_start":122,"line_end":122,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x3::m42","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8873},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83771,"byte_end":83774,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x3::m13","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8874},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83776,"byte_end":83779,"line_start":123,"line_end":123,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x3::m23","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8875},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83781,"byte_end":83784,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x3::m33","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8876},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83786,"byte_end":83789,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x3::m43","value":"N","parent":{"krate":0,"index":8863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8900},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83805,"byte_end":83809,"line_start":124,"line_end":124,"column_start":14,"column_end":18},"name":"M4x4","qualname":"::base::coordinates::M4x4","value":"M4x4 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44 }","parent":null,"children":[{"krate":0,"index":8902},{"krate":0,"index":8903},{"krate":0,"index":8904},{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8907},{"krate":0,"index":8908},{"krate":0,"index":8909},{"krate":0,"index":8910},{"krate":0,"index":8911},{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8915},{"krate":0,"index":8916},{"krate":0,"index":8917}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8902},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83811,"byte_end":83814,"line_start":124,"line_end":124,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x4::m11","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8903},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83816,"byte_end":83819,"line_start":124,"line_end":124,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x4::m21","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8904},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83821,"byte_end":83824,"line_start":124,"line_end":124,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x4::m31","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8905},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83826,"byte_end":83829,"line_start":124,"line_end":124,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x4::m41","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8906},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83850,"byte_end":83853,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x4::m12","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8907},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83855,"byte_end":83858,"line_start":125,"line_end":125,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x4::m22","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8908},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83860,"byte_end":83863,"line_start":125,"line_end":125,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x4::m32","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8909},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83865,"byte_end":83868,"line_start":125,"line_end":125,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x4::m42","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8910},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83889,"byte_end":83892,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x4::m13","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8911},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83894,"byte_end":83897,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x4::m23","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8912},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83899,"byte_end":83902,"line_start":126,"line_end":126,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x4::m33","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83904,"byte_end":83907,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x4::m43","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8914},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83928,"byte_end":83931,"line_start":127,"line_end":127,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x4::m14","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8915},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83933,"byte_end":83936,"line_start":127,"line_end":127,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x4::m24","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8916},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83938,"byte_end":83941,"line_start":127,"line_end":127,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x4::m34","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8917},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83943,"byte_end":83946,"line_start":127,"line_end":127,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x4::m44","value":"N","parent":{"krate":0,"index":8900},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8941},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83962,"byte_end":83966,"line_start":128,"line_end":128,"column_start":14,"column_end":18},"name":"M4x5","qualname":"::base::coordinates::M4x5","value":"M4x5 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45 }","parent":null,"children":[{"krate":0,"index":8943},{"krate":0,"index":8944},{"krate":0,"index":8945},{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8950},{"krate":0,"index":8951},{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":8961},{"krate":0,"index":8962}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8943},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83968,"byte_end":83971,"line_start":128,"line_end":128,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x5::m11","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8944},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83973,"byte_end":83976,"line_start":128,"line_end":128,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x5::m21","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8945},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83978,"byte_end":83981,"line_start":128,"line_end":128,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x5::m31","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8946},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":83983,"byte_end":83986,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x5::m41","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8947},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84007,"byte_end":84010,"line_start":129,"line_end":129,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x5::m12","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8948},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84012,"byte_end":84015,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x5::m22","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8949},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84017,"byte_end":84020,"line_start":129,"line_end":129,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x5::m32","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8950},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84022,"byte_end":84025,"line_start":129,"line_end":129,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x5::m42","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8951},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84046,"byte_end":84049,"line_start":130,"line_end":130,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x5::m13","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8952},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84051,"byte_end":84054,"line_start":130,"line_end":130,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x5::m23","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8953},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84056,"byte_end":84059,"line_start":130,"line_end":130,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x5::m33","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8954},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84061,"byte_end":84064,"line_start":130,"line_end":130,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x5::m43","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8955},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84085,"byte_end":84088,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x5::m14","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84090,"byte_end":84093,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x5::m24","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8957},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84095,"byte_end":84098,"line_start":131,"line_end":131,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x5::m34","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8958},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84100,"byte_end":84103,"line_start":131,"line_end":131,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x5::m44","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8959},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84124,"byte_end":84127,"line_start":132,"line_end":132,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x5::m15","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84129,"byte_end":84132,"line_start":132,"line_end":132,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x5::m25","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8961},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84134,"byte_end":84137,"line_start":132,"line_end":132,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x5::m35","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8962},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84139,"byte_end":84142,"line_start":132,"line_end":132,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x5::m45","value":"N","parent":{"krate":0,"index":8941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8986},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84158,"byte_end":84162,"line_start":133,"line_end":133,"column_start":14,"column_end":18},"name":"M4x6","qualname":"::base::coordinates::M4x6","value":"M4x6 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45, m16, m26, m36, m46 }","parent":null,"children":[{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990},{"krate":0,"index":8991},{"krate":0,"index":8992},{"krate":0,"index":8993},{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999},{"krate":0,"index":9000},{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9005},{"krate":0,"index":9006},{"krate":0,"index":9007},{"krate":0,"index":9008},{"krate":0,"index":9009},{"krate":0,"index":9010},{"krate":0,"index":9011}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8988},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84164,"byte_end":84167,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x6::m11","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8989},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84169,"byte_end":84172,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x6::m21","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8990},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84174,"byte_end":84177,"line_start":133,"line_end":133,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x6::m31","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8991},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84179,"byte_end":84182,"line_start":133,"line_end":133,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x6::m41","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8992},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84203,"byte_end":84206,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x6::m12","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8993},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84208,"byte_end":84211,"line_start":134,"line_end":134,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x6::m22","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8994},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84213,"byte_end":84216,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x6::m32","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8995},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84218,"byte_end":84221,"line_start":134,"line_end":134,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x6::m42","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8996},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84242,"byte_end":84245,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x6::m13","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8997},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84247,"byte_end":84250,"line_start":135,"line_end":135,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x6::m23","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8998},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84252,"byte_end":84255,"line_start":135,"line_end":135,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x6::m33","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8999},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84257,"byte_end":84260,"line_start":135,"line_end":135,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x6::m43","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84281,"byte_end":84284,"line_start":136,"line_end":136,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x6::m14","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9001},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84286,"byte_end":84289,"line_start":136,"line_end":136,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x6::m24","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9002},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84291,"byte_end":84294,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x6::m34","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84296,"byte_end":84299,"line_start":136,"line_end":136,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x6::m44","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9004},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84320,"byte_end":84323,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x6::m15","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9005},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84325,"byte_end":84328,"line_start":137,"line_end":137,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x6::m25","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9006},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84330,"byte_end":84333,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x6::m35","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9007},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84335,"byte_end":84338,"line_start":137,"line_end":137,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x6::m45","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9008},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84359,"byte_end":84362,"line_start":138,"line_end":138,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M4x6::m16","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84364,"byte_end":84367,"line_start":138,"line_end":138,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M4x6::m26","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9010},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84369,"byte_end":84372,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M4x6::m36","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9011},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84374,"byte_end":84377,"line_start":138,"line_end":138,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M4x6::m46","value":"N","parent":{"krate":0,"index":8986},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9035},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84438,"byte_end":84442,"line_start":143,"line_end":143,"column_start":14,"column_end":18},"name":"M5x2","qualname":"::base::coordinates::M5x2","value":"M5x2 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52 }","parent":null,"children":[{"krate":0,"index":9037},{"krate":0,"index":9038},{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9042},{"krate":0,"index":9043},{"krate":0,"index":9044},{"krate":0,"index":9045},{"krate":0,"index":9046}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9037},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84444,"byte_end":84447,"line_start":143,"line_end":143,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x2::m11","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9038},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84449,"byte_end":84452,"line_start":143,"line_end":143,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x2::m21","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9039},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84454,"byte_end":84457,"line_start":143,"line_end":143,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x2::m31","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9040},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84459,"byte_end":84462,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x2::m41","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9041},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84464,"byte_end":84467,"line_start":143,"line_end":143,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x2::m51","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9042},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84488,"byte_end":84491,"line_start":144,"line_end":144,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x2::m12","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9043},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84493,"byte_end":84496,"line_start":144,"line_end":144,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x2::m22","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9044},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84498,"byte_end":84501,"line_start":144,"line_end":144,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x2::m32","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9045},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84503,"byte_end":84506,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x2::m42","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9046},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84508,"byte_end":84511,"line_start":144,"line_end":144,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x2::m52","value":"N","parent":{"krate":0,"index":9035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9070},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84527,"byte_end":84531,"line_start":145,"line_end":145,"column_start":14,"column_end":18},"name":"M5x3","qualname":"::base::coordinates::M5x3","value":"M5x3 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53 }","parent":null,"children":[{"krate":0,"index":9072},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079},{"krate":0,"index":9080},{"krate":0,"index":9081},{"krate":0,"index":9082},{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9085},{"krate":0,"index":9086}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9072},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84533,"byte_end":84536,"line_start":145,"line_end":145,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x3::m11","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9073},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84538,"byte_end":84541,"line_start":145,"line_end":145,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x3::m21","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9074},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84543,"byte_end":84546,"line_start":145,"line_end":145,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x3::m31","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9075},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84548,"byte_end":84551,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x3::m41","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9076},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84553,"byte_end":84556,"line_start":145,"line_end":145,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x3::m51","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9077},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84577,"byte_end":84580,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x3::m12","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9078},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84582,"byte_end":84585,"line_start":146,"line_end":146,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x3::m22","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9079},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84587,"byte_end":84590,"line_start":146,"line_end":146,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x3::m32","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9080},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84592,"byte_end":84595,"line_start":146,"line_end":146,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x3::m42","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9081},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84597,"byte_end":84600,"line_start":146,"line_end":146,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x3::m52","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9082},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84621,"byte_end":84624,"line_start":147,"line_end":147,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x3::m13","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9083},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84626,"byte_end":84629,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x3::m23","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9084},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84631,"byte_end":84634,"line_start":147,"line_end":147,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x3::m33","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84636,"byte_end":84639,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x3::m43","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9086},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84641,"byte_end":84644,"line_start":147,"line_end":147,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x3::m53","value":"N","parent":{"krate":0,"index":9070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9110},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84660,"byte_end":84664,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"name":"M5x4","qualname":"::base::coordinates::M5x4","value":"M5x4 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54 }","parent":null,"children":[{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117},{"krate":0,"index":9118},{"krate":0,"index":9119},{"krate":0,"index":9120},{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9123},{"krate":0,"index":9124},{"krate":0,"index":9125},{"krate":0,"index":9126},{"krate":0,"index":9127},{"krate":0,"index":9128},{"krate":0,"index":9129},{"krate":0,"index":9130},{"krate":0,"index":9131}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9112},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84666,"byte_end":84669,"line_start":148,"line_end":148,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x4::m11","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9113},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84671,"byte_end":84674,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x4::m21","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9114},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84676,"byte_end":84679,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x4::m31","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9115},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84681,"byte_end":84684,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x4::m41","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9116},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84686,"byte_end":84689,"line_start":148,"line_end":148,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x4::m51","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9117},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84710,"byte_end":84713,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x4::m12","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9118},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84715,"byte_end":84718,"line_start":149,"line_end":149,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x4::m22","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9119},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84720,"byte_end":84723,"line_start":149,"line_end":149,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x4::m32","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9120},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84725,"byte_end":84728,"line_start":149,"line_end":149,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x4::m42","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9121},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84730,"byte_end":84733,"line_start":149,"line_end":149,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x4::m52","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9122},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84754,"byte_end":84757,"line_start":150,"line_end":150,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x4::m13","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9123},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84759,"byte_end":84762,"line_start":150,"line_end":150,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x4::m23","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9124},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84764,"byte_end":84767,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x4::m33","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9125},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84769,"byte_end":84772,"line_start":150,"line_end":150,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x4::m43","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9126},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84774,"byte_end":84777,"line_start":150,"line_end":150,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x4::m53","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9127},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84798,"byte_end":84801,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x4::m14","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9128},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84803,"byte_end":84806,"line_start":151,"line_end":151,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x4::m24","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9129},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84808,"byte_end":84811,"line_start":151,"line_end":151,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x4::m34","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9130},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84813,"byte_end":84816,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x4::m44","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9131},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84818,"byte_end":84821,"line_start":151,"line_end":151,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x4::m54","value":"N","parent":{"krate":0,"index":9110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9155},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84837,"byte_end":84841,"line_start":152,"line_end":152,"column_start":14,"column_end":18},"name":"M5x5","qualname":"::base::coordinates::M5x5","value":"M5x5 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55 }","parent":null,"children":[{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9159},{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169},{"krate":0,"index":9170},{"krate":0,"index":9171},{"krate":0,"index":9172},{"krate":0,"index":9173},{"krate":0,"index":9174},{"krate":0,"index":9175},{"krate":0,"index":9176},{"krate":0,"index":9177},{"krate":0,"index":9178},{"krate":0,"index":9179},{"krate":0,"index":9180},{"krate":0,"index":9181}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9157},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84843,"byte_end":84846,"line_start":152,"line_end":152,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x5::m11","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9158},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84848,"byte_end":84851,"line_start":152,"line_end":152,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x5::m21","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9159},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84853,"byte_end":84856,"line_start":152,"line_end":152,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x5::m31","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84858,"byte_end":84861,"line_start":152,"line_end":152,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x5::m41","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9161},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84863,"byte_end":84866,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x5::m51","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9162},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84887,"byte_end":84890,"line_start":153,"line_end":153,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x5::m12","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9163},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84892,"byte_end":84895,"line_start":153,"line_end":153,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x5::m22","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9164},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84897,"byte_end":84900,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x5::m32","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9165},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84902,"byte_end":84905,"line_start":153,"line_end":153,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x5::m42","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9166},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84907,"byte_end":84910,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x5::m52","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9167},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84931,"byte_end":84934,"line_start":154,"line_end":154,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x5::m13","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9168},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84936,"byte_end":84939,"line_start":154,"line_end":154,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x5::m23","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9169},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84941,"byte_end":84944,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x5::m33","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9170},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84946,"byte_end":84949,"line_start":154,"line_end":154,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x5::m43","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9171},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84951,"byte_end":84954,"line_start":154,"line_end":154,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x5::m53","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9172},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84975,"byte_end":84978,"line_start":155,"line_end":155,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x5::m14","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9173},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84980,"byte_end":84983,"line_start":155,"line_end":155,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x5::m24","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9174},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84985,"byte_end":84988,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x5::m34","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9175},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84990,"byte_end":84993,"line_start":155,"line_end":155,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x5::m44","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9176},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":84995,"byte_end":84998,"line_start":155,"line_end":155,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x5::m54","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9177},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85019,"byte_end":85022,"line_start":156,"line_end":156,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x5::m15","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9178},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85024,"byte_end":85027,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x5::m25","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9179},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85029,"byte_end":85032,"line_start":156,"line_end":156,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x5::m35","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9180},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85034,"byte_end":85037,"line_start":156,"line_end":156,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x5::m45","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9181},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85039,"byte_end":85042,"line_start":156,"line_end":156,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x5::m55","value":"N","parent":{"krate":0,"index":9155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9205},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85058,"byte_end":85062,"line_start":157,"line_end":157,"column_start":14,"column_end":18},"name":"M5x6","qualname":"::base::coordinates::M5x6","value":"M5x6 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55, m16, m26, m36, m46, m56 }","parent":null,"children":[{"krate":0,"index":9207},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211},{"krate":0,"index":9212},{"krate":0,"index":9213},{"krate":0,"index":9214},{"krate":0,"index":9215},{"krate":0,"index":9216},{"krate":0,"index":9217},{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226},{"krate":0,"index":9227},{"krate":0,"index":9228},{"krate":0,"index":9229},{"krate":0,"index":9230},{"krate":0,"index":9231},{"krate":0,"index":9232},{"krate":0,"index":9233},{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9207},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85064,"byte_end":85067,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x6::m11","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9208},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85069,"byte_end":85072,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x6::m21","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9209},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85074,"byte_end":85077,"line_start":157,"line_end":157,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x6::m31","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9210},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85079,"byte_end":85082,"line_start":157,"line_end":157,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x6::m41","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9211},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85084,"byte_end":85087,"line_start":157,"line_end":157,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x6::m51","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9212},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85108,"byte_end":85111,"line_start":158,"line_end":158,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x6::m12","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9213},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85113,"byte_end":85116,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x6::m22","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9214},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85118,"byte_end":85121,"line_start":158,"line_end":158,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x6::m32","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9215},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85123,"byte_end":85126,"line_start":158,"line_end":158,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x6::m42","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9216},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85128,"byte_end":85131,"line_start":158,"line_end":158,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x6::m52","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9217},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85152,"byte_end":85155,"line_start":159,"line_end":159,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x6::m13","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9218},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85157,"byte_end":85160,"line_start":159,"line_end":159,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x6::m23","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9219},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85162,"byte_end":85165,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x6::m33","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9220},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85167,"byte_end":85170,"line_start":159,"line_end":159,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x6::m43","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9221},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85172,"byte_end":85175,"line_start":159,"line_end":159,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x6::m53","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9222},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85196,"byte_end":85199,"line_start":160,"line_end":160,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x6::m14","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9223},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85201,"byte_end":85204,"line_start":160,"line_end":160,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x6::m24","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9224},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85206,"byte_end":85209,"line_start":160,"line_end":160,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x6::m34","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9225},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85211,"byte_end":85214,"line_start":160,"line_end":160,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x6::m44","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9226},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85216,"byte_end":85219,"line_start":160,"line_end":160,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x6::m54","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9227},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85240,"byte_end":85243,"line_start":161,"line_end":161,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x6::m15","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9228},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85245,"byte_end":85248,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x6::m25","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9229},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85250,"byte_end":85253,"line_start":161,"line_end":161,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x6::m35","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85255,"byte_end":85258,"line_start":161,"line_end":161,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x6::m45","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9231},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85260,"byte_end":85263,"line_start":161,"line_end":161,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x6::m55","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9232},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85284,"byte_end":85287,"line_start":162,"line_end":162,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M5x6::m16","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9233},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85289,"byte_end":85292,"line_start":162,"line_end":162,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M5x6::m26","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9234},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85294,"byte_end":85297,"line_start":162,"line_end":162,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M5x6::m36","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9235},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85299,"byte_end":85302,"line_start":162,"line_end":162,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M5x6::m46","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9236},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85304,"byte_end":85307,"line_start":162,"line_end":162,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M5x6::m56","value":"N","parent":{"krate":0,"index":9205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9260},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85369,"byte_end":85373,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"name":"M6x2","qualname":"::base::coordinates::M6x2","value":"M6x2 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62 }","parent":null,"children":[{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269},{"krate":0,"index":9270},{"krate":0,"index":9271},{"krate":0,"index":9272},{"krate":0,"index":9273}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9262},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85375,"byte_end":85378,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x2::m11","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9263},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85380,"byte_end":85383,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x2::m21","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9264},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85385,"byte_end":85388,"line_start":168,"line_end":168,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x2::m31","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85390,"byte_end":85393,"line_start":168,"line_end":168,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x2::m41","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9266},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85395,"byte_end":85398,"line_start":168,"line_end":168,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x2::m51","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9267},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85400,"byte_end":85403,"line_start":168,"line_end":168,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x2::m61","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9268},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85424,"byte_end":85427,"line_start":169,"line_end":169,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x2::m12","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9269},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85429,"byte_end":85432,"line_start":169,"line_end":169,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x2::m22","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9270},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85434,"byte_end":85437,"line_start":169,"line_end":169,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x2::m32","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85439,"byte_end":85442,"line_start":169,"line_end":169,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x2::m42","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9272},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85444,"byte_end":85447,"line_start":169,"line_end":169,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x2::m52","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9273},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85449,"byte_end":85452,"line_start":169,"line_end":169,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x2::m62","value":"N","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9297},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85468,"byte_end":85472,"line_start":170,"line_end":170,"column_start":14,"column_end":18},"name":"M6x3","qualname":"::base::coordinates::M6x3","value":"M6x3 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63 }","parent":null,"children":[{"krate":0,"index":9299},{"krate":0,"index":9300},{"krate":0,"index":9301},{"krate":0,"index":9302},{"krate":0,"index":9303},{"krate":0,"index":9304},{"krate":0,"index":9305},{"krate":0,"index":9306},{"krate":0,"index":9307},{"krate":0,"index":9308},{"krate":0,"index":9309},{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9312},{"krate":0,"index":9313},{"krate":0,"index":9314},{"krate":0,"index":9315},{"krate":0,"index":9316}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9299},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85474,"byte_end":85477,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x3::m11","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9300},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85479,"byte_end":85482,"line_start":170,"line_end":170,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x3::m21","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9301},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85484,"byte_end":85487,"line_start":170,"line_end":170,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x3::m31","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9302},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85489,"byte_end":85492,"line_start":170,"line_end":170,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x3::m41","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9303},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85494,"byte_end":85497,"line_start":170,"line_end":170,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x3::m51","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9304},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85499,"byte_end":85502,"line_start":170,"line_end":170,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x3::m61","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9305},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85523,"byte_end":85526,"line_start":171,"line_end":171,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x3::m12","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9306},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85528,"byte_end":85531,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x3::m22","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9307},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85533,"byte_end":85536,"line_start":171,"line_end":171,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x3::m32","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9308},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85538,"byte_end":85541,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x3::m42","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9309},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85543,"byte_end":85546,"line_start":171,"line_end":171,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x3::m52","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85548,"byte_end":85551,"line_start":171,"line_end":171,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x3::m62","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9311},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85572,"byte_end":85575,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x3::m13","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9312},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85577,"byte_end":85580,"line_start":172,"line_end":172,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x3::m23","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9313},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85582,"byte_end":85585,"line_start":172,"line_end":172,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x3::m33","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9314},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85587,"byte_end":85590,"line_start":172,"line_end":172,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x3::m43","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9315},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85592,"byte_end":85595,"line_start":172,"line_end":172,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x3::m53","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9316},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85597,"byte_end":85600,"line_start":172,"line_end":172,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x3::m63","value":"N","parent":{"krate":0,"index":9297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9340},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85616,"byte_end":85620,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"name":"M6x4","qualname":"::base::coordinates::M6x4","value":"M6x4 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64 }","parent":null,"children":[{"krate":0,"index":9342},{"krate":0,"index":9343},{"krate":0,"index":9344},{"krate":0,"index":9345},{"krate":0,"index":9346},{"krate":0,"index":9347},{"krate":0,"index":9348},{"krate":0,"index":9349},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352},{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":9355},{"krate":0,"index":9356},{"krate":0,"index":9357},{"krate":0,"index":9358},{"krate":0,"index":9359},{"krate":0,"index":9360},{"krate":0,"index":9361},{"krate":0,"index":9362},{"krate":0,"index":9363},{"krate":0,"index":9364},{"krate":0,"index":9365}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9342},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85622,"byte_end":85625,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x4::m11","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9343},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85627,"byte_end":85630,"line_start":173,"line_end":173,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x4::m21","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9344},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85632,"byte_end":85635,"line_start":173,"line_end":173,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x4::m31","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9345},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85637,"byte_end":85640,"line_start":173,"line_end":173,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x4::m41","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9346},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85642,"byte_end":85645,"line_start":173,"line_end":173,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x4::m51","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9347},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85647,"byte_end":85650,"line_start":173,"line_end":173,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x4::m61","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9348},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85671,"byte_end":85674,"line_start":174,"line_end":174,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x4::m12","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9349},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85676,"byte_end":85679,"line_start":174,"line_end":174,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x4::m22","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85681,"byte_end":85684,"line_start":174,"line_end":174,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x4::m32","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9351},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85686,"byte_end":85689,"line_start":174,"line_end":174,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x4::m42","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9352},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85691,"byte_end":85694,"line_start":174,"line_end":174,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x4::m52","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9353},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85696,"byte_end":85699,"line_start":174,"line_end":174,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x4::m62","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9354},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85720,"byte_end":85723,"line_start":175,"line_end":175,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x4::m13","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9355},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85725,"byte_end":85728,"line_start":175,"line_end":175,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x4::m23","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9356},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85730,"byte_end":85733,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x4::m33","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9357},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85735,"byte_end":85738,"line_start":175,"line_end":175,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x4::m43","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9358},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85740,"byte_end":85743,"line_start":175,"line_end":175,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x4::m53","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9359},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85745,"byte_end":85748,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x4::m63","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9360},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85769,"byte_end":85772,"line_start":176,"line_end":176,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x4::m14","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9361},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85774,"byte_end":85777,"line_start":176,"line_end":176,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x4::m24","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9362},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85779,"byte_end":85782,"line_start":176,"line_end":176,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x4::m34","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9363},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85784,"byte_end":85787,"line_start":176,"line_end":176,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x4::m44","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85789,"byte_end":85792,"line_start":176,"line_end":176,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x4::m54","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9365},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85794,"byte_end":85797,"line_start":176,"line_end":176,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x4::m64","value":"N","parent":{"krate":0,"index":9340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9389},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85813,"byte_end":85817,"line_start":177,"line_end":177,"column_start":14,"column_end":18},"name":"M6x5","qualname":"::base::coordinates::M6x5","value":"M6x5 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65 }","parent":null,"children":[{"krate":0,"index":9391},{"krate":0,"index":9392},{"krate":0,"index":9393},{"krate":0,"index":9394},{"krate":0,"index":9395},{"krate":0,"index":9396},{"krate":0,"index":9397},{"krate":0,"index":9398},{"krate":0,"index":9399},{"krate":0,"index":9400},{"krate":0,"index":9401},{"krate":0,"index":9402},{"krate":0,"index":9403},{"krate":0,"index":9404},{"krate":0,"index":9405},{"krate":0,"index":9406},{"krate":0,"index":9407},{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411},{"krate":0,"index":9412},{"krate":0,"index":9413},{"krate":0,"index":9414},{"krate":0,"index":9415},{"krate":0,"index":9416},{"krate":0,"index":9417},{"krate":0,"index":9418},{"krate":0,"index":9419},{"krate":0,"index":9420}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9391},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85819,"byte_end":85822,"line_start":177,"line_end":177,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x5::m11","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9392},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85824,"byte_end":85827,"line_start":177,"line_end":177,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x5::m21","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9393},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85829,"byte_end":85832,"line_start":177,"line_end":177,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x5::m31","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9394},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85834,"byte_end":85837,"line_start":177,"line_end":177,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x5::m41","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9395},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85839,"byte_end":85842,"line_start":177,"line_end":177,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x5::m51","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9396},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85844,"byte_end":85847,"line_start":177,"line_end":177,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x5::m61","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9397},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85868,"byte_end":85871,"line_start":178,"line_end":178,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x5::m12","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9398},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85873,"byte_end":85876,"line_start":178,"line_end":178,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x5::m22","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9399},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85878,"byte_end":85881,"line_start":178,"line_end":178,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x5::m32","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9400},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85883,"byte_end":85886,"line_start":178,"line_end":178,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x5::m42","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9401},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85888,"byte_end":85891,"line_start":178,"line_end":178,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x5::m52","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9402},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85893,"byte_end":85896,"line_start":178,"line_end":178,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x5::m62","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9403},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85917,"byte_end":85920,"line_start":179,"line_end":179,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x5::m13","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9404},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85922,"byte_end":85925,"line_start":179,"line_end":179,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x5::m23","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9405},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85927,"byte_end":85930,"line_start":179,"line_end":179,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x5::m33","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9406},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85932,"byte_end":85935,"line_start":179,"line_end":179,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x5::m43","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9407},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85937,"byte_end":85940,"line_start":179,"line_end":179,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x5::m53","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9408},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85942,"byte_end":85945,"line_start":179,"line_end":179,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x5::m63","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9409},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85966,"byte_end":85969,"line_start":180,"line_end":180,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x5::m14","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9410},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85971,"byte_end":85974,"line_start":180,"line_end":180,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x5::m24","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9411},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85976,"byte_end":85979,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x5::m34","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9412},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85981,"byte_end":85984,"line_start":180,"line_end":180,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x5::m44","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9413},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85986,"byte_end":85989,"line_start":180,"line_end":180,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x5::m54","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9414},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":85991,"byte_end":85994,"line_start":180,"line_end":180,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x5::m64","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9415},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86015,"byte_end":86018,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x5::m15","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9416},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86020,"byte_end":86023,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x5::m25","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9417},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86025,"byte_end":86028,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x5::m35","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9418},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86030,"byte_end":86033,"line_start":181,"line_end":181,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x5::m45","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9419},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86035,"byte_end":86038,"line_start":181,"line_end":181,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x5::m55","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9420},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86040,"byte_end":86043,"line_start":181,"line_end":181,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x5::m65","value":"N","parent":{"krate":0,"index":9389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9444},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86059,"byte_end":86063,"line_start":182,"line_end":182,"column_start":14,"column_end":18},"name":"M6x6","qualname":"::base::coordinates::M6x6","value":"M6x6 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65, m16, m26, m36, m46, m56, m66 }","parent":null,"children":[{"krate":0,"index":9446},{"krate":0,"index":9447},{"krate":0,"index":9448},{"krate":0,"index":9449},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9452},{"krate":0,"index":9453},{"krate":0,"index":9454},{"krate":0,"index":9455},{"krate":0,"index":9456},{"krate":0,"index":9457},{"krate":0,"index":9458},{"krate":0,"index":9459},{"krate":0,"index":9460},{"krate":0,"index":9461},{"krate":0,"index":9462},{"krate":0,"index":9463},{"krate":0,"index":9464},{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467},{"krate":0,"index":9468},{"krate":0,"index":9469},{"krate":0,"index":9470},{"krate":0,"index":9471},{"krate":0,"index":9472},{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9475},{"krate":0,"index":9476},{"krate":0,"index":9477},{"krate":0,"index":9478},{"krate":0,"index":9479},{"krate":0,"index":9480},{"krate":0,"index":9481}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80876,"byte_end":80963,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":80972,"byte_end":81033,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":81042,"byte_end":81052,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9446},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86065,"byte_end":86068,"line_start":182,"line_end":182,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x6::m11","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9447},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86070,"byte_end":86073,"line_start":182,"line_end":182,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x6::m21","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9448},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86075,"byte_end":86078,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x6::m31","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9449},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86080,"byte_end":86083,"line_start":182,"line_end":182,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x6::m41","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9450},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86085,"byte_end":86088,"line_start":182,"line_end":182,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x6::m51","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9451},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86090,"byte_end":86093,"line_start":182,"line_end":182,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x6::m61","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9452},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86114,"byte_end":86117,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x6::m12","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9453},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86119,"byte_end":86122,"line_start":183,"line_end":183,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x6::m22","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9454},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86124,"byte_end":86127,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x6::m32","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9455},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86129,"byte_end":86132,"line_start":183,"line_end":183,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x6::m42","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9456},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86134,"byte_end":86137,"line_start":183,"line_end":183,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x6::m52","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9457},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86139,"byte_end":86142,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x6::m62","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9458},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86163,"byte_end":86166,"line_start":184,"line_end":184,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x6::m13","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9459},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86168,"byte_end":86171,"line_start":184,"line_end":184,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x6::m23","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9460},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86173,"byte_end":86176,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x6::m33","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9461},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86178,"byte_end":86181,"line_start":184,"line_end":184,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x6::m43","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9462},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86183,"byte_end":86186,"line_start":184,"line_end":184,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x6::m53","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9463},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86188,"byte_end":86191,"line_start":184,"line_end":184,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x6::m63","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9464},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86212,"byte_end":86215,"line_start":185,"line_end":185,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x6::m14","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9465},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86217,"byte_end":86220,"line_start":185,"line_end":185,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x6::m24","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9466},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86222,"byte_end":86225,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x6::m34","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9467},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86227,"byte_end":86230,"line_start":185,"line_end":185,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x6::m44","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9468},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86232,"byte_end":86235,"line_start":185,"line_end":185,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x6::m54","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9469},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86237,"byte_end":86240,"line_start":185,"line_end":185,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x6::m64","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9470},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86261,"byte_end":86264,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x6::m15","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9471},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86266,"byte_end":86269,"line_start":186,"line_end":186,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x6::m25","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9472},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86271,"byte_end":86274,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x6::m35","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9473},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86276,"byte_end":86279,"line_start":186,"line_end":186,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x6::m45","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9474},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86281,"byte_end":86284,"line_start":186,"line_end":186,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x6::m55","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9475},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86286,"byte_end":86289,"line_start":186,"line_end":186,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x6::m65","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9476},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86310,"byte_end":86313,"line_start":187,"line_end":187,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M6x6::m16","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9477},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86315,"byte_end":86318,"line_start":187,"line_end":187,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M6x6::m26","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9478},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86320,"byte_end":86323,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M6x6::m36","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9479},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86325,"byte_end":86328,"line_start":187,"line_end":187,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M6x6::m46","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9480},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86330,"byte_end":86333,"line_start":187,"line_end":187,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M6x6::m56","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9481},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/coordinates.rs","byte_start":86335,"byte_end":86338,"line_start":187,"line_end":187,"column_start":45,"column_end":48},"name":"m66","qualname":"::base::coordinates::M6x6::m66","value":"N","parent":{"krate":0,"index":9444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":380},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"default_allocator","qualname":"::base::default_allocator","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":424},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":453},{"krate":0,"index":458}],"decl_id":null,"docs":" The default matrix data storage allocator.","sig":null,"attributes":[{"value":"/ The default matrix data storage allocator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":87366,"byte_end":87412,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":87413,"byte_end":87416,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This will use stack-allocated buffers for matrices with dimensions known at compile-time, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":87417,"byte_end":87514,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ heap-allocated buffers for matrices with at least one dimension unknown at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":87515,"byte_end":87607,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":88358,"byte_end":88374,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"DefaultAllocator","qualname":"::base::default_allocator::DefaultAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":" An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized\n matrices respectively.\n","sig":null,"attributes":[{"value":"/ An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":88219,"byte_end":88319,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ matrices respectively.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":88320,"byte_end":88346,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":463},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::base::dimension","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":21170},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":21202},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":21206},{"krate":0,"index":9829},{"krate":0,"index":9841},{"krate":0,"index":9840},{"krate":0,"index":9837},{"krate":0,"index":9838},{"krate":0,"index":9833},{"krate":0,"index":9834},{"krate":0,"index":9831},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":501},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":9843},{"krate":0,"index":9846},{"krate":0,"index":9850},{"krate":0,"index":9855},{"krate":0,"index":9859},{"krate":0,"index":9863},{"krate":0,"index":9866},{"krate":0,"index":9870},{"krate":0,"index":9875},{"krate":0,"index":9878},{"krate":0,"index":9882},{"krate":0,"index":9887},{"krate":0,"index":9891},{"krate":0,"index":9895},{"krate":0,"index":9898},{"krate":0,"index":9902},{"krate":0,"index":9907},{"krate":0,"index":9910},{"krate":0,"index":9914},{"krate":0,"index":9919},{"krate":0,"index":9923},{"krate":0,"index":9927},{"krate":0,"index":9930},{"krate":0,"index":9934},{"krate":0,"index":9939},{"krate":0,"index":9942},{"krate":0,"index":9946},{"krate":0,"index":9951},{"krate":0,"index":9955},{"krate":0,"index":9959},{"krate":0,"index":9962},{"krate":0,"index":9966},{"krate":0,"index":9971},{"krate":0,"index":9974},{"krate":0,"index":9978},{"krate":0,"index":9983},{"krate":0,"index":9987},{"krate":0,"index":9991},{"krate":0,"index":9994},{"krate":0,"index":9998},{"krate":0,"index":10003},{"krate":0,"index":10006},{"krate":0,"index":10010},{"krate":0,"index":10015},{"krate":0,"index":10019},{"krate":0,"index":10023},{"krate":0,"index":10026},{"krate":0,"index":10030},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":10035},{"krate":0,"index":10049},{"krate":0,"index":10048},{"krate":0,"index":10046},{"krate":0,"index":10043},{"krate":0,"index":10040},{"krate":0,"index":10041},{"krate":0,"index":10037},{"krate":0,"index":10038},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":11321},{"krate":0,"index":11335},{"krate":0,"index":11334},{"krate":0,"index":11332},{"krate":0,"index":11329},{"krate":0,"index":11326},{"krate":0,"index":11327},{"krate":0,"index":11323},{"krate":0,"index":11324},{"krate":0,"index":10051},{"krate":0,"index":10055},{"krate":0,"index":10058},{"krate":0,"index":10060},{"krate":0,"index":11337},{"krate":0,"index":11351},{"krate":0,"index":11350},{"krate":0,"index":11348},{"krate":0,"index":11345},{"krate":0,"index":11342},{"krate":0,"index":11343},{"krate":0,"index":11339},{"krate":0,"index":11340},{"krate":0,"index":10061},{"krate":0,"index":10065},{"krate":0,"index":10068},{"krate":0,"index":10070},{"krate":0,"index":11353},{"krate":0,"index":11367},{"krate":0,"index":11366},{"krate":0,"index":11364},{"krate":0,"index":11361},{"krate":0,"index":11358},{"krate":0,"index":11359},{"krate":0,"index":11355},{"krate":0,"index":11356},{"krate":0,"index":10071},{"krate":0,"index":10075},{"krate":0,"index":10078},{"krate":0,"index":10080},{"krate":0,"index":11369},{"krate":0,"index":11383},{"krate":0,"index":11382},{"krate":0,"index":11380},{"krate":0,"index":11377},{"krate":0,"index":11374},{"krate":0,"index":11375},{"krate":0,"index":11371},{"krate":0,"index":11372},{"krate":0,"index":10081},{"krate":0,"index":10085},{"krate":0,"index":10088},{"krate":0,"index":10090},{"krate":0,"index":11385},{"krate":0,"index":11399},{"krate":0,"index":11398},{"krate":0,"index":11396},{"krate":0,"index":11393},{"krate":0,"index":11390},{"krate":0,"index":11391},{"krate":0,"index":11387},{"krate":0,"index":11388},{"krate":0,"index":10091},{"krate":0,"index":10095},{"krate":0,"index":10098},{"krate":0,"index":10100},{"krate":0,"index":11401},{"krate":0,"index":11415},{"krate":0,"index":11414},{"krate":0,"index":11412},{"krate":0,"index":11409},{"krate":0,"index":11406},{"krate":0,"index":11407},{"krate":0,"index":11403},{"krate":0,"index":11404},{"krate":0,"index":10101},{"krate":0,"index":10105},{"krate":0,"index":10108},{"krate":0,"index":10110},{"krate":0,"index":11417},{"krate":0,"index":11431},{"krate":0,"index":11430},{"krate":0,"index":11428},{"krate":0,"index":11425},{"krate":0,"index":11422},{"krate":0,"index":11423},{"krate":0,"index":11419},{"krate":0,"index":11420},{"krate":0,"index":10111},{"krate":0,"index":10115},{"krate":0,"index":10118},{"krate":0,"index":10120},{"krate":0,"index":11433},{"krate":0,"index":11447},{"krate":0,"index":11446},{"krate":0,"index":11444},{"krate":0,"index":11441},{"krate":0,"index":11438},{"krate":0,"index":11439},{"krate":0,"index":11435},{"krate":0,"index":11436},{"krate":0,"index":10121},{"krate":0,"index":10125},{"krate":0,"index":10128},{"krate":0,"index":10130},{"krate":0,"index":11449},{"krate":0,"index":11463},{"krate":0,"index":11462},{"krate":0,"index":11460},{"krate":0,"index":11457},{"krate":0,"index":11454},{"krate":0,"index":11455},{"krate":0,"index":11451},{"krate":0,"index":11452},{"krate":0,"index":10131},{"krate":0,"index":10135},{"krate":0,"index":10138},{"krate":0,"index":10140},{"krate":0,"index":11465},{"krate":0,"index":11479},{"krate":0,"index":11478},{"krate":0,"index":11476},{"krate":0,"index":11473},{"krate":0,"index":11470},{"krate":0,"index":11471},{"krate":0,"index":11467},{"krate":0,"index":11468},{"krate":0,"index":10141},{"krate":0,"index":10145},{"krate":0,"index":10148},{"krate":0,"index":10150},{"krate":0,"index":11481},{"krate":0,"index":11495},{"krate":0,"index":11494},{"krate":0,"index":11492},{"krate":0,"index":11489},{"krate":0,"index":11486},{"krate":0,"index":11487},{"krate":0,"index":11483},{"krate":0,"index":11484},{"krate":0,"index":10151},{"krate":0,"index":10155},{"krate":0,"index":10158},{"krate":0,"index":10160},{"krate":0,"index":11497},{"krate":0,"index":11511},{"krate":0,"index":11510},{"krate":0,"index":11508},{"krate":0,"index":11505},{"krate":0,"index":11502},{"krate":0,"index":11503},{"krate":0,"index":11499},{"krate":0,"index":11500},{"krate":0,"index":10161},{"krate":0,"index":10165},{"krate":0,"index":10168},{"krate":0,"index":10170},{"krate":0,"index":11513},{"krate":0,"index":11527},{"krate":0,"index":11526},{"krate":0,"index":11524},{"krate":0,"index":11521},{"krate":0,"index":11518},{"krate":0,"index":11519},{"krate":0,"index":11515},{"krate":0,"index":11516},{"krate":0,"index":10171},{"krate":0,"index":10175},{"krate":0,"index":10178},{"krate":0,"index":10180},{"krate":0,"index":11529},{"krate":0,"index":11543},{"krate":0,"index":11542},{"krate":0,"index":11540},{"krate":0,"index":11537},{"krate":0,"index":11534},{"krate":0,"index":11535},{"krate":0,"index":11531},{"krate":0,"index":11532},{"krate":0,"index":10181},{"krate":0,"index":10185},{"krate":0,"index":10188},{"krate":0,"index":10190},{"krate":0,"index":11545},{"krate":0,"index":11559},{"krate":0,"index":11558},{"krate":0,"index":11556},{"krate":0,"index":11553},{"krate":0,"index":11550},{"krate":0,"index":11551},{"krate":0,"index":11547},{"krate":0,"index":11548},{"krate":0,"index":10191},{"krate":0,"index":10195},{"krate":0,"index":10198},{"krate":0,"index":10200},{"krate":0,"index":11561},{"krate":0,"index":11575},{"krate":0,"index":11574},{"krate":0,"index":11572},{"krate":0,"index":11569},{"krate":0,"index":11566},{"krate":0,"index":11567},{"krate":0,"index":11563},{"krate":0,"index":11564},{"krate":0,"index":10201},{"krate":0,"index":10205},{"krate":0,"index":10208},{"krate":0,"index":10210},{"krate":0,"index":11577},{"krate":0,"index":11591},{"krate":0,"index":11590},{"krate":0,"index":11588},{"krate":0,"index":11585},{"krate":0,"index":11582},{"krate":0,"index":11583},{"krate":0,"index":11579},{"krate":0,"index":11580},{"krate":0,"index":10211},{"krate":0,"index":10215},{"krate":0,"index":10218},{"krate":0,"index":10220},{"krate":0,"index":11593},{"krate":0,"index":11607},{"krate":0,"index":11606},{"krate":0,"index":11604},{"krate":0,"index":11601},{"krate":0,"index":11598},{"krate":0,"index":11599},{"krate":0,"index":11595},{"krate":0,"index":11596},{"krate":0,"index":10221},{"krate":0,"index":10225},{"krate":0,"index":10228},{"krate":0,"index":10230},{"krate":0,"index":11609},{"krate":0,"index":11623},{"krate":0,"index":11622},{"krate":0,"index":11620},{"krate":0,"index":11617},{"krate":0,"index":11614},{"krate":0,"index":11615},{"krate":0,"index":11611},{"krate":0,"index":11612},{"krate":0,"index":10231},{"krate":0,"index":10235},{"krate":0,"index":10238},{"krate":0,"index":10240},{"krate":0,"index":11625},{"krate":0,"index":11639},{"krate":0,"index":11638},{"krate":0,"index":11636},{"krate":0,"index":11633},{"krate":0,"index":11630},{"krate":0,"index":11631},{"krate":0,"index":11627},{"krate":0,"index":11628},{"krate":0,"index":10241},{"krate":0,"index":10245},{"krate":0,"index":10248},{"krate":0,"index":10250},{"krate":0,"index":11641},{"krate":0,"index":11655},{"krate":0,"index":11654},{"krate":0,"index":11652},{"krate":0,"index":11649},{"krate":0,"index":11646},{"krate":0,"index":11647},{"krate":0,"index":11643},{"krate":0,"index":11644},{"krate":0,"index":10251},{"krate":0,"index":10255},{"krate":0,"index":10258},{"krate":0,"index":10260},{"krate":0,"index":11657},{"krate":0,"index":11671},{"krate":0,"index":11670},{"krate":0,"index":11668},{"krate":0,"index":11665},{"krate":0,"index":11662},{"krate":0,"index":11663},{"krate":0,"index":11659},{"krate":0,"index":11660},{"krate":0,"index":10261},{"krate":0,"index":10265},{"krate":0,"index":10268},{"krate":0,"index":10270},{"krate":0,"index":11673},{"krate":0,"index":11687},{"krate":0,"index":11686},{"krate":0,"index":11684},{"krate":0,"index":11681},{"krate":0,"index":11678},{"krate":0,"index":11679},{"krate":0,"index":11675},{"krate":0,"index":11676},{"krate":0,"index":10271},{"krate":0,"index":10275},{"krate":0,"index":10278},{"krate":0,"index":10280},{"krate":0,"index":11689},{"krate":0,"index":11703},{"krate":0,"index":11702},{"krate":0,"index":11700},{"krate":0,"index":11697},{"krate":0,"index":11694},{"krate":0,"index":11695},{"krate":0,"index":11691},{"krate":0,"index":11692},{"krate":0,"index":10281},{"krate":0,"index":10285},{"krate":0,"index":10288},{"krate":0,"index":10290},{"krate":0,"index":11705},{"krate":0,"index":11719},{"krate":0,"index":11718},{"krate":0,"index":11716},{"krate":0,"index":11713},{"krate":0,"index":11710},{"krate":0,"index":11711},{"krate":0,"index":11707},{"krate":0,"index":11708},{"krate":0,"index":10291},{"krate":0,"index":10295},{"krate":0,"index":10298},{"krate":0,"index":10300},{"krate":0,"index":11721},{"krate":0,"index":11735},{"krate":0,"index":11734},{"krate":0,"index":11732},{"krate":0,"index":11729},{"krate":0,"index":11726},{"krate":0,"index":11727},{"krate":0,"index":11723},{"krate":0,"index":11724},{"krate":0,"index":10301},{"krate":0,"index":10305},{"krate":0,"index":10308},{"krate":0,"index":10310},{"krate":0,"index":11737},{"krate":0,"index":11751},{"krate":0,"index":11750},{"krate":0,"index":11748},{"krate":0,"index":11745},{"krate":0,"index":11742},{"krate":0,"index":11743},{"krate":0,"index":11739},{"krate":0,"index":11740},{"krate":0,"index":10311},{"krate":0,"index":10315},{"krate":0,"index":10318},{"krate":0,"index":10320},{"krate":0,"index":11753},{"krate":0,"index":11767},{"krate":0,"index":11766},{"krate":0,"index":11764},{"krate":0,"index":11761},{"krate":0,"index":11758},{"krate":0,"index":11759},{"krate":0,"index":11755},{"krate":0,"index":11756},{"krate":0,"index":10321},{"krate":0,"index":10325},{"krate":0,"index":10328},{"krate":0,"index":10330},{"krate":0,"index":11769},{"krate":0,"index":11783},{"krate":0,"index":11782},{"krate":0,"index":11780},{"krate":0,"index":11777},{"krate":0,"index":11774},{"krate":0,"index":11775},{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":10331},{"krate":0,"index":10335},{"krate":0,"index":10338},{"krate":0,"index":10340},{"krate":0,"index":11785},{"krate":0,"index":11799},{"krate":0,"index":11798},{"krate":0,"index":11796},{"krate":0,"index":11793},{"krate":0,"index":11790},{"krate":0,"index":11791},{"krate":0,"index":11787},{"krate":0,"index":11788},{"krate":0,"index":10341},{"krate":0,"index":10345},{"krate":0,"index":10348},{"krate":0,"index":10350},{"krate":0,"index":11801},{"krate":0,"index":11815},{"krate":0,"index":11814},{"krate":0,"index":11812},{"krate":0,"index":11809},{"krate":0,"index":11806},{"krate":0,"index":11807},{"krate":0,"index":11803},{"krate":0,"index":11804},{"krate":0,"index":10351},{"krate":0,"index":10355},{"krate":0,"index":10358},{"krate":0,"index":10360},{"krate":0,"index":11817},{"krate":0,"index":11831},{"krate":0,"index":11830},{"krate":0,"index":11828},{"krate":0,"index":11825},{"krate":0,"index":11822},{"krate":0,"index":11823},{"krate":0,"index":11819},{"krate":0,"index":11820},{"krate":0,"index":10361},{"krate":0,"index":10365},{"krate":0,"index":10368},{"krate":0,"index":10370},{"krate":0,"index":11833},{"krate":0,"index":11847},{"krate":0,"index":11846},{"krate":0,"index":11844},{"krate":0,"index":11841},{"krate":0,"index":11838},{"krate":0,"index":11839},{"krate":0,"index":11835},{"krate":0,"index":11836},{"krate":0,"index":10371},{"krate":0,"index":10375},{"krate":0,"index":10378},{"krate":0,"index":10380},{"krate":0,"index":11849},{"krate":0,"index":11863},{"krate":0,"index":11862},{"krate":0,"index":11860},{"krate":0,"index":11857},{"krate":0,"index":11854},{"krate":0,"index":11855},{"krate":0,"index":11851},{"krate":0,"index":11852},{"krate":0,"index":10381},{"krate":0,"index":10385},{"krate":0,"index":10388},{"krate":0,"index":10390},{"krate":0,"index":11865},{"krate":0,"index":11879},{"krate":0,"index":11878},{"krate":0,"index":11876},{"krate":0,"index":11873},{"krate":0,"index":11870},{"krate":0,"index":11871},{"krate":0,"index":11867},{"krate":0,"index":11868},{"krate":0,"index":10391},{"krate":0,"index":10395},{"krate":0,"index":10398},{"krate":0,"index":10400},{"krate":0,"index":11881},{"krate":0,"index":11895},{"krate":0,"index":11894},{"krate":0,"index":11892},{"krate":0,"index":11889},{"krate":0,"index":11886},{"krate":0,"index":11887},{"krate":0,"index":11883},{"krate":0,"index":11884},{"krate":0,"index":10401},{"krate":0,"index":10405},{"krate":0,"index":10408},{"krate":0,"index":10410},{"krate":0,"index":11897},{"krate":0,"index":11911},{"krate":0,"index":11910},{"krate":0,"index":11908},{"krate":0,"index":11905},{"krate":0,"index":11902},{"krate":0,"index":11903},{"krate":0,"index":11899},{"krate":0,"index":11900},{"krate":0,"index":10411},{"krate":0,"index":10415},{"krate":0,"index":10418},{"krate":0,"index":10420},{"krate":0,"index":11913},{"krate":0,"index":11927},{"krate":0,"index":11926},{"krate":0,"index":11924},{"krate":0,"index":11921},{"krate":0,"index":11918},{"krate":0,"index":11919},{"krate":0,"index":11915},{"krate":0,"index":11916},{"krate":0,"index":10421},{"krate":0,"index":10425},{"krate":0,"index":10428},{"krate":0,"index":10430},{"krate":0,"index":11929},{"krate":0,"index":11943},{"krate":0,"index":11942},{"krate":0,"index":11940},{"krate":0,"index":11937},{"krate":0,"index":11934},{"krate":0,"index":11935},{"krate":0,"index":11931},{"krate":0,"index":11932},{"krate":0,"index":10431},{"krate":0,"index":10435},{"krate":0,"index":10438},{"krate":0,"index":10440},{"krate":0,"index":11945},{"krate":0,"index":11959},{"krate":0,"index":11958},{"krate":0,"index":11956},{"krate":0,"index":11953},{"krate":0,"index":11950},{"krate":0,"index":11951},{"krate":0,"index":11947},{"krate":0,"index":11948},{"krate":0,"index":10441},{"krate":0,"index":10445},{"krate":0,"index":10448},{"krate":0,"index":10450},{"krate":0,"index":11961},{"krate":0,"index":11975},{"krate":0,"index":11974},{"krate":0,"index":11972},{"krate":0,"index":11969},{"krate":0,"index":11966},{"krate":0,"index":11967},{"krate":0,"index":11963},{"krate":0,"index":11964},{"krate":0,"index":10451},{"krate":0,"index":10455},{"krate":0,"index":10458},{"krate":0,"index":10460},{"krate":0,"index":11977},{"krate":0,"index":11991},{"krate":0,"index":11990},{"krate":0,"index":11988},{"krate":0,"index":11985},{"krate":0,"index":11982},{"krate":0,"index":11983},{"krate":0,"index":11979},{"krate":0,"index":11980},{"krate":0,"index":10461},{"krate":0,"index":10465},{"krate":0,"index":10468},{"krate":0,"index":10470},{"krate":0,"index":11993},{"krate":0,"index":12007},{"krate":0,"index":12006},{"krate":0,"index":12004},{"krate":0,"index":12001},{"krate":0,"index":11998},{"krate":0,"index":11999},{"krate":0,"index":11995},{"krate":0,"index":11996},{"krate":0,"index":10471},{"krate":0,"index":10475},{"krate":0,"index":10478},{"krate":0,"index":10480},{"krate":0,"index":12009},{"krate":0,"index":12023},{"krate":0,"index":12022},{"krate":0,"index":12020},{"krate":0,"index":12017},{"krate":0,"index":12014},{"krate":0,"index":12015},{"krate":0,"index":12011},{"krate":0,"index":12012},{"krate":0,"index":10481},{"krate":0,"index":10485},{"krate":0,"index":10488},{"krate":0,"index":10490},{"krate":0,"index":12025},{"krate":0,"index":12039},{"krate":0,"index":12038},{"krate":0,"index":12036},{"krate":0,"index":12033},{"krate":0,"index":12030},{"krate":0,"index":12031},{"krate":0,"index":12027},{"krate":0,"index":12028},{"krate":0,"index":10491},{"krate":0,"index":10495},{"krate":0,"index":10498},{"krate":0,"index":10500},{"krate":0,"index":12041},{"krate":0,"index":12055},{"krate":0,"index":12054},{"krate":0,"index":12052},{"krate":0,"index":12049},{"krate":0,"index":12046},{"krate":0,"index":12047},{"krate":0,"index":12043},{"krate":0,"index":12044},{"krate":0,"index":10501},{"krate":0,"index":10505},{"krate":0,"index":10508},{"krate":0,"index":10510},{"krate":0,"index":12057},{"krate":0,"index":12071},{"krate":0,"index":12070},{"krate":0,"index":12068},{"krate":0,"index":12065},{"krate":0,"index":12062},{"krate":0,"index":12063},{"krate":0,"index":12059},{"krate":0,"index":12060},{"krate":0,"index":10511},{"krate":0,"index":10515},{"krate":0,"index":10518},{"krate":0,"index":10520},{"krate":0,"index":12073},{"krate":0,"index":12087},{"krate":0,"index":12086},{"krate":0,"index":12084},{"krate":0,"index":12081},{"krate":0,"index":12078},{"krate":0,"index":12079},{"krate":0,"index":12075},{"krate":0,"index":12076},{"krate":0,"index":10521},{"krate":0,"index":10525},{"krate":0,"index":10528},{"krate":0,"index":10530},{"krate":0,"index":12089},{"krate":0,"index":12103},{"krate":0,"index":12102},{"krate":0,"index":12100},{"krate":0,"index":12097},{"krate":0,"index":12094},{"krate":0,"index":12095},{"krate":0,"index":12091},{"krate":0,"index":12092},{"krate":0,"index":10531},{"krate":0,"index":10535},{"krate":0,"index":10538},{"krate":0,"index":10540},{"krate":0,"index":12105},{"krate":0,"index":12119},{"krate":0,"index":12118},{"krate":0,"index":12116},{"krate":0,"index":12113},{"krate":0,"index":12110},{"krate":0,"index":12111},{"krate":0,"index":12107},{"krate":0,"index":12108},{"krate":0,"index":10541},{"krate":0,"index":10545},{"krate":0,"index":10548},{"krate":0,"index":10550},{"krate":0,"index":12121},{"krate":0,"index":12135},{"krate":0,"index":12134},{"krate":0,"index":12132},{"krate":0,"index":12129},{"krate":0,"index":12126},{"krate":0,"index":12127},{"krate":0,"index":12123},{"krate":0,"index":12124},{"krate":0,"index":10551},{"krate":0,"index":10555},{"krate":0,"index":10558},{"krate":0,"index":10560},{"krate":0,"index":12137},{"krate":0,"index":12151},{"krate":0,"index":12150},{"krate":0,"index":12148},{"krate":0,"index":12145},{"krate":0,"index":12142},{"krate":0,"index":12143},{"krate":0,"index":12139},{"krate":0,"index":12140},{"krate":0,"index":10561},{"krate":0,"index":10565},{"krate":0,"index":10568},{"krate":0,"index":10570},{"krate":0,"index":12153},{"krate":0,"index":12167},{"krate":0,"index":12166},{"krate":0,"index":12164},{"krate":0,"index":12161},{"krate":0,"index":12158},{"krate":0,"index":12159},{"krate":0,"index":12155},{"krate":0,"index":12156},{"krate":0,"index":10571},{"krate":0,"index":10575},{"krate":0,"index":10578},{"krate":0,"index":10580},{"krate":0,"index":12169},{"krate":0,"index":12183},{"krate":0,"index":12182},{"krate":0,"index":12180},{"krate":0,"index":12177},{"krate":0,"index":12174},{"krate":0,"index":12175},{"krate":0,"index":12171},{"krate":0,"index":12172},{"krate":0,"index":10581},{"krate":0,"index":10585},{"krate":0,"index":10588},{"krate":0,"index":10590},{"krate":0,"index":12185},{"krate":0,"index":12199},{"krate":0,"index":12198},{"krate":0,"index":12196},{"krate":0,"index":12193},{"krate":0,"index":12190},{"krate":0,"index":12191},{"krate":0,"index":12187},{"krate":0,"index":12188},{"krate":0,"index":10591},{"krate":0,"index":10595},{"krate":0,"index":10598},{"krate":0,"index":10600},{"krate":0,"index":12201},{"krate":0,"index":12215},{"krate":0,"index":12214},{"krate":0,"index":12212},{"krate":0,"index":12209},{"krate":0,"index":12206},{"krate":0,"index":12207},{"krate":0,"index":12203},{"krate":0,"index":12204},{"krate":0,"index":10601},{"krate":0,"index":10605},{"krate":0,"index":10608},{"krate":0,"index":10610},{"krate":0,"index":12217},{"krate":0,"index":12231},{"krate":0,"index":12230},{"krate":0,"index":12228},{"krate":0,"index":12225},{"krate":0,"index":12222},{"krate":0,"index":12223},{"krate":0,"index":12219},{"krate":0,"index":12220},{"krate":0,"index":10611},{"krate":0,"index":10615},{"krate":0,"index":10618},{"krate":0,"index":10620},{"krate":0,"index":12233},{"krate":0,"index":12247},{"krate":0,"index":12246},{"krate":0,"index":12244},{"krate":0,"index":12241},{"krate":0,"index":12238},{"krate":0,"index":12239},{"krate":0,"index":12235},{"krate":0,"index":12236},{"krate":0,"index":10621},{"krate":0,"index":10625},{"krate":0,"index":10628},{"krate":0,"index":10630},{"krate":0,"index":12249},{"krate":0,"index":12263},{"krate":0,"index":12262},{"krate":0,"index":12260},{"krate":0,"index":12257},{"krate":0,"index":12254},{"krate":0,"index":12255},{"krate":0,"index":12251},{"krate":0,"index":12252},{"krate":0,"index":10631},{"krate":0,"index":10635},{"krate":0,"index":10638},{"krate":0,"index":10640},{"krate":0,"index":12265},{"krate":0,"index":12279},{"krate":0,"index":12278},{"krate":0,"index":12276},{"krate":0,"index":12273},{"krate":0,"index":12270},{"krate":0,"index":12271},{"krate":0,"index":12267},{"krate":0,"index":12268},{"krate":0,"index":10641},{"krate":0,"index":10645},{"krate":0,"index":10648},{"krate":0,"index":10650},{"krate":0,"index":12281},{"krate":0,"index":12295},{"krate":0,"index":12294},{"krate":0,"index":12292},{"krate":0,"index":12289},{"krate":0,"index":12286},{"krate":0,"index":12287},{"krate":0,"index":12283},{"krate":0,"index":12284},{"krate":0,"index":10651},{"krate":0,"index":10655},{"krate":0,"index":10658},{"krate":0,"index":10660},{"krate":0,"index":12297},{"krate":0,"index":12311},{"krate":0,"index":12310},{"krate":0,"index":12308},{"krate":0,"index":12305},{"krate":0,"index":12302},{"krate":0,"index":12303},{"krate":0,"index":12299},{"krate":0,"index":12300},{"krate":0,"index":10661},{"krate":0,"index":10665},{"krate":0,"index":10668},{"krate":0,"index":10670},{"krate":0,"index":12313},{"krate":0,"index":12327},{"krate":0,"index":12326},{"krate":0,"index":12324},{"krate":0,"index":12321},{"krate":0,"index":12318},{"krate":0,"index":12319},{"krate":0,"index":12315},{"krate":0,"index":12316},{"krate":0,"index":10671},{"krate":0,"index":10675},{"krate":0,"index":10678},{"krate":0,"index":10680},{"krate":0,"index":12329},{"krate":0,"index":12343},{"krate":0,"index":12342},{"krate":0,"index":12340},{"krate":0,"index":12337},{"krate":0,"index":12334},{"krate":0,"index":12335},{"krate":0,"index":12331},{"krate":0,"index":12332},{"krate":0,"index":10681},{"krate":0,"index":10685},{"krate":0,"index":10688},{"krate":0,"index":10690},{"krate":0,"index":12345},{"krate":0,"index":12359},{"krate":0,"index":12358},{"krate":0,"index":12356},{"krate":0,"index":12353},{"krate":0,"index":12350},{"krate":0,"index":12351},{"krate":0,"index":12347},{"krate":0,"index":12348},{"krate":0,"index":10691},{"krate":0,"index":10695},{"krate":0,"index":10698},{"krate":0,"index":10700},{"krate":0,"index":12361},{"krate":0,"index":12375},{"krate":0,"index":12374},{"krate":0,"index":12372},{"krate":0,"index":12369},{"krate":0,"index":12366},{"krate":0,"index":12367},{"krate":0,"index":12363},{"krate":0,"index":12364},{"krate":0,"index":10701},{"krate":0,"index":10705},{"krate":0,"index":10708},{"krate":0,"index":10710},{"krate":0,"index":12377},{"krate":0,"index":12391},{"krate":0,"index":12390},{"krate":0,"index":12388},{"krate":0,"index":12385},{"krate":0,"index":12382},{"krate":0,"index":12383},{"krate":0,"index":12379},{"krate":0,"index":12380},{"krate":0,"index":10711},{"krate":0,"index":10715},{"krate":0,"index":10718},{"krate":0,"index":10720},{"krate":0,"index":12393},{"krate":0,"index":12407},{"krate":0,"index":12406},{"krate":0,"index":12404},{"krate":0,"index":12401},{"krate":0,"index":12398},{"krate":0,"index":12399},{"krate":0,"index":12395},{"krate":0,"index":12396},{"krate":0,"index":10721},{"krate":0,"index":10725},{"krate":0,"index":10728},{"krate":0,"index":10730},{"krate":0,"index":12409},{"krate":0,"index":12423},{"krate":0,"index":12422},{"krate":0,"index":12420},{"krate":0,"index":12417},{"krate":0,"index":12414},{"krate":0,"index":12415},{"krate":0,"index":12411},{"krate":0,"index":12412},{"krate":0,"index":10731},{"krate":0,"index":10735},{"krate":0,"index":10738},{"krate":0,"index":10740},{"krate":0,"index":12425},{"krate":0,"index":12439},{"krate":0,"index":12438},{"krate":0,"index":12436},{"krate":0,"index":12433},{"krate":0,"index":12430},{"krate":0,"index":12431},{"krate":0,"index":12427},{"krate":0,"index":12428},{"krate":0,"index":10741},{"krate":0,"index":10745},{"krate":0,"index":10748},{"krate":0,"index":10750},{"krate":0,"index":12441},{"krate":0,"index":12455},{"krate":0,"index":12454},{"krate":0,"index":12452},{"krate":0,"index":12449},{"krate":0,"index":12446},{"krate":0,"index":12447},{"krate":0,"index":12443},{"krate":0,"index":12444},{"krate":0,"index":10751},{"krate":0,"index":10755},{"krate":0,"index":10758},{"krate":0,"index":10760},{"krate":0,"index":12457},{"krate":0,"index":12471},{"krate":0,"index":12470},{"krate":0,"index":12468},{"krate":0,"index":12465},{"krate":0,"index":12462},{"krate":0,"index":12463},{"krate":0,"index":12459},{"krate":0,"index":12460},{"krate":0,"index":10761},{"krate":0,"index":10765},{"krate":0,"index":10768},{"krate":0,"index":10770},{"krate":0,"index":12473},{"krate":0,"index":12487},{"krate":0,"index":12486},{"krate":0,"index":12484},{"krate":0,"index":12481},{"krate":0,"index":12478},{"krate":0,"index":12479},{"krate":0,"index":12475},{"krate":0,"index":12476},{"krate":0,"index":10771},{"krate":0,"index":10775},{"krate":0,"index":10778},{"krate":0,"index":10780},{"krate":0,"index":12489},{"krate":0,"index":12503},{"krate":0,"index":12502},{"krate":0,"index":12500},{"krate":0,"index":12497},{"krate":0,"index":12494},{"krate":0,"index":12495},{"krate":0,"index":12491},{"krate":0,"index":12492},{"krate":0,"index":10781},{"krate":0,"index":10785},{"krate":0,"index":10788},{"krate":0,"index":10790},{"krate":0,"index":12505},{"krate":0,"index":12519},{"krate":0,"index":12518},{"krate":0,"index":12516},{"krate":0,"index":12513},{"krate":0,"index":12510},{"krate":0,"index":12511},{"krate":0,"index":12507},{"krate":0,"index":12508},{"krate":0,"index":10791},{"krate":0,"index":10795},{"krate":0,"index":10798},{"krate":0,"index":10800},{"krate":0,"index":12521},{"krate":0,"index":12535},{"krate":0,"index":12534},{"krate":0,"index":12532},{"krate":0,"index":12529},{"krate":0,"index":12526},{"krate":0,"index":12527},{"krate":0,"index":12523},{"krate":0,"index":12524},{"krate":0,"index":10801},{"krate":0,"index":10805},{"krate":0,"index":10808},{"krate":0,"index":10810},{"krate":0,"index":12537},{"krate":0,"index":12551},{"krate":0,"index":12550},{"krate":0,"index":12548},{"krate":0,"index":12545},{"krate":0,"index":12542},{"krate":0,"index":12543},{"krate":0,"index":12539},{"krate":0,"index":12540},{"krate":0,"index":10811},{"krate":0,"index":10815},{"krate":0,"index":10818},{"krate":0,"index":10820},{"krate":0,"index":12553},{"krate":0,"index":12567},{"krate":0,"index":12566},{"krate":0,"index":12564},{"krate":0,"index":12561},{"krate":0,"index":12558},{"krate":0,"index":12559},{"krate":0,"index":12555},{"krate":0,"index":12556},{"krate":0,"index":10821},{"krate":0,"index":10825},{"krate":0,"index":10828},{"krate":0,"index":10830},{"krate":0,"index":12569},{"krate":0,"index":12583},{"krate":0,"index":12582},{"krate":0,"index":12580},{"krate":0,"index":12577},{"krate":0,"index":12574},{"krate":0,"index":12575},{"krate":0,"index":12571},{"krate":0,"index":12572},{"krate":0,"index":10831},{"krate":0,"index":10835},{"krate":0,"index":10838},{"krate":0,"index":10840},{"krate":0,"index":12585},{"krate":0,"index":12599},{"krate":0,"index":12598},{"krate":0,"index":12596},{"krate":0,"index":12593},{"krate":0,"index":12590},{"krate":0,"index":12591},{"krate":0,"index":12587},{"krate":0,"index":12588},{"krate":0,"index":10841},{"krate":0,"index":10845},{"krate":0,"index":10848},{"krate":0,"index":10850},{"krate":0,"index":12601},{"krate":0,"index":12615},{"krate":0,"index":12614},{"krate":0,"index":12612},{"krate":0,"index":12609},{"krate":0,"index":12606},{"krate":0,"index":12607},{"krate":0,"index":12603},{"krate":0,"index":12604},{"krate":0,"index":10851},{"krate":0,"index":10855},{"krate":0,"index":10858},{"krate":0,"index":10860},{"krate":0,"index":12617},{"krate":0,"index":12631},{"krate":0,"index":12630},{"krate":0,"index":12628},{"krate":0,"index":12625},{"krate":0,"index":12622},{"krate":0,"index":12623},{"krate":0,"index":12619},{"krate":0,"index":12620},{"krate":0,"index":10861},{"krate":0,"index":10865},{"krate":0,"index":10868},{"krate":0,"index":10870},{"krate":0,"index":12633},{"krate":0,"index":12647},{"krate":0,"index":12646},{"krate":0,"index":12644},{"krate":0,"index":12641},{"krate":0,"index":12638},{"krate":0,"index":12639},{"krate":0,"index":12635},{"krate":0,"index":12636},{"krate":0,"index":10871},{"krate":0,"index":10875},{"krate":0,"index":10878},{"krate":0,"index":10880},{"krate":0,"index":12649},{"krate":0,"index":12663},{"krate":0,"index":12662},{"krate":0,"index":12660},{"krate":0,"index":12657},{"krate":0,"index":12654},{"krate":0,"index":12655},{"krate":0,"index":12651},{"krate":0,"index":12652},{"krate":0,"index":10881},{"krate":0,"index":10885},{"krate":0,"index":10888},{"krate":0,"index":10890},{"krate":0,"index":12665},{"krate":0,"index":12679},{"krate":0,"index":12678},{"krate":0,"index":12676},{"krate":0,"index":12673},{"krate":0,"index":12670},{"krate":0,"index":12671},{"krate":0,"index":12667},{"krate":0,"index":12668},{"krate":0,"index":10891},{"krate":0,"index":10895},{"krate":0,"index":10898},{"krate":0,"index":10900},{"krate":0,"index":12681},{"krate":0,"index":12695},{"krate":0,"index":12694},{"krate":0,"index":12692},{"krate":0,"index":12689},{"krate":0,"index":12686},{"krate":0,"index":12687},{"krate":0,"index":12683},{"krate":0,"index":12684},{"krate":0,"index":10901},{"krate":0,"index":10905},{"krate":0,"index":10908},{"krate":0,"index":10910},{"krate":0,"index":12697},{"krate":0,"index":12711},{"krate":0,"index":12710},{"krate":0,"index":12708},{"krate":0,"index":12705},{"krate":0,"index":12702},{"krate":0,"index":12703},{"krate":0,"index":12699},{"krate":0,"index":12700},{"krate":0,"index":10911},{"krate":0,"index":10915},{"krate":0,"index":10918},{"krate":0,"index":10920},{"krate":0,"index":12713},{"krate":0,"index":12727},{"krate":0,"index":12726},{"krate":0,"index":12724},{"krate":0,"index":12721},{"krate":0,"index":12718},{"krate":0,"index":12719},{"krate":0,"index":12715},{"krate":0,"index":12716},{"krate":0,"index":10921},{"krate":0,"index":10925},{"krate":0,"index":10928},{"krate":0,"index":10930},{"krate":0,"index":12729},{"krate":0,"index":12743},{"krate":0,"index":12742},{"krate":0,"index":12740},{"krate":0,"index":12737},{"krate":0,"index":12734},{"krate":0,"index":12735},{"krate":0,"index":12731},{"krate":0,"index":12732},{"krate":0,"index":10931},{"krate":0,"index":10935},{"krate":0,"index":10938},{"krate":0,"index":10940},{"krate":0,"index":12745},{"krate":0,"index":12759},{"krate":0,"index":12758},{"krate":0,"index":12756},{"krate":0,"index":12753},{"krate":0,"index":12750},{"krate":0,"index":12751},{"krate":0,"index":12747},{"krate":0,"index":12748},{"krate":0,"index":10941},{"krate":0,"index":10945},{"krate":0,"index":10948},{"krate":0,"index":10950},{"krate":0,"index":12761},{"krate":0,"index":12775},{"krate":0,"index":12774},{"krate":0,"index":12772},{"krate":0,"index":12769},{"krate":0,"index":12766},{"krate":0,"index":12767},{"krate":0,"index":12763},{"krate":0,"index":12764},{"krate":0,"index":10951},{"krate":0,"index":10955},{"krate":0,"index":10958},{"krate":0,"index":10960},{"krate":0,"index":12777},{"krate":0,"index":12791},{"krate":0,"index":12790},{"krate":0,"index":12788},{"krate":0,"index":12785},{"krate":0,"index":12782},{"krate":0,"index":12783},{"krate":0,"index":12779},{"krate":0,"index":12780},{"krate":0,"index":10961},{"krate":0,"index":10965},{"krate":0,"index":10968},{"krate":0,"index":10970},{"krate":0,"index":12793},{"krate":0,"index":12807},{"krate":0,"index":12806},{"krate":0,"index":12804},{"krate":0,"index":12801},{"krate":0,"index":12798},{"krate":0,"index":12799},{"krate":0,"index":12795},{"krate":0,"index":12796},{"krate":0,"index":10971},{"krate":0,"index":10975},{"krate":0,"index":10978},{"krate":0,"index":10980},{"krate":0,"index":12809},{"krate":0,"index":12823},{"krate":0,"index":12822},{"krate":0,"index":12820},{"krate":0,"index":12817},{"krate":0,"index":12814},{"krate":0,"index":12815},{"krate":0,"index":12811},{"krate":0,"index":12812},{"krate":0,"index":10981},{"krate":0,"index":10985},{"krate":0,"index":10988},{"krate":0,"index":10990},{"krate":0,"index":12825},{"krate":0,"index":12839},{"krate":0,"index":12838},{"krate":0,"index":12836},{"krate":0,"index":12833},{"krate":0,"index":12830},{"krate":0,"index":12831},{"krate":0,"index":12827},{"krate":0,"index":12828},{"krate":0,"index":10991},{"krate":0,"index":10995},{"krate":0,"index":10998},{"krate":0,"index":11000},{"krate":0,"index":12841},{"krate":0,"index":12855},{"krate":0,"index":12854},{"krate":0,"index":12852},{"krate":0,"index":12849},{"krate":0,"index":12846},{"krate":0,"index":12847},{"krate":0,"index":12843},{"krate":0,"index":12844},{"krate":0,"index":11001},{"krate":0,"index":11005},{"krate":0,"index":11008},{"krate":0,"index":11010},{"krate":0,"index":12857},{"krate":0,"index":12871},{"krate":0,"index":12870},{"krate":0,"index":12868},{"krate":0,"index":12865},{"krate":0,"index":12862},{"krate":0,"index":12863},{"krate":0,"index":12859},{"krate":0,"index":12860},{"krate":0,"index":11011},{"krate":0,"index":11015},{"krate":0,"index":11018},{"krate":0,"index":11020},{"krate":0,"index":12873},{"krate":0,"index":12887},{"krate":0,"index":12886},{"krate":0,"index":12884},{"krate":0,"index":12881},{"krate":0,"index":12878},{"krate":0,"index":12879},{"krate":0,"index":12875},{"krate":0,"index":12876},{"krate":0,"index":11021},{"krate":0,"index":11025},{"krate":0,"index":11028},{"krate":0,"index":11030},{"krate":0,"index":12889},{"krate":0,"index":12903},{"krate":0,"index":12902},{"krate":0,"index":12900},{"krate":0,"index":12897},{"krate":0,"index":12894},{"krate":0,"index":12895},{"krate":0,"index":12891},{"krate":0,"index":12892},{"krate":0,"index":11031},{"krate":0,"index":11035},{"krate":0,"index":11038},{"krate":0,"index":11040},{"krate":0,"index":12905},{"krate":0,"index":12919},{"krate":0,"index":12918},{"krate":0,"index":12916},{"krate":0,"index":12913},{"krate":0,"index":12910},{"krate":0,"index":12911},{"krate":0,"index":12907},{"krate":0,"index":12908},{"krate":0,"index":11041},{"krate":0,"index":11045},{"krate":0,"index":11048},{"krate":0,"index":11050},{"krate":0,"index":12921},{"krate":0,"index":12935},{"krate":0,"index":12934},{"krate":0,"index":12932},{"krate":0,"index":12929},{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12923},{"krate":0,"index":12924},{"krate":0,"index":11051},{"krate":0,"index":11055},{"krate":0,"index":11058},{"krate":0,"index":11060},{"krate":0,"index":12937},{"krate":0,"index":12951},{"krate":0,"index":12950},{"krate":0,"index":12948},{"krate":0,"index":12945},{"krate":0,"index":12942},{"krate":0,"index":12943},{"krate":0,"index":12939},{"krate":0,"index":12940},{"krate":0,"index":11061},{"krate":0,"index":11065},{"krate":0,"index":11068},{"krate":0,"index":11070},{"krate":0,"index":12953},{"krate":0,"index":12967},{"krate":0,"index":12966},{"krate":0,"index":12964},{"krate":0,"index":12961},{"krate":0,"index":12958},{"krate":0,"index":12959},{"krate":0,"index":12955},{"krate":0,"index":12956},{"krate":0,"index":11071},{"krate":0,"index":11075},{"krate":0,"index":11078},{"krate":0,"index":11080},{"krate":0,"index":12969},{"krate":0,"index":12983},{"krate":0,"index":12982},{"krate":0,"index":12980},{"krate":0,"index":12977},{"krate":0,"index":12974},{"krate":0,"index":12975},{"krate":0,"index":12971},{"krate":0,"index":12972},{"krate":0,"index":11081},{"krate":0,"index":11085},{"krate":0,"index":11088},{"krate":0,"index":11090},{"krate":0,"index":12985},{"krate":0,"index":12999},{"krate":0,"index":12998},{"krate":0,"index":12996},{"krate":0,"index":12993},{"krate":0,"index":12990},{"krate":0,"index":12991},{"krate":0,"index":12987},{"krate":0,"index":12988},{"krate":0,"index":11091},{"krate":0,"index":11095},{"krate":0,"index":11098},{"krate":0,"index":11100},{"krate":0,"index":13001},{"krate":0,"index":13015},{"krate":0,"index":13014},{"krate":0,"index":13012},{"krate":0,"index":13009},{"krate":0,"index":13006},{"krate":0,"index":13007},{"krate":0,"index":13003},{"krate":0,"index":13004},{"krate":0,"index":11101},{"krate":0,"index":11105},{"krate":0,"index":11108},{"krate":0,"index":11110},{"krate":0,"index":13017},{"krate":0,"index":13031},{"krate":0,"index":13030},{"krate":0,"index":13028},{"krate":0,"index":13025},{"krate":0,"index":13022},{"krate":0,"index":13023},{"krate":0,"index":13019},{"krate":0,"index":13020},{"krate":0,"index":11111},{"krate":0,"index":11115},{"krate":0,"index":11118},{"krate":0,"index":11120},{"krate":0,"index":13033},{"krate":0,"index":13047},{"krate":0,"index":13046},{"krate":0,"index":13044},{"krate":0,"index":13041},{"krate":0,"index":13038},{"krate":0,"index":13039},{"krate":0,"index":13035},{"krate":0,"index":13036},{"krate":0,"index":11121},{"krate":0,"index":11125},{"krate":0,"index":11128},{"krate":0,"index":11130},{"krate":0,"index":13049},{"krate":0,"index":13063},{"krate":0,"index":13062},{"krate":0,"index":13060},{"krate":0,"index":13057},{"krate":0,"index":13054},{"krate":0,"index":13055},{"krate":0,"index":13051},{"krate":0,"index":13052},{"krate":0,"index":11131},{"krate":0,"index":11135},{"krate":0,"index":11138},{"krate":0,"index":11140},{"krate":0,"index":13065},{"krate":0,"index":13079},{"krate":0,"index":13078},{"krate":0,"index":13076},{"krate":0,"index":13073},{"krate":0,"index":13070},{"krate":0,"index":13071},{"krate":0,"index":13067},{"krate":0,"index":13068},{"krate":0,"index":11141},{"krate":0,"index":11145},{"krate":0,"index":11148},{"krate":0,"index":11150},{"krate":0,"index":13081},{"krate":0,"index":13095},{"krate":0,"index":13094},{"krate":0,"index":13092},{"krate":0,"index":13089},{"krate":0,"index":13086},{"krate":0,"index":13087},{"krate":0,"index":13083},{"krate":0,"index":13084},{"krate":0,"index":11151},{"krate":0,"index":11155},{"krate":0,"index":11158},{"krate":0,"index":11160},{"krate":0,"index":13097},{"krate":0,"index":13111},{"krate":0,"index":13110},{"krate":0,"index":13108},{"krate":0,"index":13105},{"krate":0,"index":13102},{"krate":0,"index":13103},{"krate":0,"index":13099},{"krate":0,"index":13100},{"krate":0,"index":11161},{"krate":0,"index":11165},{"krate":0,"index":11168},{"krate":0,"index":11170},{"krate":0,"index":13113},{"krate":0,"index":13127},{"krate":0,"index":13126},{"krate":0,"index":13124},{"krate":0,"index":13121},{"krate":0,"index":13118},{"krate":0,"index":13119},{"krate":0,"index":13115},{"krate":0,"index":13116},{"krate":0,"index":11171},{"krate":0,"index":11175},{"krate":0,"index":11178},{"krate":0,"index":11180},{"krate":0,"index":13129},{"krate":0,"index":13143},{"krate":0,"index":13142},{"krate":0,"index":13140},{"krate":0,"index":13137},{"krate":0,"index":13134},{"krate":0,"index":13135},{"krate":0,"index":13131},{"krate":0,"index":13132},{"krate":0,"index":11181},{"krate":0,"index":11185},{"krate":0,"index":11188},{"krate":0,"index":11190},{"krate":0,"index":13145},{"krate":0,"index":13159},{"krate":0,"index":13158},{"krate":0,"index":13156},{"krate":0,"index":13153},{"krate":0,"index":13150},{"krate":0,"index":13151},{"krate":0,"index":13147},{"krate":0,"index":13148},{"krate":0,"index":11191},{"krate":0,"index":11195},{"krate":0,"index":11198},{"krate":0,"index":11200},{"krate":0,"index":13161},{"krate":0,"index":13175},{"krate":0,"index":13174},{"krate":0,"index":13172},{"krate":0,"index":13169},{"krate":0,"index":13166},{"krate":0,"index":13167},{"krate":0,"index":13163},{"krate":0,"index":13164},{"krate":0,"index":11201},{"krate":0,"index":11205},{"krate":0,"index":11208},{"krate":0,"index":11210},{"krate":0,"index":13177},{"krate":0,"index":13191},{"krate":0,"index":13190},{"krate":0,"index":13188},{"krate":0,"index":13185},{"krate":0,"index":13182},{"krate":0,"index":13183},{"krate":0,"index":13179},{"krate":0,"index":13180},{"krate":0,"index":11211},{"krate":0,"index":11215},{"krate":0,"index":11218},{"krate":0,"index":11220},{"krate":0,"index":13193},{"krate":0,"index":13207},{"krate":0,"index":13206},{"krate":0,"index":13204},{"krate":0,"index":13201},{"krate":0,"index":13198},{"krate":0,"index":13199},{"krate":0,"index":13195},{"krate":0,"index":13196},{"krate":0,"index":11221},{"krate":0,"index":11225},{"krate":0,"index":11228},{"krate":0,"index":11230},{"krate":0,"index":13209},{"krate":0,"index":13223},{"krate":0,"index":13222},{"krate":0,"index":13220},{"krate":0,"index":13217},{"krate":0,"index":13214},{"krate":0,"index":13215},{"krate":0,"index":13211},{"krate":0,"index":13212},{"krate":0,"index":11231},{"krate":0,"index":11235},{"krate":0,"index":11238},{"krate":0,"index":11240},{"krate":0,"index":13225},{"krate":0,"index":13239},{"krate":0,"index":13238},{"krate":0,"index":13236},{"krate":0,"index":13233},{"krate":0,"index":13230},{"krate":0,"index":13231},{"krate":0,"index":13227},{"krate":0,"index":13228},{"krate":0,"index":11241},{"krate":0,"index":11245},{"krate":0,"index":11248},{"krate":0,"index":11250},{"krate":0,"index":13241},{"krate":0,"index":13255},{"krate":0,"index":13254},{"krate":0,"index":13252},{"krate":0,"index":13249},{"krate":0,"index":13246},{"krate":0,"index":13247},{"krate":0,"index":13243},{"krate":0,"index":13244},{"krate":0,"index":11251},{"krate":0,"index":11255},{"krate":0,"index":11258},{"krate":0,"index":11260},{"krate":0,"index":13257},{"krate":0,"index":13271},{"krate":0,"index":13270},{"krate":0,"index":13268},{"krate":0,"index":13265},{"krate":0,"index":13262},{"krate":0,"index":13263},{"krate":0,"index":13259},{"krate":0,"index":13260},{"krate":0,"index":11261},{"krate":0,"index":11265},{"krate":0,"index":11268},{"krate":0,"index":11270},{"krate":0,"index":13273},{"krate":0,"index":13287},{"krate":0,"index":13286},{"krate":0,"index":13284},{"krate":0,"index":13281},{"krate":0,"index":13278},{"krate":0,"index":13279},{"krate":0,"index":13275},{"krate":0,"index":13276},{"krate":0,"index":11271},{"krate":0,"index":11275},{"krate":0,"index":11278},{"krate":0,"index":11280},{"krate":0,"index":13289},{"krate":0,"index":13303},{"krate":0,"index":13302},{"krate":0,"index":13300},{"krate":0,"index":13297},{"krate":0,"index":13294},{"krate":0,"index":13295},{"krate":0,"index":13291},{"krate":0,"index":13292},{"krate":0,"index":11281},{"krate":0,"index":11285},{"krate":0,"index":11288},{"krate":0,"index":11290},{"krate":0,"index":13305},{"krate":0,"index":13319},{"krate":0,"index":13318},{"krate":0,"index":13316},{"krate":0,"index":13313},{"krate":0,"index":13310},{"krate":0,"index":13311},{"krate":0,"index":13307},{"krate":0,"index":13308},{"krate":0,"index":11291},{"krate":0,"index":11295},{"krate":0,"index":11298},{"krate":0,"index":11300},{"krate":0,"index":13321},{"krate":0,"index":13335},{"krate":0,"index":13334},{"krate":0,"index":13332},{"krate":0,"index":13329},{"krate":0,"index":13326},{"krate":0,"index":13327},{"krate":0,"index":13323},{"krate":0,"index":13324},{"krate":0,"index":11301},{"krate":0,"index":11305},{"krate":0,"index":11308},{"krate":0,"index":11310},{"krate":0,"index":13337},{"krate":0,"index":13351},{"krate":0,"index":13350},{"krate":0,"index":13348},{"krate":0,"index":13345},{"krate":0,"index":13342},{"krate":0,"index":13343},{"krate":0,"index":13339},{"krate":0,"index":13340},{"krate":0,"index":11311},{"krate":0,"index":11315},{"krate":0,"index":11318},{"krate":0,"index":11320},{"krate":0,"index":528},{"krate":0,"index":537},{"krate":0,"index":548},{"krate":0,"index":558},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":576},{"krate":0,"index":581}],"decl_id":null,"docs":" Traits and tags for identifying the dimension of all algebraic entities.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":95695,"byte_end":95718,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/ Traits and tags for identifying the dimension of all algebraic entities.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":95720,"byte_end":95796,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":9829},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96215,"byte_end":96222,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::base::dimension::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":9830}],"decl_id":null,"docs":" Dim of dynamically-sized algebraic entities.\n","sig":null,"attributes":[{"value":"/ Dim of dynamically-sized algebraic entities.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96110,"byte_end":96158,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96327,"byte_end":96330,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Dynamic>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A dynamic size equal to `value`.\n","sig":null,"attributes":[{"value":"/ A dynamic size equal to `value`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96265,"byte_end":96301,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96306,"byte_end":96315,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":491},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96924,"byte_end":96933,"line_start":51,"line_end":51,"column_start":11,"column_end":20},"name":"IsDynamic","qualname":"::base::dimension::IsDynamic","value":"IsDynamic","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96878,"byte_end":96913,"line_start":50,"line_end":50,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97027,"byte_end":97041,"line_start":53,"line_end":53,"column_start":11,"column_end":25},"name":"IsNotStaticOne","qualname":"::base::dimension::IsNotStaticOne","value":"IsNotStaticOne","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic` and type-level integers different from `U1`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic` and type-level integers different from `U1`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96937,"byte_end":97016,"line_start":52,"line_end":52,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":495},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97285,"byte_end":97288,"line_start":60,"line_end":60,"column_start":11,"column_end":14},"name":"Dim","qualname":"::base::dimension::Dim","value":"Dim: Any + Debug + Copy + PartialEq + Send + Sync","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Trait implemented by any type that can be used as a dimension. This includes type-level\n integers and `Dynamic` (for dimensions not known at compile-time).\n","sig":null,"attributes":[{"value":"/ Trait implemented by any type that can be used as a dimension. This includes type-level","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97112,"byte_end":97203,"line_start":58,"line_end":58,"column_start":1,"column_end":92}},{"value":"/ integers and `Dynamic` (for dimensions not known at compile-time).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97204,"byte_end":97274,"line_start":59,"line_end":59,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97366,"byte_end":97368,"line_start":62,"line_end":62,"column_start":8,"column_end":10},"name":"is","qualname":"::base::dimension::Dim::is","value":"pub fn is<D: Dim>() -> bool","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97341,"byte_end":97358,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97570,"byte_end":97582,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"try_to_usize","qualname":"::base::dimension::Dim::try_to_usize","value":"pub fn try_to_usize() -> Option<usize>","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =\n Dynamic`.\n","sig":null,"attributes":[{"value":"/ Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97450,"byte_end":97544,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ Dynamic`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97549,"byte_end":97562,"line_start":67,"line_end":67,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97740,"byte_end":97745,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"value","qualname":"::base::dimension::Dim::value","value":"pub fn value(&Self) -> usize","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Gets the run-time value of `self`. For type-level integers, this is the same as\n `Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Gets the run-time value of `self`. For type-level integers, this is the same as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97608,"byte_end":97691,"line_start":70,"line_end":70,"column_start":5,"column_end":88}},{"value":"/ `Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97696,"byte_end":97732,"line_start":71,"line_end":71,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97924,"byte_end":97934,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::base::dimension::Dim::from_usize","value":"pub fn from_usize(usize) -> Self","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level\n integer and `dim != Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97768,"byte_end":97856,"line_start":74,"line_end":74,"column_start":5,"column_end":93}},{"value":"/ integer and `dim != Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97861,"byte_end":97916,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":9843},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100489,"byte_end":100495,"line_start":184,"line_end":184,"column_start":45,"column_end":51},"name":"DimSum","qualname":"::base::dimension::DimSum","value":"<D1 as DimAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9846},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100449,"byte_end":100455,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"DimAdd","qualname":"::base::dimension::DimAdd","value":"DimAdd<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9848},{"krate":0,"index":9849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9849},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100474,"byte_end":100477,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimAdd::add","value":"pub fn add(Self, D) -> Self::Output","parent":{"krate":0,"index":9846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9863},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100501,"byte_end":100511,"line_start":184,"line_end":184,"column_start":57,"column_end":67},"name":"DimNameSum","qualname":"::base::dimension::DimNameSum","value":"<D1 as DimNameAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9866},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100457,"byte_end":100467,"line_start":184,"line_end":184,"column_start":13,"column_end":23},"name":"DimNameAdd","qualname":"::base::dimension::DimNameAdd","value":"DimNameAdd<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9868},{"krate":0,"index":9869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9869},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100474,"byte_end":100477,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimNameAdd::add","value":"pub fn add(Self, D) -> Self::Output","parent":{"krate":0,"index":9866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9875},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100566,"byte_end":100573,"line_start":185,"line_end":185,"column_start":45,"column_end":52},"name":"DimProd","qualname":"::base::dimension::DimProd","value":"<D1 as DimMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9878},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100526,"byte_end":100532,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"DimMul","qualname":"::base::dimension::DimMul","value":"DimMul<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9880},{"krate":0,"index":9881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9881},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100551,"byte_end":100554,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimMul::mul","value":"pub fn mul(Self, D) -> Self::Output","parent":{"krate":0,"index":9878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9895},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100578,"byte_end":100589,"line_start":185,"line_end":185,"column_start":57,"column_end":68},"name":"DimNameProd","qualname":"::base::dimension::DimNameProd","value":"<D1 as DimNameMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9898},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100534,"byte_end":100544,"line_start":185,"line_end":185,"column_start":13,"column_end":23},"name":"DimNameMul","qualname":"::base::dimension::DimNameMul","value":"DimNameMul<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9900},{"krate":0,"index":9901}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9901},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100551,"byte_end":100554,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimNameMul::mul","value":"pub fn mul(Self, D) -> Self::Output","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9907},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100644,"byte_end":100651,"line_start":186,"line_end":186,"column_start":45,"column_end":52},"name":"DimDiff","qualname":"::base::dimension::DimDiff","value":"<D1 as DimSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9910},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100604,"byte_end":100610,"line_start":186,"line_end":186,"column_start":5,"column_end":11},"name":"DimSub","qualname":"::base::dimension::DimSub","value":"DimSub<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9912},{"krate":0,"index":9913}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100629,"byte_end":100632,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimSub::sub","value":"pub fn sub(Self, D) -> Self::Output","parent":{"krate":0,"index":9910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9927},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100656,"byte_end":100667,"line_start":186,"line_end":186,"column_start":57,"column_end":68},"name":"DimNameDiff","qualname":"::base::dimension::DimNameDiff","value":"<D1 as DimNameSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9930},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100612,"byte_end":100622,"line_start":186,"line_end":186,"column_start":13,"column_end":23},"name":"DimNameSub","qualname":"::base::dimension::DimNameSub","value":"DimNameSub<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9932},{"krate":0,"index":9933}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9933},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100629,"byte_end":100632,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimNameSub::sub","value":"pub fn sub(Self, D) -> Self::Output","parent":{"krate":0,"index":9930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9939},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100722,"byte_end":100729,"line_start":187,"line_end":187,"column_start":45,"column_end":52},"name":"DimQuot","qualname":"::base::dimension::DimQuot","value":"<D1 as DimDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9942},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100682,"byte_end":100688,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"DimDiv","qualname":"::base::dimension::DimDiv","value":"DimDiv<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9944},{"krate":0,"index":9945}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9945},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100707,"byte_end":100710,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimDiv::div","value":"pub fn div(Self, D) -> Self::Output","parent":{"krate":0,"index":9942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9959},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100734,"byte_end":100745,"line_start":187,"line_end":187,"column_start":57,"column_end":68},"name":"DimNameQuot","qualname":"::base::dimension::DimNameQuot","value":"<D1 as DimNameDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9962},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100690,"byte_end":100700,"line_start":187,"line_end":187,"column_start":13,"column_end":23},"name":"DimNameDiv","qualname":"::base::dimension::DimNameDiv","value":"DimNameDiv<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9964},{"krate":0,"index":9965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9965},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100707,"byte_end":100710,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimNameDiv::div","value":"pub fn div(Self, D) -> Self::Output","parent":{"krate":0,"index":9962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9971},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100800,"byte_end":100810,"line_start":188,"line_end":188,"column_start":45,"column_end":55},"name":"DimMinimum","qualname":"::base::dimension::DimMinimum","value":"<D1 as DimMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9974},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100760,"byte_end":100766,"line_start":188,"line_end":188,"column_start":5,"column_end":11},"name":"DimMin","qualname":"::base::dimension::DimMin","value":"DimMin<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9976},{"krate":0,"index":9977}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9977},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100785,"byte_end":100788,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimMin::min","value":"pub fn min(Self, D) -> Self::Output","parent":{"krate":0,"index":9974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9991},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100812,"byte_end":100826,"line_start":188,"line_end":188,"column_start":57,"column_end":71},"name":"DimNameMinimum","qualname":"::base::dimension::DimNameMinimum","value":"<D1 as DimNameMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9994},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100768,"byte_end":100778,"line_start":188,"line_end":188,"column_start":13,"column_end":23},"name":"DimNameMin","qualname":"::base::dimension::DimNameMin","value":"DimNameMin<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9996},{"krate":0,"index":9997}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9997},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100785,"byte_end":100788,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimNameMin::min","value":"pub fn min(Self, D) -> Self::Output","parent":{"krate":0,"index":9994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100881,"byte_end":100891,"line_start":189,"line_end":189,"column_start":45,"column_end":55},"name":"DimMaximum","qualname":"::base::dimension::DimMaximum","value":"<D1 as DimMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10006},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100841,"byte_end":100847,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"name":"DimMax","qualname":"::base::dimension::DimMax","value":"DimMax<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100866,"byte_end":100869,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimMax::max","value":"pub fn max(Self, D) -> Self::Output","parent":{"krate":0,"index":10006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10023},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100893,"byte_end":100907,"line_start":189,"line_end":189,"column_start":57,"column_end":71},"name":"DimNameMaximum","qualname":"::base::dimension::DimNameMaximum","value":"<D1 as DimNameMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10026},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100849,"byte_end":100859,"line_start":189,"line_end":189,"column_start":13,"column_end":23},"name":"DimNameMax","qualname":"::base::dimension::DimNameMax","value":"DimNameMax<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":10028},{"krate":0,"index":10029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10029},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100866,"byte_end":100869,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimNameMax::max","value":"pub fn max(Self, D) -> Self::Output","parent":{"krate":0,"index":10026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":512},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100990,"byte_end":100997,"line_start":193,"line_end":193,"column_start":11,"column_end":18},"name":"DimName","qualname":"::base::dimension::DimName","value":"DimName: Dim","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" Trait implemented exclusively by type-level integers.\n","sig":null,"attributes":[{"value":"/ Trait implemented exclusively by type-level integers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100922,"byte_end":100979,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101014,"byte_end":101019,"line_start":194,"line_end":194,"column_start":10,"column_end":15},"name":"Value","qualname":"::base::dimension::DimName::Value","value":"type Value: NamedDim<Name = Self>;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101116,"byte_end":101120,"line_start":197,"line_end":197,"column_start":8,"column_end":12},"name":"name","qualname":"::base::dimension::DimName::name","value":"pub fn name() -> Self","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The name of this dimension, i.e., the singleton `Self`.\n","sig":null,"attributes":[{"value":"/ The name of this dimension, i.e., the singleton `Self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101049,"byte_end":101108,"line_start":196,"line_end":196,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101240,"byte_end":101243,"line_start":202,"line_end":202,"column_start":8,"column_end":11},"name":"dim","qualname":"::base::dimension::DimName::dim","value":"pub fn dim() -> usize","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The value of this dimension.\n","sig":null,"attributes":[{"value":"/ The value of this dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101186,"byte_end":101218,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101223,"byte_end":101232,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":516},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101308,"byte_end":101316,"line_start":207,"line_end":207,"column_start":11,"column_end":19},"name":"NamedDim","qualname":"::base::dimension::NamedDim","value":"NamedDim: Sized + Any + Unsigned","parent":null,"children":[{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":517},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101352,"byte_end":101356,"line_start":208,"line_end":208,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::dimension::NamedDim::Name","value":"type Name: DimName<Value = Self>;","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10035},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101567,"byte_end":101569,"line_start":214,"line_end":214,"column_start":12,"column_end":14},"name":"U1","qualname":"::base::dimension::U1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension with a value of `1`.\n","sig":null,"attributes":[{"value":"/ A type level dimension with a value of `1`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101384,"byte_end":101431,"line_start":211,"line_end":211,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":11321},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103130,"byte_end":103132,"line_start":291,"line_end":291,"column_start":5,"column_end":7},"name":"U0","qualname":"::base::dimension::U0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103142,"byte_end":103144,"line_start":291,"line_end":291,"column_start":17,"column_end":19},"name":"U2","qualname":"::base::dimension::U2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11353},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103146,"byte_end":103148,"line_start":291,"line_end":291,"column_start":21,"column_end":23},"name":"U3","qualname":"::base::dimension::U3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11369},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103150,"byte_end":103152,"line_start":291,"line_end":291,"column_start":25,"column_end":27},"name":"U4","qualname":"::base::dimension::U4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11385},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103154,"byte_end":103156,"line_start":291,"line_end":291,"column_start":29,"column_end":31},"name":"U5","qualname":"::base::dimension::U5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11401},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103158,"byte_end":103160,"line_start":291,"line_end":291,"column_start":33,"column_end":35},"name":"U6","qualname":"::base::dimension::U6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11417},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103162,"byte_end":103164,"line_start":291,"line_end":291,"column_start":37,"column_end":39},"name":"U7","qualname":"::base::dimension::U7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11433},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103166,"byte_end":103168,"line_start":291,"line_end":291,"column_start":41,"column_end":43},"name":"U8","qualname":"::base::dimension::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11449},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103170,"byte_end":103172,"line_start":291,"line_end":291,"column_start":45,"column_end":47},"name":"U9","qualname":"::base::dimension::U9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11465},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103174,"byte_end":103177,"line_start":291,"line_end":291,"column_start":49,"column_end":52},"name":"U10","qualname":"::base::dimension::U10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11481},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103179,"byte_end":103182,"line_start":291,"line_end":291,"column_start":54,"column_end":57},"name":"U11","qualname":"::base::dimension::U11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11497},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103184,"byte_end":103187,"line_start":291,"line_end":291,"column_start":59,"column_end":62},"name":"U12","qualname":"::base::dimension::U12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11513},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103189,"byte_end":103192,"line_start":291,"line_end":291,"column_start":64,"column_end":67},"name":"U13","qualname":"::base::dimension::U13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11529},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103194,"byte_end":103197,"line_start":291,"line_end":291,"column_start":69,"column_end":72},"name":"U14","qualname":"::base::dimension::U14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11545},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103199,"byte_end":103202,"line_start":291,"line_end":291,"column_start":74,"column_end":77},"name":"U15","qualname":"::base::dimension::U15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11561},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103204,"byte_end":103207,"line_start":291,"line_end":291,"column_start":79,"column_end":82},"name":"U16","qualname":"::base::dimension::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11577},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103209,"byte_end":103212,"line_start":291,"line_end":291,"column_start":84,"column_end":87},"name":"U17","qualname":"::base::dimension::U17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11593},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103214,"byte_end":103217,"line_start":291,"line_end":291,"column_start":89,"column_end":92},"name":"U18","qualname":"::base::dimension::U18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11609},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103223,"byte_end":103226,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"U19","qualname":"::base::dimension::U19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11625},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103228,"byte_end":103231,"line_start":292,"line_end":292,"column_start":10,"column_end":13},"name":"U20","qualname":"::base::dimension::U20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11641},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103233,"byte_end":103236,"line_start":292,"line_end":292,"column_start":15,"column_end":18},"name":"U21","qualname":"::base::dimension::U21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11657},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103238,"byte_end":103241,"line_start":292,"line_end":292,"column_start":20,"column_end":23},"name":"U22","qualname":"::base::dimension::U22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11673},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103243,"byte_end":103246,"line_start":292,"line_end":292,"column_start":25,"column_end":28},"name":"U23","qualname":"::base::dimension::U23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11689},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103248,"byte_end":103251,"line_start":292,"line_end":292,"column_start":30,"column_end":33},"name":"U24","qualname":"::base::dimension::U24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11705},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103253,"byte_end":103256,"line_start":292,"line_end":292,"column_start":35,"column_end":38},"name":"U25","qualname":"::base::dimension::U25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11721},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103258,"byte_end":103261,"line_start":292,"line_end":292,"column_start":40,"column_end":43},"name":"U26","qualname":"::base::dimension::U26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11737},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103263,"byte_end":103266,"line_start":292,"line_end":292,"column_start":45,"column_end":48},"name":"U27","qualname":"::base::dimension::U27","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11753},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103268,"byte_end":103271,"line_start":292,"line_end":292,"column_start":50,"column_end":53},"name":"U28","qualname":"::base::dimension::U28","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11769},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103273,"byte_end":103276,"line_start":292,"line_end":292,"column_start":55,"column_end":58},"name":"U29","qualname":"::base::dimension::U29","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11785},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103278,"byte_end":103281,"line_start":292,"line_end":292,"column_start":60,"column_end":63},"name":"U30","qualname":"::base::dimension::U30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11801},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103283,"byte_end":103286,"line_start":292,"line_end":292,"column_start":65,"column_end":68},"name":"U31","qualname":"::base::dimension::U31","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11817},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103288,"byte_end":103291,"line_start":292,"line_end":292,"column_start":70,"column_end":73},"name":"U32","qualname":"::base::dimension::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11833},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103293,"byte_end":103296,"line_start":292,"line_end":292,"column_start":75,"column_end":78},"name":"U33","qualname":"::base::dimension::U33","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11849},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103298,"byte_end":103301,"line_start":292,"line_end":292,"column_start":80,"column_end":83},"name":"U34","qualname":"::base::dimension::U34","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11865},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103303,"byte_end":103306,"line_start":292,"line_end":292,"column_start":85,"column_end":88},"name":"U35","qualname":"::base::dimension::U35","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11881},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103308,"byte_end":103311,"line_start":292,"line_end":292,"column_start":90,"column_end":93},"name":"U36","qualname":"::base::dimension::U36","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11897},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103313,"byte_end":103316,"line_start":292,"line_end":292,"column_start":95,"column_end":98},"name":"U37","qualname":"::base::dimension::U37","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103322,"byte_end":103325,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"U38","qualname":"::base::dimension::U38","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11929},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103327,"byte_end":103330,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"U39","qualname":"::base::dimension::U39","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11945},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103332,"byte_end":103335,"line_start":293,"line_end":293,"column_start":15,"column_end":18},"name":"U40","qualname":"::base::dimension::U40","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11961},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103337,"byte_end":103340,"line_start":293,"line_end":293,"column_start":20,"column_end":23},"name":"U41","qualname":"::base::dimension::U41","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11977},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103342,"byte_end":103345,"line_start":293,"line_end":293,"column_start":25,"column_end":28},"name":"U42","qualname":"::base::dimension::U42","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11993},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103347,"byte_end":103350,"line_start":293,"line_end":293,"column_start":30,"column_end":33},"name":"U43","qualname":"::base::dimension::U43","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103352,"byte_end":103355,"line_start":293,"line_end":293,"column_start":35,"column_end":38},"name":"U44","qualname":"::base::dimension::U44","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12025},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103357,"byte_end":103360,"line_start":293,"line_end":293,"column_start":40,"column_end":43},"name":"U45","qualname":"::base::dimension::U45","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12041},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103362,"byte_end":103365,"line_start":293,"line_end":293,"column_start":45,"column_end":48},"name":"U46","qualname":"::base::dimension::U46","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12057},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103367,"byte_end":103370,"line_start":293,"line_end":293,"column_start":50,"column_end":53},"name":"U47","qualname":"::base::dimension::U47","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12073},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103372,"byte_end":103375,"line_start":293,"line_end":293,"column_start":55,"column_end":58},"name":"U48","qualname":"::base::dimension::U48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12089},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103377,"byte_end":103380,"line_start":293,"line_end":293,"column_start":60,"column_end":63},"name":"U49","qualname":"::base::dimension::U49","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12105},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103382,"byte_end":103385,"line_start":293,"line_end":293,"column_start":65,"column_end":68},"name":"U50","qualname":"::base::dimension::U50","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12121},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103387,"byte_end":103390,"line_start":293,"line_end":293,"column_start":70,"column_end":73},"name":"U51","qualname":"::base::dimension::U51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12137},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103392,"byte_end":103395,"line_start":293,"line_end":293,"column_start":75,"column_end":78},"name":"U52","qualname":"::base::dimension::U52","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12153},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103397,"byte_end":103400,"line_start":293,"line_end":293,"column_start":80,"column_end":83},"name":"U53","qualname":"::base::dimension::U53","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12169},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103402,"byte_end":103405,"line_start":293,"line_end":293,"column_start":85,"column_end":88},"name":"U54","qualname":"::base::dimension::U54","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12185},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103407,"byte_end":103410,"line_start":293,"line_end":293,"column_start":90,"column_end":93},"name":"U55","qualname":"::base::dimension::U55","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12201},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103412,"byte_end":103415,"line_start":293,"line_end":293,"column_start":95,"column_end":98},"name":"U56","qualname":"::base::dimension::U56","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12217},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103421,"byte_end":103424,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"U57","qualname":"::base::dimension::U57","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12233},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103426,"byte_end":103429,"line_start":294,"line_end":294,"column_start":10,"column_end":13},"name":"U58","qualname":"::base::dimension::U58","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12249},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103431,"byte_end":103434,"line_start":294,"line_end":294,"column_start":15,"column_end":18},"name":"U59","qualname":"::base::dimension::U59","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103436,"byte_end":103439,"line_start":294,"line_end":294,"column_start":20,"column_end":23},"name":"U60","qualname":"::base::dimension::U60","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12281},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103441,"byte_end":103444,"line_start":294,"line_end":294,"column_start":25,"column_end":28},"name":"U61","qualname":"::base::dimension::U61","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12297},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103446,"byte_end":103449,"line_start":294,"line_end":294,"column_start":30,"column_end":33},"name":"U62","qualname":"::base::dimension::U62","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12313},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103451,"byte_end":103454,"line_start":294,"line_end":294,"column_start":35,"column_end":38},"name":"U63","qualname":"::base::dimension::U63","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12329},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103456,"byte_end":103459,"line_start":294,"line_end":294,"column_start":40,"column_end":43},"name":"U64","qualname":"::base::dimension::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12345},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103461,"byte_end":103464,"line_start":294,"line_end":294,"column_start":45,"column_end":48},"name":"U65","qualname":"::base::dimension::U65","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12361},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103466,"byte_end":103469,"line_start":294,"line_end":294,"column_start":50,"column_end":53},"name":"U66","qualname":"::base::dimension::U66","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12377},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103471,"byte_end":103474,"line_start":294,"line_end":294,"column_start":55,"column_end":58},"name":"U67","qualname":"::base::dimension::U67","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12393},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103476,"byte_end":103479,"line_start":294,"line_end":294,"column_start":60,"column_end":63},"name":"U68","qualname":"::base::dimension::U68","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12409},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103481,"byte_end":103484,"line_start":294,"line_end":294,"column_start":65,"column_end":68},"name":"U69","qualname":"::base::dimension::U69","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12425},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103486,"byte_end":103489,"line_start":294,"line_end":294,"column_start":70,"column_end":73},"name":"U70","qualname":"::base::dimension::U70","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12441},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103491,"byte_end":103494,"line_start":294,"line_end":294,"column_start":75,"column_end":78},"name":"U71","qualname":"::base::dimension::U71","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12457},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103496,"byte_end":103499,"line_start":294,"line_end":294,"column_start":80,"column_end":83},"name":"U72","qualname":"::base::dimension::U72","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12473},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103501,"byte_end":103504,"line_start":294,"line_end":294,"column_start":85,"column_end":88},"name":"U73","qualname":"::base::dimension::U73","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12489},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103506,"byte_end":103509,"line_start":294,"line_end":294,"column_start":90,"column_end":93},"name":"U74","qualname":"::base::dimension::U74","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12505},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103511,"byte_end":103514,"line_start":294,"line_end":294,"column_start":95,"column_end":98},"name":"U75","qualname":"::base::dimension::U75","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12521},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103520,"byte_end":103523,"line_start":295,"line_end":295,"column_start":5,"column_end":8},"name":"U76","qualname":"::base::dimension::U76","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12537},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103525,"byte_end":103528,"line_start":295,"line_end":295,"column_start":10,"column_end":13},"name":"U77","qualname":"::base::dimension::U77","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12553},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103530,"byte_end":103533,"line_start":295,"line_end":295,"column_start":15,"column_end":18},"name":"U78","qualname":"::base::dimension::U78","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12569},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103535,"byte_end":103538,"line_start":295,"line_end":295,"column_start":20,"column_end":23},"name":"U79","qualname":"::base::dimension::U79","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12585},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103540,"byte_end":103543,"line_start":295,"line_end":295,"column_start":25,"column_end":28},"name":"U80","qualname":"::base::dimension::U80","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12601},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103545,"byte_end":103548,"line_start":295,"line_end":295,"column_start":30,"column_end":33},"name":"U81","qualname":"::base::dimension::U81","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12617},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103550,"byte_end":103553,"line_start":295,"line_end":295,"column_start":35,"column_end":38},"name":"U82","qualname":"::base::dimension::U82","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12633},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103555,"byte_end":103558,"line_start":295,"line_end":295,"column_start":40,"column_end":43},"name":"U83","qualname":"::base::dimension::U83","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12649},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103560,"byte_end":103563,"line_start":295,"line_end":295,"column_start":45,"column_end":48},"name":"U84","qualname":"::base::dimension::U84","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12665},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103565,"byte_end":103568,"line_start":295,"line_end":295,"column_start":50,"column_end":53},"name":"U85","qualname":"::base::dimension::U85","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12681},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103570,"byte_end":103573,"line_start":295,"line_end":295,"column_start":55,"column_end":58},"name":"U86","qualname":"::base::dimension::U86","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12697},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103575,"byte_end":103578,"line_start":295,"line_end":295,"column_start":60,"column_end":63},"name":"U87","qualname":"::base::dimension::U87","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12713},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103580,"byte_end":103583,"line_start":295,"line_end":295,"column_start":65,"column_end":68},"name":"U88","qualname":"::base::dimension::U88","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12729},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103585,"byte_end":103588,"line_start":295,"line_end":295,"column_start":70,"column_end":73},"name":"U89","qualname":"::base::dimension::U89","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12745},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103590,"byte_end":103593,"line_start":295,"line_end":295,"column_start":75,"column_end":78},"name":"U90","qualname":"::base::dimension::U90","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12761},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103595,"byte_end":103598,"line_start":295,"line_end":295,"column_start":80,"column_end":83},"name":"U91","qualname":"::base::dimension::U91","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12777},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103600,"byte_end":103603,"line_start":295,"line_end":295,"column_start":85,"column_end":88},"name":"U92","qualname":"::base::dimension::U92","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12793},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103605,"byte_end":103608,"line_start":295,"line_end":295,"column_start":90,"column_end":93},"name":"U93","qualname":"::base::dimension::U93","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12809},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103610,"byte_end":103613,"line_start":295,"line_end":295,"column_start":95,"column_end":98},"name":"U94","qualname":"::base::dimension::U94","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12825},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103619,"byte_end":103622,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"U95","qualname":"::base::dimension::U95","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12841},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103624,"byte_end":103627,"line_start":296,"line_end":296,"column_start":10,"column_end":13},"name":"U96","qualname":"::base::dimension::U96","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12857},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103629,"byte_end":103632,"line_start":296,"line_end":296,"column_start":15,"column_end":18},"name":"U97","qualname":"::base::dimension::U97","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12873},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103634,"byte_end":103637,"line_start":296,"line_end":296,"column_start":20,"column_end":23},"name":"U98","qualname":"::base::dimension::U98","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12889},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103639,"byte_end":103642,"line_start":296,"line_end":296,"column_start":25,"column_end":28},"name":"U99","qualname":"::base::dimension::U99","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12905},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103644,"byte_end":103648,"line_start":296,"line_end":296,"column_start":30,"column_end":34},"name":"U100","qualname":"::base::dimension::U100","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12921},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103650,"byte_end":103654,"line_start":296,"line_end":296,"column_start":36,"column_end":40},"name":"U101","qualname":"::base::dimension::U101","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12937},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103656,"byte_end":103660,"line_start":296,"line_end":296,"column_start":42,"column_end":46},"name":"U102","qualname":"::base::dimension::U102","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12953},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103662,"byte_end":103666,"line_start":296,"line_end":296,"column_start":48,"column_end":52},"name":"U103","qualname":"::base::dimension::U103","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12969},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103668,"byte_end":103672,"line_start":296,"line_end":296,"column_start":54,"column_end":58},"name":"U104","qualname":"::base::dimension::U104","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12985},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103674,"byte_end":103678,"line_start":296,"line_end":296,"column_start":60,"column_end":64},"name":"U105","qualname":"::base::dimension::U105","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13001},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103680,"byte_end":103684,"line_start":296,"line_end":296,"column_start":66,"column_end":70},"name":"U106","qualname":"::base::dimension::U106","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13017},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103686,"byte_end":103690,"line_start":296,"line_end":296,"column_start":72,"column_end":76},"name":"U107","qualname":"::base::dimension::U107","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13033},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103692,"byte_end":103696,"line_start":296,"line_end":296,"column_start":78,"column_end":82},"name":"U108","qualname":"::base::dimension::U108","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13049},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103698,"byte_end":103702,"line_start":296,"line_end":296,"column_start":84,"column_end":88},"name":"U109","qualname":"::base::dimension::U109","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13065},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103704,"byte_end":103708,"line_start":296,"line_end":296,"column_start":90,"column_end":94},"name":"U110","qualname":"::base::dimension::U110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13081},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103714,"byte_end":103718,"line_start":297,"line_end":297,"column_start":5,"column_end":9},"name":"U111","qualname":"::base::dimension::U111","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103720,"byte_end":103724,"line_start":297,"line_end":297,"column_start":11,"column_end":15},"name":"U112","qualname":"::base::dimension::U112","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13113},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103726,"byte_end":103730,"line_start":297,"line_end":297,"column_start":17,"column_end":21},"name":"U113","qualname":"::base::dimension::U113","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13129},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103732,"byte_end":103736,"line_start":297,"line_end":297,"column_start":23,"column_end":27},"name":"U114","qualname":"::base::dimension::U114","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13145},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103738,"byte_end":103742,"line_start":297,"line_end":297,"column_start":29,"column_end":33},"name":"U115","qualname":"::base::dimension::U115","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13161},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103744,"byte_end":103748,"line_start":297,"line_end":297,"column_start":35,"column_end":39},"name":"U116","qualname":"::base::dimension::U116","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13177},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103750,"byte_end":103754,"line_start":297,"line_end":297,"column_start":41,"column_end":45},"name":"U117","qualname":"::base::dimension::U117","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13193},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103756,"byte_end":103760,"line_start":297,"line_end":297,"column_start":47,"column_end":51},"name":"U118","qualname":"::base::dimension::U118","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13209},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103762,"byte_end":103766,"line_start":297,"line_end":297,"column_start":53,"column_end":57},"name":"U119","qualname":"::base::dimension::U119","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13225},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103768,"byte_end":103772,"line_start":297,"line_end":297,"column_start":59,"column_end":63},"name":"U120","qualname":"::base::dimension::U120","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13241},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103774,"byte_end":103778,"line_start":297,"line_end":297,"column_start":65,"column_end":69},"name":"U121","qualname":"::base::dimension::U121","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13257},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103780,"byte_end":103784,"line_start":297,"line_end":297,"column_start":71,"column_end":75},"name":"U122","qualname":"::base::dimension::U122","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13273},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103786,"byte_end":103790,"line_start":297,"line_end":297,"column_start":77,"column_end":81},"name":"U123","qualname":"::base::dimension::U123","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13289},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103792,"byte_end":103796,"line_start":297,"line_end":297,"column_start":83,"column_end":87},"name":"U124","qualname":"::base::dimension::U124","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13305},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103798,"byte_end":103802,"line_start":297,"line_end":297,"column_start":89,"column_end":93},"name":"U125","qualname":"::base::dimension::U125","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13321},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103804,"byte_end":103808,"line_start":297,"line_end":297,"column_start":95,"column_end":99},"name":"U126","qualname":"::base::dimension::U126","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":103814,"byte_end":103818,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"U127","qualname":"::base::dimension::U127","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":102095,"byte_end":102122,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":584},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::base::iter","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":21208},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":21214},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":13353},{"krate":0,"index":13365},{"krate":0,"index":13372},{"krate":0,"index":13382},{"krate":0,"index":13389},{"krate":0,"index":13401},{"krate":0,"index":13408},{"krate":0,"index":13418},{"krate":0,"index":13425},{"krate":0,"index":13433},{"krate":0,"index":599},{"krate":0,"index":606},{"krate":0,"index":616},{"krate":0,"index":623},{"krate":0,"index":632},{"krate":0,"index":640},{"krate":0,"index":650},{"krate":0,"index":13440},{"krate":0,"index":13448},{"krate":0,"index":657},{"krate":0,"index":664},{"krate":0,"index":674},{"krate":0,"index":681},{"krate":0,"index":690},{"krate":0,"index":698},{"krate":0,"index":708}],"decl_id":null,"docs":" Matrix iterators.\n","sig":null,"attributes":[{"value":"/ Matrix iterators.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":107444,"byte_end":107465,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":13353},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":112400,"byte_end":112410,"line_start":125,"line_end":125,"column_start":18,"column_end":28},"name":"MatrixIter","qualname":"::base::iter::MatrixIter","value":"MatrixIter {  }","parent":null,"children":[{"krate":0,"index":13359},{"krate":0,"index":13360},{"krate":0,"index":13361},{"krate":0,"index":13362},{"krate":0,"index":13363},{"krate":0,"index":13364}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":107789,"byte_end":107858,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13389},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":112472,"byte_end":112485,"line_start":126,"line_end":126,"column_start":18,"column_end":31},"name":"MatrixIterMut","qualname":"::base::iter::MatrixIterMut","value":"MatrixIterMut {  }","parent":null,"children":[{"krate":0,"index":13395},{"krate":0,"index":13396},{"krate":0,"index":13397},{"krate":0,"index":13398},{"krate":0,"index":13399},{"krate":0,"index":13400}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":107789,"byte_end":107858,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13425},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":112649,"byte_end":112656,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"RowIter","qualname":"::base::iter::RowIter","value":"RowIter {  }","parent":null,"children":[{"krate":0,"index":13431},{"krate":0,"index":13432}],"decl_id":null,"docs":" An iterator through the rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the rows of a matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":112592,"byte_end":112637,"line_start":134,"line_end":134,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":113916,"byte_end":113926,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"RowIterMut","qualname":"::base::iter::RowIterMut","value":"RowIterMut {  }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"decl_id":null,"docs":" An iterator through the mutable rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable rows of a matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":113851,"byte_end":113904,"line_start":183,"line_end":183,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":13440},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115429,"byte_end":115439,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::base::iter::ColumnIter","value":"ColumnIter {  }","parent":null,"children":[{"krate":0,"index":13446},{"krate":0,"index":13447}],"decl_id":null,"docs":" An iterator through the columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the columns of a matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115369,"byte_end":115417,"line_start":246,"line_end":246,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":116721,"byte_end":116734,"line_start":298,"line_end":298,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::base::iter::ColumnIterMut","value":"ColumnIterMut {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" An iterator through the mutable columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable columns of a matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":116653,"byte_end":116709,"line_start":297,"line_end":297,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":121069,"byte_end":121076,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"neg_mut","qualname":"<Matrix<N, R, C, S>>::neg_mut","value":"pub fn neg_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates `self` in-place.\n","sig":null,"attributes":[{"value":"/ Negates `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":121015,"byte_end":121043,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":121048,"byte_end":121057,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13475},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":132423,"byte_end":132429,"line_start":373,"line_end":373,"column_start":27,"column_end":33},"name":"add_to","qualname":"<Matrix<N, R1, C1, SA>>::add_to","value":"pub fn add_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":126875,"byte_end":126960,"line_start":255,"line_end":255,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":126973,"byte_end":126982,"line_start":256,"line_end":256,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13565},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":132653,"byte_end":132659,"line_start":376,"line_end":376,"column_start":27,"column_end":33},"name":"sub_to","qualname":"<Matrix<N, R1, C1, SA>>::sub_to","value":"pub fn sub_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":126875,"byte_end":126960,"line_start":255,"line_end":255,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":126973,"byte_end":126982,"line_start":256,"line_end":256,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142297,"byte_end":142303,"line_start":682,"line_end":682,"column_start":12,"column_end":18},"name":"tr_mul","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul","value":"pub fn tr_mul<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, C1, C2> where SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C1, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142228,"byte_end":142271,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142276,"byte_end":142285,"line_start":681,"line_end":681,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142783,"byte_end":142789,"line_start":697,"line_end":697,"column_start":12,"column_end":18},"name":"ad_mul","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul","value":"pub fn ad_mul<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, C1, C2> where N: SimdComplexField, SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C1, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142716,"byte_end":142757,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142762,"byte_end":142771,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":144849,"byte_end":144858,"line_start":759,"line_end":759,"column_start":12,"column_end":21},"name":"tr_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul_to","value":"pub fn tr_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n                 SC>(&Self, &Matrix<N, R2, C2, SB>,\n                     &mut Matrix<N, R3, C3, SC>) where SB: Storage<N, R2, C2>,\nSC: StorageMut<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nDimEq<C1, R3> + DimEq<C2, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":144718,"byte_end":144802,"line_start":756,"line_end":756,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":144807,"byte_end":144823,"line_start":757,"line_end":757,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":144828,"byte_end":144837,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145355,"byte_end":145364,"line_start":774,"line_end":774,"column_start":12,"column_end":21},"name":"ad_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul_to","value":"pub fn ad_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n                 SC>(&Self, &Matrix<N, R2, C2, SB>,\n                     &mut Matrix<N, R3, C3, SC>) where N: SimdComplexField,\nSB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + DimEq<C1, R3> + DimEq<C2, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145226,"byte_end":145308,"line_start":771,"line_end":771,"column_start":5,"column_end":87}},{"value":"/ allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145313,"byte_end":145329,"line_start":772,"line_end":772,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145334,"byte_end":145343,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145873,"byte_end":145879,"line_start":789,"line_end":789,"column_start":12,"column_end":18},"name":"mul_to","qualname":"<Matrix<N, R1, C1, SA>>::mul_to","value":"pub fn mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R3, R1> + SameNumberOfColumns<C3, C2> +\nAreMultipliable<R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145762,"byte_end":145847,"line_start":787,"line_end":787,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":145852,"byte_end":145861,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":146420,"byte_end":146429,"line_start":805,"line_end":805,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Matrix<N, R1, C1, SA>>::kronecker","value":"pub fn kronecker<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, DimProd<R1, R2>, DimProd<C1, C2>> where N: ClosedMul,\nR1: DimMul<R2>, C1: DimMul<C2>, SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, DimProd<R1, R2>, DimProd<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The kronecker product of two matrices (aka. tensor product of the corresponding linear\n maps).\n","sig":null,"attributes":[{"value":"/ The kronecker product of two matrices (aka. tensor product of the corresponding linear","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":146303,"byte_end":146393,"line_start":803,"line_end":803,"column_start":5,"column_end":95}},{"value":"/ maps).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":146398,"byte_end":146408,"line_start":804,"line_end":804,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":147907,"byte_end":147917,"line_start":850,"line_end":850,"column_start":12,"column_end":22},"name":"add_scalar","qualname":"<Matrix<N, R, C, S>>::add_scalar","value":"pub fn add_scalar(&Self, N) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self`.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":147795,"byte_end":147823,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":147828,"byte_end":147837,"line_start":848,"line_end":848,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use add_scalar_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":147842,"byte_end":147895,"line_start":849,"line_end":849,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148177,"byte_end":148191,"line_start":861,"line_end":861,"column_start":12,"column_end":26},"name":"add_scalar_mut","qualname":"<Matrix<N, R, C, S>>::add_scalar_mut","value":"pub fn add_scalar_mut(&mut Self, N) where S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self` in-place.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148114,"byte_end":148151,"line_start":859,"line_end":859,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148156,"byte_end":148165,"line_start":860,"line_end":860,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149347,"byte_end":149351,"line_start":900,"line_end":900,"column_start":12,"column_end":16},"name":"amax","qualname":"<Matrix<N, R, C, S>>::amax","value":"pub fn amax(&Self) -> N where N: Zero + SimdSigned + SimdPartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the largest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the largest absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149040,"byte_end":149120,"line_start":892,"line_end":892,"column_start":5,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149125,"byte_end":149138,"line_start":893,"line_end":893,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149143,"byte_end":149150,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149155,"byte_end":149183,"line_start":895,"line_end":895,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149188,"byte_end":149245,"line_start":896,"line_end":896,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149250,"byte_end":149309,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149314,"byte_end":149321,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149326,"byte_end":149335,"line_start":899,"line_end":899,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149915,"byte_end":149920,"line_start":920,"line_end":920,"column_start":12,"column_end":17},"name":"camax","qualname":"<Matrix<N, R, C, S>>::camax","value":"pub fn camax(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the largest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camax(), 5.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the largest 1-norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149569,"byte_end":149645,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149650,"byte_end":149663,"line_start":911,"line_end":911,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149668,"byte_end":149675,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149680,"byte_end":149719,"line_start":913,"line_end":913,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149724,"byte_end":149752,"line_start":914,"line_end":914,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149757,"byte_end":149790,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149795,"byte_end":149826,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camax(), 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149831,"byte_end":149877,"line_start":917,"line_end":917,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149882,"byte_end":149889,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149894,"byte_end":149903,"line_start":919,"line_end":919,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150469,"byte_end":150472,"line_start":939,"line_end":939,"column_start":12,"column_end":15},"name":"max","qualname":"<Matrix<N, R, C, S>>::max","value":"pub fn max(&Self) -> N where N: SimdPartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the largest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the largest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150139,"byte_end":150188,"line_start":930,"line_end":930,"column_start":5,"column_end":54}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150193,"byte_end":150206,"line_start":931,"line_end":931,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150211,"byte_end":150218,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150223,"byte_end":150251,"line_start":933,"line_end":933,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150256,"byte_end":150312,"line_start":934,"line_end":934,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150317,"byte_end":150376,"line_start":935,"line_end":935,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150381,"byte_end":150431,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150436,"byte_end":150443,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150448,"byte_end":150457,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151005,"byte_end":151009,"line_start":957,"line_end":957,"column_start":12,"column_end":16},"name":"amin","qualname":"<Matrix<N, R, C, S>>::amin","value":"pub fn amin(&Self) -> N where N: Zero + SimdPartialOrd + SimdSigned","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the smallest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);\n assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the smallest absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150697,"byte_end":150778,"line_start":949,"line_end":949,"column_start":5,"column_end":86}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150783,"byte_end":150796,"line_start":950,"line_end":950,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150801,"byte_end":150808,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150813,"byte_end":150841,"line_start":952,"line_end":952,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150846,"byte_end":150904,"line_start":953,"line_end":953,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150909,"byte_end":150967,"line_start":954,"line_end":954,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150972,"byte_end":150979,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":150984,"byte_end":150993,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151584,"byte_end":151589,"line_start":977,"line_end":977,"column_start":12,"column_end":17},"name":"camin","qualname":"<Matrix<N, R, C, S>>::camin","value":"pub fn camin(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the smallest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camin(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the smallest 1-norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151237,"byte_end":151314,"line_start":967,"line_end":967,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151319,"byte_end":151332,"line_start":968,"line_end":968,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151337,"byte_end":151344,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151349,"byte_end":151388,"line_start":970,"line_end":970,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151393,"byte_end":151421,"line_start":971,"line_end":971,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151426,"byte_end":151459,"line_start":972,"line_end":972,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151464,"byte_end":151495,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camin(), 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151500,"byte_end":151546,"line_start":974,"line_end":974,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151551,"byte_end":151558,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151563,"byte_end":151572,"line_start":976,"line_end":976,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":152214,"byte_end":152217,"line_start":999,"line_end":999,"column_start":12,"column_end":15},"name":"min","qualname":"<Matrix<N, R, C, S>>::min","value":"pub fn min(&Self) -> N where N: SimdPartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the smallest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);\n assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the smallest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151886,"byte_end":151936,"line_start":990,"line_end":990,"column_start":5,"column_end":55}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151941,"byte_end":151954,"line_start":991,"line_end":991,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151959,"byte_end":151966,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":151971,"byte_end":151999,"line_start":993,"line_end":993,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":152004,"byte_end":152061,"line_start":994,"line_end":994,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":152066,"byte_end":152121,"line_start":995,"line_end":995,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":152126,"byte_end":152176,"line_start":996,"line_end":996,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":152181,"byte_end":152188,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":152193,"byte_end":152202,"line_start":998,"line_end":998,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1005},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::base::storage","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":21320},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":21330},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":21334},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1053},{"krate":0,"index":1065},{"krate":0,"index":1069}],"decl_id":null,"docs":" Abstract definition of a matrix data storage.\n","sig":null,"attributes":[{"value":"/ Abstract definition of a matrix data storage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":152440,"byte_end":152489,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1017},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":152854,"byte_end":152870,"line_start":15,"line_end":15,"column_start":10,"column_end":26},"name":"SameShapeStorage","qualname":"::base::storage::SameShapeStorage","value":"<DefaultAllocator as\nAllocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.\n","sig":null,"attributes":[{"value":"/ The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":152753,"byte_end":152844,"line_start":14,"line_end":14,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1023},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153084,"byte_end":153089,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Owned","qualname":"::base::storage::Owned","value":"<DefaultAllocator as Allocator<N, R, C>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The owned data storage that can be allocated from `S`.\n","sig":null,"attributes":[{"value":"/ The owned data storage that can be allocated from `S`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153016,"byte_end":153074,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153247,"byte_end":153254,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::RStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::RStride","parent":null,"children":[],"decl_id":null,"docs":" The row-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The row-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153157,"byte_end":153237,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153450,"byte_end":153457,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::CStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::CStride","parent":null,"children":[],"decl_id":null,"docs":" The column-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The column-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153357,"byte_end":153440,"line_start":26,"line_end":26,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1035},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154122,"byte_end":154129,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Storage","qualname":"::base::storage::Storage","value":"Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"decl_id":null,"docs":" The trait shared by all matrix data storage.","sig":null,"attributes":[{"value":"/ The trait shared by all matrix data storage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153560,"byte_end":153608,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153609,"byte_end":153612,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ FIXME: doc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153613,"byte_end":153627,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153628,"byte_end":153631,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that `Self` must always have a number of elements compatible with the matrix length (given","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153632,"byte_end":153731,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ by `R` and `C` if they are known at compile-time). For example, implementors of this trait","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153732,"byte_end":153826,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ should **not** allow the user to modify the size of the underlying buffer with safe methods","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153827,"byte_end":153922,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ (for example the `VecStorage::data_mut` method is unsafe because the user could change the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":153923,"byte_end":154017,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ vector's size so that it no longer contains enough elements: this will lead to UB.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154018,"byte_end":154104,"line_start":38,"line_end":38,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154238,"byte_end":154245,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::Storage::RStride","value":"type RStride: Dim;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The static stride of this storage's rows.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154183,"byte_end":154228,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154315,"byte_end":154322,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::Storage::CStride","value":"type CStride: Dim;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The static stride of this storage's columns.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154257,"byte_end":154305,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154370,"byte_end":154373,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"ptr","qualname":"::base::storage::Storage::ptr","value":"pub fn ptr(&Self) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The matrix data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix data pointer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154334,"byte_end":154362,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154594,"byte_end":154599,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"shape","qualname":"::base::storage::Storage::shape","value":"pub fn shape(&Self) -> (R, C)","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\n element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.\n","sig":null,"attributes":[{"value":"/ The dimension of the matrix at run-time. Arr length of zero indicates the additive identity","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154399,"byte_end":154494,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/ element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154499,"byte_end":154586,"line_start":50,"line_end":50,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154801,"byte_end":154808,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"strides","qualname":"::base::storage::Storage::strides","value":"pub fn strides(&Self) -> (Self::RStride, Self::CStride)","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The spacing between consecutive row elements and consecutive column elements.","sig":null,"attributes":[{"value":"/ The spacing between consecutive row elements and consecutive column elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154623,"byte_end":154704,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154709,"byte_end":154712,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ For example this returns `(1, 5)` for a row-major matrix with 5 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154717,"byte_end":154793,"line_start":55,"line_end":55,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155201,"byte_end":155213,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"linear_index","qualname":"::base::storage::Storage::linear_index","value":"pub fn linear_index(&Self, usize, usize) -> usize","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\n index must be such that the following holds:","sig":null,"attributes":[{"value":"/ Compute the index corresponding to the irow-th row and icol-th column of this matrix. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154856,"byte_end":154949,"line_start":58,"line_end":58,"column_start":5,"column_end":98}},{"value":"/ index must be such that the following holds:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154954,"byte_end":155002,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155007,"byte_end":155010,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155015,"byte_end":155029,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ let lindex = self.linear_index(irow, icol);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155034,"byte_end":155081,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ assert!(*self.get_unchecked(irow, icol) == *self.get_unchecked_linear(lindex)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155086,"byte_end":155167,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155172,"byte_end":155179,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155184,"byte_end":155193,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155488,"byte_end":155516,"line_start":74,"line_end":74,"column_start":15,"column_end":43},"name":"get_address_unchecked_linear","qualname":"::base::storage::Storage::get_address_unchecked_linear","value":"pub unsafe fn get_address_unchecked_linear(&Self, usize) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155375,"byte_end":155459,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155464,"byte_end":155473,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155719,"byte_end":155740,"line_start":80,"line_end":80,"column_start":15,"column_end":36},"name":"get_address_unchecked","qualname":"::base::storage::Storage::get_address_unchecked","value":"pub unsafe fn get_address_unchecked(&Self, usize, usize) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155606,"byte_end":155690,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155695,"byte_end":155704,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155970,"byte_end":155990,"line_start":86,"line_end":86,"column_start":15,"column_end":35},"name":"get_unchecked_linear","qualname":"::base::storage::Storage::get_unchecked_linear","value":"pub unsafe fn get_unchecked_linear(&Self, usize) -> &N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155872,"byte_end":155941,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":155946,"byte_end":155955,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156172,"byte_end":156185,"line_start":92,"line_end":92,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::storage::Storage::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize, usize) -> &N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156074,"byte_end":156143,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156148,"byte_end":156157,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156383,"byte_end":156396,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::base::storage::Storage::is_contiguous","value":"pub fn is_contiguous(&Self) -> bool","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Indicates whether this data buffer stores its elements contiguously.\n","sig":null,"attributes":[{"value":"/ Indicates whether this data buffer stores its elements contiguously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156303,"byte_end":156375,"line_start":96,"line_end":96,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156581,"byte_end":156589,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::base::storage::Storage::as_slice","value":"pub fn as_slice(&Self) -> &[N]","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves the data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the data buffer as a contiguous slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156418,"byte_end":156470,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156475,"byte_end":156478,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The matrix components may not be stored in a contiguous way, depending on the strides.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156483,"byte_end":156573,"line_start":101,"line_end":101,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156688,"byte_end":156698,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::base::storage::Storage::into_owned","value":"pub fn into_owned(Self) -> Owned<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Builds a matrix data storage that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Builds a matrix data storage that does not contain any reference.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156611,"byte_end":156680,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156864,"byte_end":156875,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"clone_owned","qualname":"::base::storage::Storage::clone_owned","value":"pub fn clone_owned(&Self) -> Owned<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Clones this data storage to one that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Clones this data storage to one that does not contain any reference.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156784,"byte_end":156856,"line_start":109,"line_end":109,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157323,"byte_end":157333,"line_start":120,"line_end":120,"column_start":18,"column_end":28},"name":"StorageMut","qualname":"::base::storage::StorageMut","value":"StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"decl_id":null,"docs":" Trait implemented by matrix data storage that can provide a mutable access to its elements.","sig":null,"attributes":[{"value":"/ Trait implemented by matrix data storage that can provide a mutable access to its elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":156960,"byte_end":157055,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157056,"byte_end":157059,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that a mutable access does not mean that the matrix owns its data. For example, a mutable","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157060,"byte_end":157158,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ matrix slice can provide mutable access to its elements even if it does not own its data (it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157159,"byte_end":157255,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ contains only an internal reference to them).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157256,"byte_end":157305,"line_start":119,"line_end":119,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157434,"byte_end":157441,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::base::storage::StorageMut::ptr_mut","value":"pub fn ptr_mut(&mut Self) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" The matrix mutable data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix mutable data pointer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157390,"byte_end":157426,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157590,"byte_end":157622,"line_start":126,"line_end":126,"column_start":15,"column_end":47},"name":"get_address_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_linear_mut","value":"pub unsafe fn get_address_unchecked_linear_mut(&mut Self, usize) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157469,"byte_end":157561,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157566,"byte_end":157575,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157839,"byte_end":157864,"line_start":132,"line_end":132,"column_start":15,"column_end":40},"name":"get_address_unchecked_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_mut","value":"pub unsafe fn get_address_unchecked_mut(&mut Self, usize, usize) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157718,"byte_end":157810,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157815,"byte_end":157824,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158117,"byte_end":158141,"line_start":138,"line_end":138,"column_start":15,"column_end":39},"name":"get_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_unchecked_linear_mut","value":"pub unsafe fn get_unchecked_linear_mut(&mut Self, usize) -> &mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the i-th element without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158025,"byte_end":158102,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158360,"byte_end":158377,"line_start":144,"line_end":144,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::storage::StorageMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize, usize) -> &mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158241,"byte_end":158331,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158336,"byte_end":158345,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158595,"byte_end":158616,"line_start":150,"line_end":150,"column_start":15,"column_end":36},"name":"swap_unchecked_linear","qualname":"::base::storage::StorageMut::swap_unchecked_linear","value":"pub unsafe fn swap_unchecked_linear(&mut Self, usize, usize)","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Swaps two elements using their linear index without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements using their linear index without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158495,"byte_end":158566,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158571,"byte_end":158580,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158894,"byte_end":158908,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"swap_unchecked","qualname":"::base::storage::StorageMut::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, (usize, usize), (usize, usize))","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Swaps two elements without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158819,"byte_end":158865,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":158870,"byte_end":158879,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159308,"byte_end":159320,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::base::storage::StorageMut::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [N]","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves the mutable data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the mutable data buffer as a contiguous slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159157,"byte_end":159217,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159222,"byte_end":159225,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Matrix components may not be contiguous, depending on its strides.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159230,"byte_end":159300,"line_start":168,"line_end":168,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159679,"byte_end":159696,"line_start":177,"line_end":177,"column_start":18,"column_end":35},"name":"ContiguousStorage","qualname":"::base::storage::ContiguousStorage","value":"ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159348,"byte_end":159407,"line_start":172,"line_end":172,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159408,"byte_end":159411,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159412,"byte_end":159506,"line_start":174,"line_end":174,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159507,"byte_end":159600,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159601,"byte_end":159661,"line_start":176,"line_end":176,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1069},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":160095,"byte_end":160115,"line_start":187,"line_end":187,"column_start":18,"column_end":38},"name":"ContiguousStorageMut","qualname":"::base::storage::ContiguousStorageMut","value":"ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A mutable matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159756,"byte_end":159823,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159824,"byte_end":159827,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159828,"byte_end":159922,"line_start":184,"line_end":184,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159923,"byte_end":160016,"line_start":185,"line_end":185,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":160017,"byte_end":160077,"line_start":186,"line_end":186,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160703,"byte_end":160711,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"MatrixNM","qualname":"::base::alias::MatrixNM","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160540,"byte_end":160613,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"deprecated(note =\n             \"This matrix name contains a typo. Use MatrixMN instead.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160614,"byte_end":160693,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160840,"byte_end":160848,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"MatrixMN","qualname":"::base::alias::MatrixMN","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160757,"byte_end":160830,"line_start":20,"line_end":20,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160980,"byte_end":160987,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"MatrixN","qualname":"::base::alias::MatrixN","value":"MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major square matrix with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major square matrix with `D` rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":160894,"byte_end":160970,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1096},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161118,"byte_end":161125,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"DMatrix","qualname":"::base::alias::DMatrix","value":"MatrixN<N, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column-major matrix.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column-major matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161016,"byte_end":161060,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161061,"byte_end":161108,"line_start":27,"line_end":27,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1098},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161218,"byte_end":161225,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"Matrix1","qualname":"::base::alias::Matrix1","value":"MatrixN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x1 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x1 square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161153,"byte_end":161208,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1100},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161312,"byte_end":161319,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"Matrix2","qualname":"::base::alias::Matrix2","value":"MatrixN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x2 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x2 square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161247,"byte_end":161302,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161406,"byte_end":161413,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"Matrix3","qualname":"::base::alias::Matrix3","value":"MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x3 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x3 square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161341,"byte_end":161396,"line_start":34,"line_end":34,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161500,"byte_end":161507,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::base::alias::Matrix4","value":"MatrixN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x4 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x4 square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161435,"byte_end":161490,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1106},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161594,"byte_end":161601,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Matrix5","qualname":"::base::alias::Matrix5","value":"MatrixN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x5 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x5 square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161529,"byte_end":161584,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1108},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161688,"byte_end":161695,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Matrix6","qualname":"::base::alias::Matrix6","value":"MatrixN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x6 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x6 square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161623,"byte_end":161678,"line_start":40,"line_end":40,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161776,"byte_end":161785,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"Matrix1x2","qualname":"::base::alias::Matrix1x2","value":"MatrixMN<N, U1, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x2 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161718,"byte_end":161766,"line_start":43,"line_end":43,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161870,"byte_end":161879,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"Matrix1x3","qualname":"::base::alias::Matrix1x3","value":"MatrixMN<N, U1, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161812,"byte_end":161860,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1114},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161964,"byte_end":161973,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"Matrix1x4","qualname":"::base::alias::Matrix1x4","value":"MatrixMN<N, U1, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":161906,"byte_end":161954,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1116},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162058,"byte_end":162067,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"Matrix1x5","qualname":"::base::alias::Matrix1x5","value":"MatrixMN<N, U1, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x5 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162000,"byte_end":162048,"line_start":49,"line_end":49,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1118},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162152,"byte_end":162161,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"Matrix1x6","qualname":"::base::alias::Matrix1x6","value":"MatrixMN<N, U1, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x6 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162094,"byte_end":162142,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1120},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162247,"byte_end":162256,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"Matrix2x3","qualname":"::base::alias::Matrix2x3","value":"MatrixMN<N, U2, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162189,"byte_end":162237,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1122},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162341,"byte_end":162350,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"Matrix2x4","qualname":"::base::alias::Matrix2x4","value":"MatrixMN<N, U2, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162283,"byte_end":162331,"line_start":56,"line_end":56,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1124},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162435,"byte_end":162444,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"Matrix2x5","qualname":"::base::alias::Matrix2x5","value":"MatrixMN<N, U2, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x5 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162377,"byte_end":162425,"line_start":58,"line_end":58,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1126},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162529,"byte_end":162538,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"Matrix2x6","qualname":"::base::alias::Matrix2x6","value":"MatrixMN<N, U2, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x6 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162471,"byte_end":162519,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162624,"byte_end":162633,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"Matrix3x4","qualname":"::base::alias::Matrix3x4","value":"MatrixMN<N, U3, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162566,"byte_end":162614,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1130},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162718,"byte_end":162727,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Matrix3x5","qualname":"::base::alias::Matrix3x5","value":"MatrixMN<N, U3, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x5 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162660,"byte_end":162708,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1132},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162812,"byte_end":162821,"line_start":68,"line_end":68,"column_start":10,"column_end":19},"name":"Matrix3x6","qualname":"::base::alias::Matrix3x6","value":"MatrixMN<N, U3, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x6 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162754,"byte_end":162802,"line_start":67,"line_end":67,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162907,"byte_end":162916,"line_start":71,"line_end":71,"column_start":10,"column_end":19},"name":"Matrix4x5","qualname":"::base::alias::Matrix4x5","value":"MatrixMN<N, U4, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x5 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162849,"byte_end":162897,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1136},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163001,"byte_end":163010,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Matrix4x6","qualname":"::base::alias::Matrix4x6","value":"MatrixMN<N, U4, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x6 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":162943,"byte_end":162991,"line_start":72,"line_end":72,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1138},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163096,"byte_end":163105,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Matrix5x6","qualname":"::base::alias::Matrix5x6","value":"MatrixMN<N, U5, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x6 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163038,"byte_end":163086,"line_start":75,"line_end":75,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1140},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163191,"byte_end":163200,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"Matrix2x1","qualname":"::base::alias::Matrix2x1","value":"MatrixMN<N, U2, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x1 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163133,"byte_end":163181,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1142},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163285,"byte_end":163294,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"Matrix3x1","qualname":"::base::alias::Matrix3x1","value":"MatrixMN<N, U3, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x1 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163227,"byte_end":163275,"line_start":80,"line_end":80,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1144},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163379,"byte_end":163388,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Matrix4x1","qualname":"::base::alias::Matrix4x1","value":"MatrixMN<N, U4, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x1 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163321,"byte_end":163369,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1146},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163473,"byte_end":163482,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"Matrix5x1","qualname":"::base::alias::Matrix5x1","value":"MatrixMN<N, U5, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x1 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163415,"byte_end":163463,"line_start":84,"line_end":84,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1148},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163567,"byte_end":163576,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"Matrix6x1","qualname":"::base::alias::Matrix6x1","value":"MatrixMN<N, U6, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x1 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163509,"byte_end":163557,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1150},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163662,"byte_end":163671,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"Matrix3x2","qualname":"::base::alias::Matrix3x2","value":"MatrixMN<N, U3, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x2 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163604,"byte_end":163652,"line_start":89,"line_end":89,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1152},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163756,"byte_end":163765,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Matrix4x2","qualname":"::base::alias::Matrix4x2","value":"MatrixMN<N, U4, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x2 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163698,"byte_end":163746,"line_start":91,"line_end":91,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1154},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163850,"byte_end":163859,"line_start":94,"line_end":94,"column_start":10,"column_end":19},"name":"Matrix5x2","qualname":"::base::alias::Matrix5x2","value":"MatrixMN<N, U5, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x2 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163792,"byte_end":163840,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1156},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163944,"byte_end":163953,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"Matrix6x2","qualname":"::base::alias::Matrix6x2","value":"MatrixMN<N, U6, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x2 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163886,"byte_end":163934,"line_start":95,"line_end":95,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1158},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164039,"byte_end":164048,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Matrix4x3","qualname":"::base::alias::Matrix4x3","value":"MatrixMN<N, U4, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":163981,"byte_end":164029,"line_start":98,"line_end":98,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164133,"byte_end":164142,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Matrix5x3","qualname":"::base::alias::Matrix5x3","value":"MatrixMN<N, U5, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164075,"byte_end":164123,"line_start":100,"line_end":100,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164227,"byte_end":164236,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"name":"Matrix6x3","qualname":"::base::alias::Matrix6x3","value":"MatrixMN<N, U6, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164169,"byte_end":164217,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1164},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164322,"byte_end":164331,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"Matrix5x4","qualname":"::base::alias::Matrix5x4","value":"MatrixMN<N, U5, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164264,"byte_end":164312,"line_start":105,"line_end":105,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1166},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164416,"byte_end":164425,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"name":"Matrix6x4","qualname":"::base::alias::Matrix6x4","value":"MatrixMN<N, U6, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164358,"byte_end":164406,"line_start":107,"line_end":107,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1168},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164511,"byte_end":164520,"line_start":111,"line_end":111,"column_start":10,"column_end":19},"name":"Matrix6x5","qualname":"::base::alias::Matrix6x5","value":"MatrixMN<N, U6, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x5 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164453,"byte_end":164501,"line_start":110,"line_end":110,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1170},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164682,"byte_end":164689,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"name":"DVector","qualname":"::base::alias::DVector","value":"Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164586,"byte_end":164624,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164625,"byte_end":164672,"line_start":121,"line_end":121,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1172},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164809,"byte_end":164816,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"VectorN","qualname":"::base::alias::VectorN","value":"MatrixMN<N, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164748,"byte_end":164799,"line_start":124,"line_end":124,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1175},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164907,"byte_end":164914,"line_start":128,"line_end":128,"column_start":10,"column_end":17},"name":"Vector1","qualname":"::base::alias::Vector1","value":"VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164846,"byte_end":164897,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1177},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164997,"byte_end":165004,"line_start":130,"line_end":130,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::base::alias::Vector2","value":"VectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":164936,"byte_end":164987,"line_start":129,"line_end":129,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1179},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165087,"byte_end":165094,"line_start":132,"line_end":132,"column_start":10,"column_end":17},"name":"Vector3","qualname":"::base::alias::Vector3","value":"VectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165026,"byte_end":165077,"line_start":131,"line_end":131,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1181},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165177,"byte_end":165184,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"name":"Vector4","qualname":"::base::alias::Vector4","value":"VectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165116,"byte_end":165167,"line_start":133,"line_end":133,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1183},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165267,"byte_end":165274,"line_start":136,"line_end":136,"column_start":10,"column_end":17},"name":"Vector5","qualname":"::base::alias::Vector5","value":"VectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165206,"byte_end":165257,"line_start":135,"line_end":135,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1185},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165357,"byte_end":165364,"line_start":138,"line_end":138,"column_start":10,"column_end":17},"name":"Vector6","qualname":"::base::alias::Vector6","value":"VectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165296,"byte_end":165347,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1187},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165515,"byte_end":165525,"line_start":149,"line_end":149,"column_start":10,"column_end":20},"name":"RowDVector","qualname":"::base::alias::RowDVector","value":"Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized row vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165422,"byte_end":165457,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165458,"byte_end":165505,"line_start":148,"line_end":148,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1189},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165642,"byte_end":165652,"line_start":152,"line_end":152,"column_start":10,"column_end":20},"name":"RowVectorN","qualname":"::base::alias::RowVectorN","value":"MatrixMN<N, U1, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165584,"byte_end":165632,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1192},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165740,"byte_end":165750,"line_start":155,"line_end":155,"column_start":10,"column_end":20},"name":"RowVector1","qualname":"::base::alias::RowVector1","value":"RowVectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165682,"byte_end":165730,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1194},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165833,"byte_end":165843,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"RowVector2","qualname":"::base::alias::RowVector2","value":"RowVectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165775,"byte_end":165823,"line_start":156,"line_end":156,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1196},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165926,"byte_end":165936,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"RowVector3","qualname":"::base::alias::RowVector3","value":"RowVectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165868,"byte_end":165916,"line_start":158,"line_end":158,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1198},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":166019,"byte_end":166029,"line_start":161,"line_end":161,"column_start":10,"column_end":20},"name":"RowVector4","qualname":"::base::alias::RowVector4","value":"RowVectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":165961,"byte_end":166009,"line_start":160,"line_end":160,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1200},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":166112,"byte_end":166122,"line_start":163,"line_end":163,"column_start":10,"column_end":20},"name":"RowVector5","qualname":"::base::alias::RowVector5","value":"RowVectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":166054,"byte_end":166102,"line_start":162,"line_end":162,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1202},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":166205,"byte_end":166215,"line_start":165,"line_end":165,"column_start":10,"column_end":20},"name":"RowVector6","qualname":"::base::alias::RowVector6","value":"RowVectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional row vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias.rs","byte_start":166147,"byte_end":166195,"line_start":164,"line_end":164,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1217},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166510,"byte_end":166523,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"name":"MatrixSliceMN","qualname":"::base::alias_slice::MatrixSliceMN","value":"Matrix<N, R, C, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166438,"byte_end":166500,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1224},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166701,"byte_end":166713,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"MatrixSliceN","qualname":"::base::alias_slice::MatrixSliceN","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166633,"byte_end":166691,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166882,"byte_end":166894,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DMatrixSlice","qualname":"::base::alias_slice::DMatrixSlice","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166804,"byte_end":166872,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167036,"byte_end":167048,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"MatrixSlice1","qualname":"::base::alias_slice::MatrixSlice1","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":166990,"byte_end":167026,"line_start":24,"line_end":24,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167179,"byte_end":167191,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatrixSlice2","qualname":"::base::alias_slice::MatrixSlice2","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167133,"byte_end":167169,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167322,"byte_end":167334,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"MatrixSlice3","qualname":"::base::alias_slice::MatrixSlice3","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167276,"byte_end":167312,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1250},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167465,"byte_end":167477,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"MatrixSlice4","qualname":"::base::alias_slice::MatrixSlice4","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167419,"byte_end":167455,"line_start":33,"line_end":33,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1255},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167608,"byte_end":167620,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"MatrixSlice5","qualname":"::base::alias_slice::MatrixSlice5","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167562,"byte_end":167598,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1260},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167751,"byte_end":167763,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"MatrixSlice6","qualname":"::base::alias_slice::MatrixSlice6","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167705,"byte_end":167741,"line_start":39,"line_end":39,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167895,"byte_end":167909,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"MatrixSlice1x2","qualname":"::base::alias_slice::MatrixSlice1x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167849,"byte_end":167885,"line_start":43,"line_end":43,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1270},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168045,"byte_end":168059,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"name":"MatrixSlice1x3","qualname":"::base::alias_slice::MatrixSlice1x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":167999,"byte_end":168035,"line_start":46,"line_end":46,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1275},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168195,"byte_end":168209,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"MatrixSlice1x4","qualname":"::base::alias_slice::MatrixSlice1x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168149,"byte_end":168185,"line_start":49,"line_end":49,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1280},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168345,"byte_end":168359,"line_start":53,"line_end":53,"column_start":10,"column_end":24},"name":"MatrixSlice1x5","qualname":"::base::alias_slice::MatrixSlice1x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168299,"byte_end":168335,"line_start":52,"line_end":52,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1285},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168495,"byte_end":168509,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"MatrixSlice1x6","qualname":"::base::alias_slice::MatrixSlice1x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168449,"byte_end":168485,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1290},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168646,"byte_end":168660,"line_start":60,"line_end":60,"column_start":10,"column_end":24},"name":"MatrixSlice2x1","qualname":"::base::alias_slice::MatrixSlice2x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168600,"byte_end":168636,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1295},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168796,"byte_end":168810,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MatrixSlice2x3","qualname":"::base::alias_slice::MatrixSlice2x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168750,"byte_end":168786,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1300},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168946,"byte_end":168960,"line_start":66,"line_end":66,"column_start":10,"column_end":24},"name":"MatrixSlice2x4","qualname":"::base::alias_slice::MatrixSlice2x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":168900,"byte_end":168936,"line_start":65,"line_end":65,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1305},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169096,"byte_end":169110,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"MatrixSlice2x5","qualname":"::base::alias_slice::MatrixSlice2x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169050,"byte_end":169086,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169246,"byte_end":169260,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"name":"MatrixSlice2x6","qualname":"::base::alias_slice::MatrixSlice2x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169200,"byte_end":169236,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1315},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169397,"byte_end":169411,"line_start":76,"line_end":76,"column_start":10,"column_end":24},"name":"MatrixSlice3x1","qualname":"::base::alias_slice::MatrixSlice3x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169351,"byte_end":169387,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1320},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169547,"byte_end":169561,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"MatrixSlice3x2","qualname":"::base::alias_slice::MatrixSlice3x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169501,"byte_end":169537,"line_start":78,"line_end":78,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1325},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169697,"byte_end":169711,"line_start":82,"line_end":82,"column_start":10,"column_end":24},"name":"MatrixSlice3x4","qualname":"::base::alias_slice::MatrixSlice3x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169651,"byte_end":169687,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1330},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169847,"byte_end":169861,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"MatrixSlice3x5","qualname":"::base::alias_slice::MatrixSlice3x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169801,"byte_end":169837,"line_start":84,"line_end":84,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169997,"byte_end":170011,"line_start":88,"line_end":88,"column_start":10,"column_end":24},"name":"MatrixSlice3x6","qualname":"::base::alias_slice::MatrixSlice3x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":169951,"byte_end":169987,"line_start":87,"line_end":87,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1340},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170148,"byte_end":170162,"line_start":92,"line_end":92,"column_start":10,"column_end":24},"name":"MatrixSlice4x1","qualname":"::base::alias_slice::MatrixSlice4x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170102,"byte_end":170138,"line_start":91,"line_end":91,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1345},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170298,"byte_end":170312,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"MatrixSlice4x2","qualname":"::base::alias_slice::MatrixSlice4x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170252,"byte_end":170288,"line_start":94,"line_end":94,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170448,"byte_end":170462,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"MatrixSlice4x3","qualname":"::base::alias_slice::MatrixSlice4x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170402,"byte_end":170438,"line_start":97,"line_end":97,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1355},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170598,"byte_end":170612,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"MatrixSlice4x5","qualname":"::base::alias_slice::MatrixSlice4x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170552,"byte_end":170588,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1360},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170748,"byte_end":170762,"line_start":104,"line_end":104,"column_start":10,"column_end":24},"name":"MatrixSlice4x6","qualname":"::base::alias_slice::MatrixSlice4x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170702,"byte_end":170738,"line_start":103,"line_end":103,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1365},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170899,"byte_end":170913,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"MatrixSlice5x1","qualname":"::base::alias_slice::MatrixSlice5x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":170853,"byte_end":170889,"line_start":107,"line_end":107,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1370},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171049,"byte_end":171063,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"MatrixSlice5x2","qualname":"::base::alias_slice::MatrixSlice5x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171003,"byte_end":171039,"line_start":110,"line_end":110,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1375},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171199,"byte_end":171213,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"name":"MatrixSlice5x3","qualname":"::base::alias_slice::MatrixSlice5x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171153,"byte_end":171189,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1380},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171349,"byte_end":171363,"line_start":117,"line_end":117,"column_start":10,"column_end":24},"name":"MatrixSlice5x4","qualname":"::base::alias_slice::MatrixSlice5x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171303,"byte_end":171339,"line_start":116,"line_end":116,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1385},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171499,"byte_end":171513,"line_start":120,"line_end":120,"column_start":10,"column_end":24},"name":"MatrixSlice5x6","qualname":"::base::alias_slice::MatrixSlice5x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171453,"byte_end":171489,"line_start":119,"line_end":119,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171650,"byte_end":171664,"line_start":124,"line_end":124,"column_start":10,"column_end":24},"name":"MatrixSlice6x1","qualname":"::base::alias_slice::MatrixSlice6x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171604,"byte_end":171640,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1395},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171800,"byte_end":171814,"line_start":127,"line_end":127,"column_start":10,"column_end":24},"name":"MatrixSlice6x2","qualname":"::base::alias_slice::MatrixSlice6x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171754,"byte_end":171790,"line_start":126,"line_end":126,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1400},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171950,"byte_end":171964,"line_start":130,"line_end":130,"column_start":10,"column_end":24},"name":"MatrixSlice6x3","qualname":"::base::alias_slice::MatrixSlice6x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":171904,"byte_end":171940,"line_start":129,"line_end":129,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1405},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172100,"byte_end":172114,"line_start":133,"line_end":133,"column_start":10,"column_end":24},"name":"MatrixSlice6x4","qualname":"::base::alias_slice::MatrixSlice6x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172054,"byte_end":172090,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172250,"byte_end":172264,"line_start":136,"line_end":136,"column_start":10,"column_end":24},"name":"MatrixSlice6x5","qualname":"::base::alias_slice::MatrixSlice6x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172204,"byte_end":172240,"line_start":135,"line_end":135,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1415},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172450,"byte_end":172464,"line_start":140,"line_end":140,"column_start":10,"column_end":24},"name":"MatrixSlice1xX","qualname":"::base::alias_slice::MatrixSlice1xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172355,"byte_end":172440,"line_start":139,"line_end":139,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1420},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172655,"byte_end":172669,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MatrixSlice2xX","qualname":"::base::alias_slice::MatrixSlice2xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172559,"byte_end":172645,"line_start":142,"line_end":142,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172860,"byte_end":172874,"line_start":146,"line_end":146,"column_start":10,"column_end":24},"name":"MatrixSlice3xX","qualname":"::base::alias_slice::MatrixSlice3xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172764,"byte_end":172850,"line_start":145,"line_end":145,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173065,"byte_end":173079,"line_start":149,"line_end":149,"column_start":10,"column_end":24},"name":"MatrixSlice4xX","qualname":"::base::alias_slice::MatrixSlice4xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":172969,"byte_end":173055,"line_start":148,"line_end":148,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1435},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173270,"byte_end":173284,"line_start":152,"line_end":152,"column_start":10,"column_end":24},"name":"MatrixSlice5xX","qualname":"::base::alias_slice::MatrixSlice5xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173174,"byte_end":173260,"line_start":151,"line_end":151,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173475,"byte_end":173489,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"name":"MatrixSlice6xX","qualname":"::base::alias_slice::MatrixSlice6xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173379,"byte_end":173465,"line_start":154,"line_end":154,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1445},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173680,"byte_end":173694,"line_start":159,"line_end":159,"column_start":10,"column_end":24},"name":"MatrixSliceXx1","qualname":"::base::alias_slice::MatrixSliceXx1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173585,"byte_end":173670,"line_start":158,"line_end":158,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173890,"byte_end":173904,"line_start":162,"line_end":162,"column_start":10,"column_end":24},"name":"MatrixSliceXx2","qualname":"::base::alias_slice::MatrixSliceXx2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":173794,"byte_end":173880,"line_start":161,"line_end":161,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1455},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174100,"byte_end":174114,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"MatrixSliceXx3","qualname":"::base::alias_slice::MatrixSliceXx3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174004,"byte_end":174090,"line_start":164,"line_end":164,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174310,"byte_end":174324,"line_start":168,"line_end":168,"column_start":10,"column_end":24},"name":"MatrixSliceXx4","qualname":"::base::alias_slice::MatrixSliceXx4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174214,"byte_end":174300,"line_start":167,"line_end":167,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174520,"byte_end":174534,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"MatrixSliceXx5","qualname":"::base::alias_slice::MatrixSliceXx5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174424,"byte_end":174510,"line_start":170,"line_end":170,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174730,"byte_end":174744,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"MatrixSliceXx6","qualname":"::base::alias_slice::MatrixSliceXx6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174634,"byte_end":174720,"line_start":173,"line_end":173,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1475},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174895,"byte_end":174907,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"VectorSliceN","qualname":"::base::alias_slice::VectorSliceN","value":"Matrix<N, D, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":174845,"byte_end":174885,"line_start":177,"line_end":177,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175088,"byte_end":175100,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"DVectorSlice","qualname":"::base::alias_slice::DVectorSlice","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175016,"byte_end":175078,"line_start":181,"line_end":181,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175235,"byte_end":175247,"line_start":186,"line_end":186,"column_start":10,"column_end":22},"name":"VectorSlice1","qualname":"::base::alias_slice::VectorSlice1","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175196,"byte_end":175225,"line_start":185,"line_end":185,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1491},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175371,"byte_end":175383,"line_start":189,"line_end":189,"column_start":10,"column_end":22},"name":"VectorSlice2","qualname":"::base::alias_slice::VectorSlice2","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175332,"byte_end":175361,"line_start":188,"line_end":188,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1496},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175507,"byte_end":175519,"line_start":192,"line_end":192,"column_start":10,"column_end":22},"name":"VectorSlice3","qualname":"::base::alias_slice::VectorSlice3","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175468,"byte_end":175497,"line_start":191,"line_end":191,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1501},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175643,"byte_end":175655,"line_start":195,"line_end":195,"column_start":10,"column_end":22},"name":"VectorSlice4","qualname":"::base::alias_slice::VectorSlice4","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175604,"byte_end":175633,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1506},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175779,"byte_end":175791,"line_start":198,"line_end":198,"column_start":10,"column_end":22},"name":"VectorSlice5","qualname":"::base::alias_slice::VectorSlice5","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175740,"byte_end":175769,"line_start":197,"line_end":197,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175915,"byte_end":175927,"line_start":201,"line_end":201,"column_start":10,"column_end":22},"name":"VectorSlice6","qualname":"::base::alias_slice::VectorSlice6","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":175876,"byte_end":175905,"line_start":200,"line_end":200,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1516},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176151,"byte_end":176167,"line_start":212,"line_end":212,"column_start":10,"column_end":26},"name":"MatrixSliceMutMN","qualname":"::base::alias_slice::MatrixSliceMutMN","value":"Matrix<N, R, C, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176071,"byte_end":176141,"line_start":211,"line_end":211,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1523},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176356,"byte_end":176371,"line_start":216,"line_end":216,"column_start":10,"column_end":25},"name":"MatrixSliceMutN","qualname":"::base::alias_slice::MatrixSliceMutN","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `D` rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176280,"byte_end":176346,"line_start":215,"line_end":215,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1529},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176551,"byte_end":176566,"line_start":220,"line_end":220,"column_start":10,"column_end":25},"name":"DMatrixSliceMut","qualname":"::base::alias_slice::DMatrixSliceMut","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176465,"byte_end":176541,"line_start":219,"line_end":219,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1534},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176719,"byte_end":176734,"line_start":224,"line_end":224,"column_start":10,"column_end":25},"name":"MatrixSliceMut1","qualname":"::base::alias_slice::MatrixSliceMut1","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176665,"byte_end":176709,"line_start":223,"line_end":223,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1539},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176876,"byte_end":176891,"line_start":227,"line_end":227,"column_start":10,"column_end":25},"name":"MatrixSliceMut2","qualname":"::base::alias_slice::MatrixSliceMut2","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176822,"byte_end":176866,"line_start":226,"line_end":226,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1544},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177033,"byte_end":177048,"line_start":230,"line_end":230,"column_start":10,"column_end":25},"name":"MatrixSliceMut3","qualname":"::base::alias_slice::MatrixSliceMut3","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":176979,"byte_end":177023,"line_start":229,"line_end":229,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1549},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177190,"byte_end":177205,"line_start":233,"line_end":233,"column_start":10,"column_end":25},"name":"MatrixSliceMut4","qualname":"::base::alias_slice::MatrixSliceMut4","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177136,"byte_end":177180,"line_start":232,"line_end":232,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1554},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177347,"byte_end":177362,"line_start":236,"line_end":236,"column_start":10,"column_end":25},"name":"MatrixSliceMut5","qualname":"::base::alias_slice::MatrixSliceMut5","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177293,"byte_end":177337,"line_start":235,"line_end":235,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1559},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177504,"byte_end":177519,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"name":"MatrixSliceMut6","qualname":"::base::alias_slice::MatrixSliceMut6","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177450,"byte_end":177494,"line_start":238,"line_end":238,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1564},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177662,"byte_end":177679,"line_start":243,"line_end":243,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x2","qualname":"::base::alias_slice::MatrixSliceMut1x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177608,"byte_end":177652,"line_start":242,"line_end":242,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177826,"byte_end":177843,"line_start":246,"line_end":246,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x3","qualname":"::base::alias_slice::MatrixSliceMut1x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177772,"byte_end":177816,"line_start":245,"line_end":245,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1574},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177990,"byte_end":178007,"line_start":249,"line_end":249,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x4","qualname":"::base::alias_slice::MatrixSliceMut1x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":177936,"byte_end":177980,"line_start":248,"line_end":248,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178154,"byte_end":178171,"line_start":252,"line_end":252,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x5","qualname":"::base::alias_slice::MatrixSliceMut1x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178100,"byte_end":178144,"line_start":251,"line_end":251,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1584},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178318,"byte_end":178335,"line_start":255,"line_end":255,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x6","qualname":"::base::alias_slice::MatrixSliceMut1x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178264,"byte_end":178308,"line_start":254,"line_end":254,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1589},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178483,"byte_end":178500,"line_start":259,"line_end":259,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x1","qualname":"::base::alias_slice::MatrixSliceMut2x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178429,"byte_end":178473,"line_start":258,"line_end":258,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1594},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178647,"byte_end":178664,"line_start":262,"line_end":262,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x3","qualname":"::base::alias_slice::MatrixSliceMut2x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178593,"byte_end":178637,"line_start":261,"line_end":261,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1599},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178811,"byte_end":178828,"line_start":265,"line_end":265,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x4","qualname":"::base::alias_slice::MatrixSliceMut2x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178757,"byte_end":178801,"line_start":264,"line_end":264,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1604},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178975,"byte_end":178992,"line_start":268,"line_end":268,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x5","qualname":"::base::alias_slice::MatrixSliceMut2x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":178921,"byte_end":178965,"line_start":267,"line_end":267,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1609},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179139,"byte_end":179156,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x6","qualname":"::base::alias_slice::MatrixSliceMut2x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179085,"byte_end":179129,"line_start":270,"line_end":270,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1614},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179304,"byte_end":179321,"line_start":275,"line_end":275,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x1","qualname":"::base::alias_slice::MatrixSliceMut3x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179250,"byte_end":179294,"line_start":274,"line_end":274,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179468,"byte_end":179485,"line_start":278,"line_end":278,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x2","qualname":"::base::alias_slice::MatrixSliceMut3x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179414,"byte_end":179458,"line_start":277,"line_end":277,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1624},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179632,"byte_end":179649,"line_start":281,"line_end":281,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x4","qualname":"::base::alias_slice::MatrixSliceMut3x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179578,"byte_end":179622,"line_start":280,"line_end":280,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1629},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179796,"byte_end":179813,"line_start":284,"line_end":284,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x5","qualname":"::base::alias_slice::MatrixSliceMut3x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179742,"byte_end":179786,"line_start":283,"line_end":283,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1634},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179960,"byte_end":179977,"line_start":287,"line_end":287,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x6","qualname":"::base::alias_slice::MatrixSliceMut3x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":179906,"byte_end":179950,"line_start":286,"line_end":286,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1639},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180125,"byte_end":180142,"line_start":291,"line_end":291,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x1","qualname":"::base::alias_slice::MatrixSliceMut4x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180071,"byte_end":180115,"line_start":290,"line_end":290,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1644},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180289,"byte_end":180306,"line_start":294,"line_end":294,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x2","qualname":"::base::alias_slice::MatrixSliceMut4x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180235,"byte_end":180279,"line_start":293,"line_end":293,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1649},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180453,"byte_end":180470,"line_start":297,"line_end":297,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x3","qualname":"::base::alias_slice::MatrixSliceMut4x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180399,"byte_end":180443,"line_start":296,"line_end":296,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180617,"byte_end":180634,"line_start":300,"line_end":300,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x5","qualname":"::base::alias_slice::MatrixSliceMut4x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180563,"byte_end":180607,"line_start":299,"line_end":299,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1659},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180781,"byte_end":180798,"line_start":303,"line_end":303,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x6","qualname":"::base::alias_slice::MatrixSliceMut4x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180727,"byte_end":180771,"line_start":302,"line_end":302,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1664},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180946,"byte_end":180963,"line_start":307,"line_end":307,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x1","qualname":"::base::alias_slice::MatrixSliceMut5x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":180892,"byte_end":180936,"line_start":306,"line_end":306,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1669},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181110,"byte_end":181127,"line_start":310,"line_end":310,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x2","qualname":"::base::alias_slice::MatrixSliceMut5x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181056,"byte_end":181100,"line_start":309,"line_end":309,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1674},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181274,"byte_end":181291,"line_start":313,"line_end":313,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x3","qualname":"::base::alias_slice::MatrixSliceMut5x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181220,"byte_end":181264,"line_start":312,"line_end":312,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1679},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181438,"byte_end":181455,"line_start":316,"line_end":316,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x4","qualname":"::base::alias_slice::MatrixSliceMut5x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181384,"byte_end":181428,"line_start":315,"line_end":315,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1684},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181602,"byte_end":181619,"line_start":319,"line_end":319,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x6","qualname":"::base::alias_slice::MatrixSliceMut5x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181548,"byte_end":181592,"line_start":318,"line_end":318,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1689},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181767,"byte_end":181784,"line_start":323,"line_end":323,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x1","qualname":"::base::alias_slice::MatrixSliceMut6x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181713,"byte_end":181757,"line_start":322,"line_end":322,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1694},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181931,"byte_end":181948,"line_start":326,"line_end":326,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x2","qualname":"::base::alias_slice::MatrixSliceMut6x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":181877,"byte_end":181921,"line_start":325,"line_end":325,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1699},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182095,"byte_end":182112,"line_start":329,"line_end":329,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x3","qualname":"::base::alias_slice::MatrixSliceMut6x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182041,"byte_end":182085,"line_start":328,"line_end":328,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1704},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182259,"byte_end":182276,"line_start":332,"line_end":332,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x4","qualname":"::base::alias_slice::MatrixSliceMut6x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182205,"byte_end":182249,"line_start":331,"line_end":331,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1709},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182423,"byte_end":182440,"line_start":335,"line_end":335,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x5","qualname":"::base::alias_slice::MatrixSliceMut6x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 mutable matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182369,"byte_end":182413,"line_start":334,"line_end":334,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182637,"byte_end":182654,"line_start":339,"line_end":339,"column_start":10,"column_end":27},"name":"MatrixSliceMut1xX","qualname":"::base::alias_slice::MatrixSliceMut1xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182534,"byte_end":182627,"line_start":338,"line_end":338,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1719},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182856,"byte_end":182873,"line_start":342,"line_end":342,"column_start":10,"column_end":27},"name":"MatrixSliceMut2xX","qualname":"::base::alias_slice::MatrixSliceMut2xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182752,"byte_end":182846,"line_start":341,"line_end":341,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1724},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183075,"byte_end":183092,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"name":"MatrixSliceMut3xX","qualname":"::base::alias_slice::MatrixSliceMut3xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":182971,"byte_end":183065,"line_start":344,"line_end":344,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1729},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183294,"byte_end":183311,"line_start":348,"line_end":348,"column_start":10,"column_end":27},"name":"MatrixSliceMut4xX","qualname":"::base::alias_slice::MatrixSliceMut4xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183190,"byte_end":183284,"line_start":347,"line_end":347,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1734},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183513,"byte_end":183530,"line_start":351,"line_end":351,"column_start":10,"column_end":27},"name":"MatrixSliceMut5xX","qualname":"::base::alias_slice::MatrixSliceMut5xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183409,"byte_end":183503,"line_start":350,"line_end":350,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1739},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183732,"byte_end":183749,"line_start":354,"line_end":354,"column_start":10,"column_end":27},"name":"MatrixSliceMut6xX","qualname":"::base::alias_slice::MatrixSliceMut6xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183628,"byte_end":183722,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1744},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183951,"byte_end":183968,"line_start":358,"line_end":358,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx1","qualname":"::base::alias_slice::MatrixSliceMutXx1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":183848,"byte_end":183941,"line_start":357,"line_end":357,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1749},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184175,"byte_end":184192,"line_start":361,"line_end":361,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx2","qualname":"::base::alias_slice::MatrixSliceMutXx2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184071,"byte_end":184165,"line_start":360,"line_end":360,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1754},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184399,"byte_end":184416,"line_start":364,"line_end":364,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx3","qualname":"::base::alias_slice::MatrixSliceMutXx3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184295,"byte_end":184389,"line_start":363,"line_end":363,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1759},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184623,"byte_end":184640,"line_start":367,"line_end":367,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx4","qualname":"::base::alias_slice::MatrixSliceMutXx4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184519,"byte_end":184613,"line_start":366,"line_end":366,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1764},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184847,"byte_end":184864,"line_start":370,"line_end":370,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx5","qualname":"::base::alias_slice::MatrixSliceMutXx5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184743,"byte_end":184837,"line_start":369,"line_end":369,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1769},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185071,"byte_end":185088,"line_start":373,"line_end":373,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx6","qualname":"::base::alias_slice::MatrixSliceMutXx6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":184967,"byte_end":185061,"line_start":372,"line_end":372,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1774},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185250,"byte_end":185265,"line_start":377,"line_end":377,"column_start":10,"column_end":25},"name":"VectorSliceMutN","qualname":"::base::alias_slice::VectorSliceMutN","value":"Matrix<N, D, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice with `D` rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185192,"byte_end":185240,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1780},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185457,"byte_end":185472,"line_start":381,"line_end":381,"column_start":10,"column_end":25},"name":"DVectorSliceMut","qualname":"::base::alias_slice::DVectorSliceMut","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185377,"byte_end":185447,"line_start":380,"line_end":380,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185618,"byte_end":185633,"line_start":385,"line_end":385,"column_start":10,"column_end":25},"name":"VectorSliceMut1","qualname":"::base::alias_slice::VectorSliceMut1","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 1D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D mutable column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185571,"byte_end":185608,"line_start":384,"line_end":384,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1790},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185768,"byte_end":185783,"line_start":388,"line_end":388,"column_start":10,"column_end":25},"name":"VectorSliceMut2","qualname":"::base::alias_slice::VectorSliceMut2","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 2D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D mutable column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185721,"byte_end":185758,"line_start":387,"line_end":387,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1795},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185918,"byte_end":185933,"line_start":391,"line_end":391,"column_start":10,"column_end":25},"name":"VectorSliceMut3","qualname":"::base::alias_slice::VectorSliceMut3","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 3D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D mutable column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":185871,"byte_end":185908,"line_start":390,"line_end":390,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1800},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":186068,"byte_end":186083,"line_start":394,"line_end":394,"column_start":10,"column_end":25},"name":"VectorSliceMut4","qualname":"::base::alias_slice::VectorSliceMut4","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 4D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D mutable column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":186021,"byte_end":186058,"line_start":393,"line_end":393,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1805},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":186218,"byte_end":186233,"line_start":397,"line_end":397,"column_start":10,"column_end":25},"name":"VectorSliceMut5","qualname":"::base::alias_slice::VectorSliceMut5","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 5D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D mutable column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":186171,"byte_end":186208,"line_start":396,"line_end":396,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1810},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":186368,"byte_end":186383,"line_start":400,"line_end":400,"column_start":10,"column_end":25},"name":"VectorSliceMut6","qualname":"::base::alias_slice::VectorSliceMut6","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 6D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D mutable column vector slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/alias_slice.rs","byte_start":186321,"byte_end":186358,"line_start":399,"line_end":399,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187538,"byte_end":187550,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"ArrayStorage","qualname":"::base::array_storage::ArrayStorage","value":"ArrayStorage {  }","parent":null,"children":[{"krate":0,"index":1847}],"decl_id":null,"docs":" A array-based statically sized matrix data storage.\n","sig":null,"attributes":[{"value":"/ A array-based statically sized matrix data storage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187460,"byte_end":187515,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187516,"byte_end":187526,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":1848},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187821,"byte_end":187832,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"MatrixArray","qualname":"::base::array_storage::MatrixArray","value":"ArrayStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [ArrayStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `ArrayStorage`\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187731,"byte_end":187780,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ Renamed to [ArrayStorage].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187781,"byte_end":187811,"line_start":48,"line_end":48,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":196765,"byte_end":196776,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"new_scaling","qualname":"<MatrixN<N, D>>::new_scaling","value":"pub fn new_scaling(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies the same scaling factor on each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies the same scaling factor on each dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":196647,"byte_end":196739,"line_start":29,"line_end":29,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":196744,"byte_end":196753,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197058,"byte_end":197080,"line_start":40,"line_end":40,"column_start":12,"column_end":34},"name":"new_nonuniform_scaling","qualname":"<MatrixN<N, D>>::new_nonuniform_scaling","value":"pub fn new_nonuniform_scaling<SB>(&Vector<N, DimNameDiff<D, U1>, SB>) -> Self\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":196937,"byte_end":197032,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197037,"byte_end":197046,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197484,"byte_end":197499,"line_start":55,"line_end":55,"column_start":12,"column_end":27},"name":"new_translation","qualname":"<MatrixN<N, D>>::new_translation","value":"pub fn new_translation<SB>(&Vector<N, DimNameDiff<D, U1>, SB>) -> Self where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a pure translation.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a pure translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197389,"byte_end":197458,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197463,"byte_end":197472,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197959,"byte_end":197971,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix3<N>>::new_rotation","value":"pub fn new_rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.\n","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197854,"byte_end":197933,"line_start":69,"line_end":69,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197938,"byte_end":197947,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198250,"byte_end":198282,"line_start":79,"line_end":79,"column_start":12,"column_end":44},"name":"new_nonuniform_scaling_wrt_point","qualname":"<Matrix3<N>>::new_nonuniform_scaling_wrt_point","value":"pub fn new_nonuniform_scaling_wrt_point(&Vector2<N>, &Point2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198050,"byte_end":198158,"line_start":75,"line_end":75,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198163,"byte_end":198166,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Can be used to implement \"zoom_to\" functionality.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198171,"byte_end":198224,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198229,"byte_end":198238,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198856,"byte_end":198868,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix4<N>>::new_rotation","value":"pub fn new_rotation(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198663,"byte_end":198755,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198760,"byte_end":198763,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198768,"byte_end":198830,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198835,"byte_end":198844,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199157,"byte_end":199179,"line_start":109,"line_end":109,"column_start":12,"column_end":34},"name":"new_rotation_wrt_point","qualname":"<Matrix4<N>>::new_rotation_wrt_point","value":"pub fn new_rotation_wrt_point(Vector3<N>, Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198964,"byte_end":199056,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199061,"byte_end":199064,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199069,"byte_end":199131,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199136,"byte_end":199145,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199560,"byte_end":199592,"line_start":118,"line_end":118,"column_start":12,"column_end":44},"name":"new_nonuniform_scaling_wrt_point","qualname":"<Matrix4<N>>::new_nonuniform_scaling_wrt_point","value":"pub fn new_nonuniform_scaling_wrt_point(&Vector3<N>, &Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199360,"byte_end":199468,"line_start":114,"line_end":114,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199473,"byte_end":199476,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Can be used to implement \"zoom_to\" functionality.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199481,"byte_end":199534,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":199539,"byte_end":199548,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200323,"byte_end":200339,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Matrix4<N>>::from_scaled_axis","value":"pub fn from_scaled_axis(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200079,"byte_end":200171,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200176,"byte_end":200179,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200184,"byte_end":200246,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ This is identical to `Self::new_rotation`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200251,"byte_end":200297,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200302,"byte_end":200311,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200597,"byte_end":200614,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Matrix4<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200448,"byte_end":200493,"line_start":150,"line_end":150,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200498,"byte_end":200501,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200506,"byte_end":200585,"line_start":152,"line_end":152,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200825,"byte_end":200840,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix4<N>>::from_axis_angle","value":"pub fn from_axis_angle(&Unit<Vector3<N>>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.\n","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200735,"byte_end":200813,"line_start":157,"line_end":157,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201056,"byte_end":201072,"line_start":164,"line_end":164,"column_start":12,"column_end":28},"name":"new_orthographic","qualname":"<Matrix4<N>>::new_orthographic","value":"pub fn new_orthographic(N, N, N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for an orthographic projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for an orthographic projection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":200962,"byte_end":201030,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201035,"byte_end":201044,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201322,"byte_end":201337,"line_start":170,"line_end":170,"column_start":12,"column_end":27},"name":"new_perspective","qualname":"<Matrix4<N>>::new_perspective","value":"pub fn new_perspective(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for a perspective projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for a perspective projection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201230,"byte_end":201296,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201301,"byte_end":201310,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201749,"byte_end":201761,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Matrix4<N>>::face_towards","value":"pub fn face_towards(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an isometry that corresponds to the local frame of an observer standing at the\n point `eye` and looking toward `target`.","sig":null,"attributes":[{"value":"/ Creates an isometry that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201464,"byte_end":201554,"line_start":174,"line_end":174,"column_start":5,"column_end":95}},{"value":"/ point `eye` and looking toward `target`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201559,"byte_end":201603,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201608,"byte_end":201611,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `target - eye` to the positive `z` axis and the origin to the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201616,"byte_end":201708,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/ `eye`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201713,"byte_end":201723,"line_start":178,"line_end":178,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201728,"byte_end":201737,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202027,"byte_end":202045,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"new_observer_frame","qualname":"<Matrix4<N>>::new_observer_frame","value":"pub fn new_observer_frame(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Matrix4::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Matrix4::face_towards] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201909,"byte_end":201961,"line_start":184,"line_end":184,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":201966,"byte_end":202015,"line_start":185,"line_end":185,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202240,"byte_end":202250,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Matrix4<N>>::look_at_rh","value":"pub fn look_at_rh(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202168,"byte_end":202214,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202219,"byte_end":202228,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202467,"byte_end":202477,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Matrix4<N>>::look_at_lh","value":"pub fn look_at_lh(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202396,"byte_end":202441,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202446,"byte_end":202455,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202913,"byte_end":202927,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<SquareMatrix<N, D, S>>::append_scaling","value":"pub fn append_scaling(&Self, N) -> MatrixN<N, D> where D: DimNameSub<U1>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202739,"byte_end":202825,"line_start":206,"line_end":206,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202830,"byte_end":202839,"line_start":207,"line_end":207,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202844,"byte_end":202901,"line_start":208,"line_end":208,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203334,"byte_end":203349,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling","value":"pub fn prepend_scaling(&Self, N) -> MatrixN<N, D> where D: DimNameSub<U1>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203159,"byte_end":203245,"line_start":219,"line_end":219,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203250,"byte_end":203259,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203264,"byte_end":203322,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203770,"byte_end":203795,"line_start":235,"line_end":235,"column_start":12,"column_end":37},"name":"append_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling","value":"pub fn append_nonuniform_scaling<SB>(&Self,\n                                     &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203582,"byte_end":203671,"line_start":232,"line_end":232,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203676,"byte_end":203685,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":203690,"byte_end":203758,"line_start":234,"line_end":234,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204331,"byte_end":204357,"line_start":252,"line_end":252,"column_start":12,"column_end":38},"name":"prepend_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling","value":"pub fn prepend_nonuniform_scaling<SB>(&Self,\n                                      &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204142,"byte_end":204231,"line_start":249,"line_end":249,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204236,"byte_end":204245,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204250,"byte_end":204319,"line_start":251,"line_end":251,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204871,"byte_end":204889,"line_start":269,"line_end":269,"column_start":12,"column_end":30},"name":"append_translation","qualname":"<SquareMatrix<N, D, S>>::append_translation","value":"pub fn append_translation<SB>(&Self, &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204705,"byte_end":204779,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204784,"byte_end":204793,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_translation_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":204798,"byte_end":204859,"line_start":268,"line_end":268,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205369,"byte_end":205388,"line_start":283,"line_end":283,"column_start":12,"column_end":31},"name":"prepend_translation","qualname":"<SquareMatrix<N, D, S>>::prepend_translation","value":"pub fn prepend_translation<SB>(&Self, &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D> + Allocator<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205202,"byte_end":205276,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205281,"byte_end":205290,"line_start":281,"line_end":281,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_translation_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205295,"byte_end":205357,"line_start":282,"line_end":282,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206000,"byte_end":206018,"line_start":303,"line_end":303,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_scaling_mut","value":"pub fn append_scaling_mut(&mut Self, N) where D: DimNameSub<U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205879,"byte_end":205974,"line_start":301,"line_end":301,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205979,"byte_end":205988,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206319,"byte_end":206338,"line_start":313,"line_end":313,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling_mut","value":"pub fn prepend_scaling_mut(&mut Self, N) where D: DimNameSub<U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206198,"byte_end":206293,"line_start":311,"line_end":311,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206298,"byte_end":206307,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206645,"byte_end":206674,"line_start":323,"line_end":323,"column_start":12,"column_end":41},"name":"append_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling_mut","value":"pub fn append_nonuniform_scaling_mut<SB>(&mut Self,\n                                         &Vector<N, DimNameDiff<D, U1>, SB>)\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206521,"byte_end":206619,"line_start":321,"line_end":321,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206624,"byte_end":206633,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":207116,"byte_end":207146,"line_start":336,"line_end":336,"column_start":12,"column_end":42},"name":"prepend_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling_mut","value":"pub fn prepend_nonuniform_scaling_mut<SB>(&mut Self,\n                                          &Vector<N, DimNameDiff<D, U1>, SB>)\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":206992,"byte_end":207090,"line_start":334,"line_end":334,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":207095,"byte_end":207104,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":207586,"byte_end":207608,"line_start":351,"line_end":351,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<SquareMatrix<N, D, S>>::append_translation_mut","value":"pub fn append_translation_mut<SB>(&mut Self,\n                                  &Vector<N, DimNameDiff<D, U1>, SB>) where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":207486,"byte_end":207560,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":207565,"byte_end":207574,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":208090,"byte_end":208113,"line_start":366,"line_end":366,"column_start":12,"column_end":35},"name":"prepend_translation_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_translation_mut","value":"pub fn prepend_translation_mut<SB>(&mut Self,\n                                   &Vector<N, DimNameDiff<D, U1>, SB>) where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":207990,"byte_end":208064,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":208069,"byte_end":208078,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":209114,"byte_end":209130,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<SquareMatrix<N, D, S>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, DimNameDiff<D, U1>>)\n-> VectorN<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":208999,"byte_end":209088,"line_start":391,"line_end":391,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":209093,"byte_end":209102,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":209673,"byte_end":209688,"line_start":410,"line_end":410,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<SquareMatrix<N, D, S>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, DimNameDiff<D, U1>>)\n-> Point<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":209559,"byte_end":209647,"line_start":408,"line_end":408,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":209652,"byte_end":209661,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211334,"byte_end":211337,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"abs","qualname":"<Matrix<N, R, C, S>>::abs","value":"pub fn abs(&Self) -> MatrixMN<N, R, C> where N: Signed,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the component-wise absolute value.","sig":null,"attributes":[{"value":"/ Computes the component-wise absolute value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211027,"byte_end":211074,"line_start":19,"line_end":19,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211079,"byte_end":211082,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211087,"byte_end":211100,"line_start":21,"line_end":21,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211105,"byte_end":211108,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211113,"byte_end":211120,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211125,"byte_end":211153,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/ let a = Matrix2::new(0.0, 1.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211158,"byte_end":211192,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                      -2.0, -3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211197,"byte_end":211234,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.abs(), Matrix2::new(0.0, 1.0, 2.0, 3.0))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211239,"byte_end":211296,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211301,"byte_end":211308,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211313,"byte_end":211322,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13838},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":216384,"byte_end":216397,"line_start":147,"line_end":147,"column_start":5,"column_end":18},"name":"component_mul","qualname":"<Matrix<N, R1, C1, SA>>::component_mul","value":"pub fn component_mul<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixComponentOp<N, R1, C1, R2, C2> where N: ClosedMul, R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>,\nDefaultAllocator: SameShapeAllocator<N, R1, C1, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":212008,"byte_end":212017,"line_start":51,"line_end":51,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13847},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":216440,"byte_end":216444,"line_start":147,"line_end":147,"column_start":61,"column_end":65},"name":"cmpy","qualname":"<Matrix<N, R1, C1, SA>>::cmpy","value":"pub fn cmpy<R2, C2, SB, R3, C3,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: ClosedMul + Zero + Mul<N, Output = N> + Add<N,\nOutput = N>, R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2> + SameNumberOfRows<R1, R3> +\nSameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":"    Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":213124,"byte_end":213133,"line_start":77,"line_end":77,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13854},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":216418,"byte_end":216438,"line_start":147,"line_end":147,"column_start":39,"column_end":59},"name":"component_mul_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_assign","value":"pub fn component_mul_assign<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>)\nwhere N: ClosedMul, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":215033,"byte_end":215042,"line_start":112,"line_end":112,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13858},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":216399,"byte_end":216416,"line_start":147,"line_end":147,"column_start":20,"column_end":37},"name":"component_mul_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_mut","value":"pub fn component_mul_mut<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nN: ClosedMul, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":215843,"byte_end":215852,"line_start":132,"line_end":132,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":215865,"byte_end":215961,"line_start":133,"line_end":133,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":13867},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":217557,"byte_end":217570,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"component_div","qualname":"<Matrix<N, R1, C1, SA>>::component_div","value":"pub fn component_div<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixComponentOp<N, R1, C1, R2, C2> where N: ClosedDiv, R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>,\nDefaultAllocator: SameShapeAllocator<N, R1, C1, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":212008,"byte_end":212017,"line_start":51,"line_end":51,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13876},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":217613,"byte_end":217617,"line_start":192,"line_end":192,"column_start":61,"column_end":65},"name":"cdpy","qualname":"<Matrix<N, R1, C1, SA>>::cdpy","value":"pub fn cdpy<R2, C2, SB, R3, C3,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: ClosedDiv + Zero + Mul<N, Output = N> + Add<N,\nOutput = N>, R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2> + SameNumberOfRows<R1, R3> +\nSameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":"    Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":213124,"byte_end":213133,"line_start":77,"line_end":77,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13883},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":217591,"byte_end":217611,"line_start":192,"line_end":192,"column_start":39,"column_end":59},"name":"component_div_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_div_assign","value":"pub fn component_div_assign<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>)\nwhere N: ClosedDiv, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":215033,"byte_end":215042,"line_start":112,"line_end":112,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13887},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":217572,"byte_end":217589,"line_start":192,"line_end":192,"column_start":20,"column_end":37},"name":"component_div_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_div_mut","value":"pub fn component_div_mut<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nN: ClosedDiv, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":215843,"byte_end":215852,"line_start":132,"line_end":132,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":215865,"byte_end":215961,"line_start":133,"line_end":133,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219074,"byte_end":219077,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"inf","qualname":"<Matrix<N, R, C, S>>::inf","value":"pub fn inf(&Self, &Self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two matrices/vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":218974,"byte_end":219048,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219053,"byte_end":219062,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219284,"byte_end":219287,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"sup","qualname":"<Matrix<N, R, C, S>>::sup","value":"pub fn sup(&Self, &Self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two matrices/vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219183,"byte_end":219258,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219263,"byte_end":219272,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219480,"byte_end":219487,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Matrix<N, R, C, S>>::inf_sup","value":"pub fn inf_sup(&Self, &Self) -> (MatrixMN<N, R, C>, MatrixMN<N, R, C>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two matrices/vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219393,"byte_end":219454,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":219459,"byte_end":219468,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220692,"byte_end":220717,"line_start":37,"line_end":37,"column_start":19,"column_end":44},"name":"new_uninitialized_generic","qualname":"<MatrixMN<N, R, C>>::new_uninitialized_generic","value":"pub unsafe fn new_uninitialized_generic(R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics\n if `nrows != R::to_usize()` or `ncols != C::to_usize()`.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220499,"byte_end":220594,"line_start":34,"line_end":34,"column_start":5,"column_end":100}},{"value":"/ if `nrows != R::to_usize()` or `ncols != C::to_usize()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220599,"byte_end":220659,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220664,"byte_end":220673,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220922,"byte_end":220942,"line_start":43,"line_end":43,"column_start":12,"column_end":32},"name":"from_element_generic","qualname":"<MatrixMN<N, R, C>>::from_element_generic","value":"pub fn from_element_generic(R, C, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220839,"byte_end":220896,"line_start":41,"line_end":41,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220901,"byte_end":220910,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221253,"byte_end":221267,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"repeat_generic","qualname":"<MatrixMN<N, R, C>>::repeat_generic","value":"pub fn repeat_generic(R, C, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221122,"byte_end":221179,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221184,"byte_end":221187,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Same as `from_element_generic`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221192,"byte_end":221227,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221232,"byte_end":221241,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221525,"byte_end":221538,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"zeros_generic","qualname":"<MatrixMN<N, R, C>>::zeros_generic","value":"pub fn zeros_generic(R, C) -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221447,"byte_end":221499,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221504,"byte_end":221513,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221762,"byte_end":221783,"line_start":68,"line_end":68,"column_start":12,"column_end":33},"name":"from_iterator_generic","qualname":"<MatrixMN<N, R, C>>::from_iterator_generic","value":"pub fn from_iterator_generic<I>(R, C, I) -> Self where I: IntoIterator<Item =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements filled by an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements filled by an iterator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221671,"byte_end":221736,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221741,"byte_end":221750,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222230,"byte_end":222252,"line_start":81,"line_end":81,"column_start":12,"column_end":34},"name":"from_row_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_row_slice_generic","value":"pub fn from_row_slice_generic(R, C, &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice in\n row-major order.","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":221972,"byte_end":222060,"line_start":75,"line_end":75,"column_start":5,"column_end":93}},{"value":"/ row-major order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222065,"byte_end":222085,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222090,"byte_end":222093,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The order of elements in the slice must follow the usual mathematic writing, i.e.,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222098,"byte_end":222184,"line_start":78,"line_end":78,"column_start":5,"column_end":91}},{"value":"/ row-by-row.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222189,"byte_end":222204,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222209,"byte_end":222218,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223021,"byte_end":223046,"line_start":102,"line_end":102,"column_start":12,"column_end":37},"name":"from_column_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_column_slice_generic","value":"pub fn from_column_slice_generic(R, C, &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice. The\n components must have the same layout as the matrix data storage (i.e. column-major).\n","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222812,"byte_end":222902,"line_start":99,"line_end":99,"column_start":5,"column_end":95}},{"value":"/ components must have the same layout as the matrix data storage (i.e. column-major).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":222907,"byte_end":222995,"line_start":100,"line_end":100,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223000,"byte_end":223009,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223312,"byte_end":223327,"line_start":109,"line_end":109,"column_start":12,"column_end":27},"name":"from_fn_generic","qualname":"<MatrixMN<N, R, C>>::from_fn_generic","value":"pub fn from_fn_generic<F>(R, C, F) -> Self where F: FnMut(usize, usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with the results of a function applied to each of its component\n coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with the results of a function applied to each of its component","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223174,"byte_end":223265,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223270,"byte_end":223286,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223291,"byte_end":223300,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223930,"byte_end":223946,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<MatrixMN<N, R, C>>::identity_generic","value":"pub fn identity_generic(R, C) -> Self where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity matrix.","sig":null,"attributes":[{"value":"/ Creates a new identity matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223695,"byte_end":223729,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223734,"byte_end":223737,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223742,"byte_end":223837,"line_start":126,"line_end":126,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223842,"byte_end":223904,"line_start":127,"line_end":127,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":223909,"byte_end":223918,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224365,"byte_end":224394,"line_start":141,"line_end":141,"column_start":12,"column_end":41},"name":"from_diagonal_element_generic","qualname":"<MatrixMN<N, R, C>>::from_diagonal_element_generic","value":"pub fn from_diagonal_element_generic(R, C, N) -> Self where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with its diagonal filled with copies of `elt`.","sig":null,"attributes":[{"value":"/ Creates a new matrix with its diagonal filled with copies of `elt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224093,"byte_end":224164,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224169,"byte_end":224172,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224177,"byte_end":224272,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224277,"byte_end":224339,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224344,"byte_end":224353,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224978,"byte_end":225007,"line_start":159,"line_end":159,"column_start":12,"column_end":41},"name":"from_partial_diagonal_generic","qualname":"<MatrixMN<N, R, C>>::from_partial_diagonal_generic","value":"pub fn from_partial_diagonal_generic(R, C, &[N]) -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are\n filled with the content of `elts`. Others are set to 0.","sig":null,"attributes":[{"value":"/ Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224701,"byte_end":224795,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ filled with the content of `elts`. Others are set to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224800,"byte_end":224859,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224864,"byte_end":224867,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Panics if `elts.len()` is larger than the minimum among `nrows` and `ncols`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224872,"byte_end":224952,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":224957,"byte_end":224966,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226122,"byte_end":226131,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"from_rows","qualname":"<MatrixMN<N, R, C>>::from_rows","value":"pub fn from_rows<SB>(&[Matrix<N, U1, C, SB>]) -> Self where\nSB: Storage<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its rows.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225446,"byte_end":225484,"line_start":176,"line_end":176,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225489,"byte_end":225492,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough rows are provided (for statically-sized matrices), or if all rows do","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225497,"byte_end":225590,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ not have the same dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225595,"byte_end":225628,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225633,"byte_end":225636,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225641,"byte_end":225654,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225659,"byte_end":225666,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{RowVector3, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225671,"byte_end":225713,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/ # use std::iter;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225718,"byte_end":225738,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225743,"byte_end":225746,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_rows(&[ RowVector3::new(1.0, 2.0, 3.0),  RowVector3::new(4.0, 5.0, 6.0),  RowVector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225751,"byte_end":225885,"line_start":186,"line_end":186,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225890,"byte_end":225893,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 2.0 && m.m13 == 3.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225898,"byte_end":225957,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 4.0 && m.m22 == 5.0 && m.m23 == 6.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":225962,"byte_end":226021,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 7.0 && m.m32 == 8.0 && m.m33 == 9.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226026,"byte_end":226084,"line_start":190,"line_end":190,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226089,"byte_end":226096,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226101,"byte_end":226110,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227587,"byte_end":227599,"line_start":235,"line_end":235,"column_start":12,"column_end":24},"name":"from_columns","qualname":"<MatrixMN<N, R, C>>::from_columns","value":"pub fn from_columns<SB>(&[Vector<N, R, SB>]) -> Self where SB: Storage<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its columns.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226911,"byte_end":226952,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226957,"byte_end":226960,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough columns are provided (for statically-sized matrices), or if all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":226965,"byte_end":227053,"line_start":220,"line_end":220,"column_start":5,"column_end":93}},{"value":"/ columns do not have the same dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227058,"byte_end":227102,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227107,"byte_end":227110,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227115,"byte_end":227128,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227133,"byte_end":227140,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227145,"byte_end":227184,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/ # use std::iter;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227189,"byte_end":227209,"line_start":226,"line_end":226,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227214,"byte_end":227217,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_columns(&[ Vector3::new(1.0, 2.0, 3.0),  Vector3::new(4.0, 5.0, 6.0),  Vector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227222,"byte_end":227350,"line_start":228,"line_end":228,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227355,"byte_end":227358,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 4.0 && m.m13 == 7.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227363,"byte_end":227422,"line_start":230,"line_end":230,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 2.0 && m.m22 == 5.0 && m.m23 == 8.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227427,"byte_end":227486,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 3.0 && m.m32 == 6.0 && m.m33 == 9.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227491,"byte_end":227549,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227554,"byte_end":227561,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":227566,"byte_end":227575,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228497,"byte_end":228515,"line_start":263,"line_end":263,"column_start":12,"column_end":30},"name":"new_random_generic","qualname":"<MatrixMN<N, R, C>>::new_random_generic","value":"pub fn new_random_generic(R, C) -> Self where Standard: Distribution<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228396,"byte_end":228443,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228448,"byte_end":228457,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228462,"byte_end":228485,"line_start":262,"line_end":262,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228774,"byte_end":228799,"line_start":272,"line_end":272,"column_start":12,"column_end":37},"name":"from_distribution_generic","qualname":"<MatrixMN<N, R, C>>::from_distribution_generic","value":"pub fn from_distribution_generic<Distr: Distribution<N> + ?Sized, G: Rng +\n                                 ?Sized>(R, C, &Distr, &mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values from the given distribution.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values from the given distribution.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228673,"byte_end":228748,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":228753,"byte_end":228762,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229689,"byte_end":229705,"line_start":300,"line_end":300,"column_start":12,"column_end":28},"name":"from_vec_generic","qualname":"<MatrixMN<N, R, C>>::from_vec_generic","value":"pub fn from_vec_generic(R, C, Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix backed by a given `Vec`.","sig":null,"attributes":[{"value":"/ Creates a matrix backed by a given `Vec`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229042,"byte_end":229087,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229092,"byte_end":229095,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The output matrix is filled column-by-column.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229100,"byte_end":229149,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229154,"byte_end":229157,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229162,"byte_end":229175,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229180,"byte_end":229187,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Dynamic, DMatrix, Matrix, U1};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229192,"byte_end":229243,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229248,"byte_end":229251,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![0, 1, 2, 3, 4, 5];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229256,"byte_end":229293,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ let vec_ptr = vec.as_ptr();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229298,"byte_end":229329,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229334,"byte_end":229337,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let matrix = Matrix::from_vec_generic(Dynamic::new(vec.len()), U1, vec);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229342,"byte_end":229418,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ let matrix_storage_ptr = matrix.data.as_vec().as_ptr();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229423,"byte_end":229482,"line_start":293,"line_end":293,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229487,"byte_end":229490,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ // `matrix` is backed by exactly the same `Vec` as it was constructed from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229495,"byte_end":229574,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix_storage_ptr, vec_ptr);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229579,"byte_end":229623,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229628,"byte_end":229635,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229640,"byte_end":229649,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229654,"byte_end":229677,"line_start":299,"line_end":299,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230839,"byte_end":230852,"line_start":329,"line_end":329,"column_start":12,"column_end":25},"name":"from_diagonal","qualname":"<MatrixN<N, D>>::from_diagonal","value":"pub fn from_diagonal<SB: Storage<N, D>>(&Vector<N, D, SB>) -> Self where\nN: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","sig":null,"attributes":[{"value":"/ Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229914,"byte_end":230005,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230010,"byte_end":230013,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230018,"byte_end":230031,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230036,"byte_end":230043,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, DVector, Matrix3, DMatrix};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230048,"byte_end":230105,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/ # use std::iter;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230110,"byte_end":230130,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230135,"byte_end":230138,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_diagonal(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230143,"byte_end":230208,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/ // The two additional arguments represent the matrix dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230213,"byte_end":230281,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ let dm = DMatrix::from_diagonal(&DVector::from_row_slice(&[1.0, 2.0, 3.0]));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230286,"byte_end":230366,"line_start":319,"line_end":319,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230371,"byte_end":230374,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 0.0 && m.m13 == 0.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230379,"byte_end":230438,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 0.0 && m.m22 == 2.0 && m.m23 == 0.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230443,"byte_end":230502,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 0.0 && m.m32 == 0.0 && m.m33 == 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230507,"byte_end":230565,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ assert!(dm[(0, 0)] == 1.0 && dm[(0, 1)] == 0.0 && dm[(0, 2)] == 0.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230570,"byte_end":230644,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/         dm[(1, 0)] == 0.0 && dm[(1, 1)] == 2.0 && dm[(1, 2)] == 0.0 &&","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230649,"byte_end":230723,"line_start":325,"line_end":325,"column_start":5,"column_end":79}},{"value":"/         dm[(2, 0)] == 0.0 && dm[(2, 1)] == 0.0 && dm[(2, 2)] == 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230728,"byte_end":230801,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230806,"byte_end":230813,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":230818,"byte_end":230827,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":258897,"byte_end":258900,"line_start":1016,"line_end":1016,"column_start":12,"column_end":15},"name":"ith","qualname":"<VectorN<N, R>>::ith","value":"pub fn ith(usize, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with `val` as its i-th component.\n","sig":null,"attributes":[{"value":"/ The column vector with `val` as its i-th component.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":258816,"byte_end":258871,"line_start":1014,"line_end":1014,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":258876,"byte_end":258885,"line_start":1015,"line_end":1015,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259111,"byte_end":259112,"line_start":1024,"line_end":1024,"column_start":12,"column_end":13},"name":"x","qualname":"<VectorN<N, R>>::x","value":"pub fn x() -> Self where R::Value: Cmp<typenum::U0, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259011,"byte_end":259085,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259090,"byte_end":259099,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259433,"byte_end":259434,"line_start":1038,"line_end":1038,"column_start":12,"column_end":13},"name":"y","qualname":"<VectorN<N, R>>::y","value":"pub fn y() -> Self where R::Value: Cmp<typenum::U1, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259332,"byte_end":259407,"line_start":1036,"line_end":1036,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259412,"byte_end":259421,"line_start":1037,"line_end":1037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259754,"byte_end":259755,"line_start":1052,"line_end":1052,"column_start":12,"column_end":13},"name":"z","qualname":"<VectorN<N, R>>::z","value":"pub fn z() -> Self where R::Value: Cmp<typenum::U2, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259654,"byte_end":259728,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259733,"byte_end":259742,"line_start":1051,"line_end":1051,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260076,"byte_end":260077,"line_start":1066,"line_end":1066,"column_start":12,"column_end":13},"name":"w","qualname":"<VectorN<N, R>>::w","value":"pub fn w() -> Self where R::Value: Cmp<typenum::U3, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":259975,"byte_end":260050,"line_start":1064,"line_end":1064,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260055,"byte_end":260064,"line_start":1065,"line_end":1065,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260397,"byte_end":260398,"line_start":1080,"line_end":1080,"column_start":12,"column_end":13},"name":"a","qualname":"<VectorN<N, R>>::a","value":"pub fn a() -> Self where R::Value: Cmp<typenum::U4, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260297,"byte_end":260371,"line_start":1078,"line_end":1078,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260376,"byte_end":260385,"line_start":1079,"line_end":1079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260718,"byte_end":260719,"line_start":1094,"line_end":1094,"column_start":12,"column_end":13},"name":"b","qualname":"<VectorN<N, R>>::b","value":"pub fn b() -> Self where R::Value: Cmp<typenum::U5, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260618,"byte_end":260692,"line_start":1092,"line_end":1092,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260697,"byte_end":260706,"line_start":1093,"line_end":1093,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261044,"byte_end":261050,"line_start":1108,"line_end":1108,"column_start":12,"column_end":18},"name":"x_axis","qualname":"<VectorN<N, R>>::x_axis","value":"pub fn x_axis() -> Unit<Self> where R::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":260939,"byte_end":261018,"line_start":1106,"line_end":1106,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261023,"byte_end":261032,"line_start":1107,"line_end":1107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261293,"byte_end":261299,"line_start":1117,"line_end":1117,"column_start":12,"column_end":18},"name":"y_axis","qualname":"<VectorN<N, R>>::y_axis","value":"pub fn y_axis() -> Unit<Self> where R::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261187,"byte_end":261267,"line_start":1115,"line_end":1115,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261272,"byte_end":261281,"line_start":1116,"line_end":1116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261541,"byte_end":261547,"line_start":1126,"line_end":1126,"column_start":12,"column_end":18},"name":"z_axis","qualname":"<VectorN<N, R>>::z_axis","value":"pub fn z_axis() -> Unit<Self> where R::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261436,"byte_end":261515,"line_start":1124,"line_end":1124,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261520,"byte_end":261529,"line_start":1125,"line_end":1125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261790,"byte_end":261796,"line_start":1135,"line_end":1135,"column_start":12,"column_end":18},"name":"w_axis","qualname":"<VectorN<N, R>>::w_axis","value":"pub fn w_axis() -> Unit<Self> where R::Value: Cmp<typenum::U3, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261684,"byte_end":261764,"line_start":1133,"line_end":1133,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261769,"byte_end":261778,"line_start":1134,"line_end":1134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":262038,"byte_end":262044,"line_start":1144,"line_end":1144,"column_start":12,"column_end":18},"name":"a_axis","qualname":"<VectorN<N, R>>::a_axis","value":"pub fn a_axis() -> Unit<Self> where R::Value: Cmp<typenum::U4, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":261933,"byte_end":262012,"line_start":1142,"line_end":1142,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":262017,"byte_end":262026,"line_start":1143,"line_end":1143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":262286,"byte_end":262292,"line_start":1153,"line_end":1153,"column_start":12,"column_end":18},"name":"b_axis","qualname":"<VectorN<N, R>>::b_axis","value":"pub fn b_axis() -> Unit<Self> where R::Value: Cmp<typenum::U5, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":262181,"byte_end":262260,"line_start":1151,"line_end":1151,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":262265,"byte_end":262274,"line_start":1152,"line_end":1152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263201,"byte_end":263242,"line_start":19,"line_end":19,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic_unchecked","value":"pub unsafe fn from_slice_with_strides_generic_unchecked(&'a [N], usize, R, C,\n                                                        RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":262789,"byte_end":262924,"line_start":14,"line_end":14,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":262929,"byte_end":262932,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":262937,"byte_end":263034,"line_start":16,"line_end":16,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263039,"byte_end":263168,"line_start":17,"line_end":17,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263173,"byte_end":263182,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263955,"byte_end":263986,"line_start":40,"line_end":40,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic","value":"pub fn from_slice_with_strides_generic(&'a [N], R, C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263604,"byte_end":263714,"line_start":35,"line_end":35,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263719,"byte_end":263722,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263727,"byte_end":263795,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263800,"byte_end":263929,"line_start":38,"line_end":38,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":263934,"byte_end":263943,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265229,"byte_end":265270,"line_start":70,"line_end":70,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic_unchecked","value":"pub unsafe fn from_slice_with_strides_generic_unchecked(&'a mut [N], usize, R,\n                                                        C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":264809,"byte_end":264952,"line_start":65,"line_end":65,"column_start":5,"column_end":148}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":264957,"byte_end":264960,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":264965,"byte_end":265062,"line_start":67,"line_end":67,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265067,"byte_end":265196,"line_start":68,"line_end":68,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265201,"byte_end":265210,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":266002,"byte_end":266033,"line_start":91,"line_end":91,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic","value":"pub fn from_slice_with_strides_generic(&'a mut [N], R, C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265643,"byte_end":265761,"line_start":86,"line_end":86,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265766,"byte_end":265769,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265774,"byte_end":265842,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265847,"byte_end":265976,"line_start":89,"line_end":89,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":265981,"byte_end":265990,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268216,"byte_end":268244,"line_start":141,"line_end":141,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_generic_unchecked","value":"pub unsafe fn from_slice_generic_unchecked(&'a [N], usize, R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":267835,"byte_end":267958,"line_start":136,"line_end":136,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":267963,"byte_end":267966,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":267971,"byte_end":268068,"line_start":138,"line_end":138,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268073,"byte_end":268183,"line_start":139,"line_end":139,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268188,"byte_end":268197,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268780,"byte_end":268798,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMN>::from_slice_generic","value":"pub fn from_slice_generic(&'a [N], R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268448,"byte_end":268558,"line_start":150,"line_end":150,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268563,"byte_end":268566,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268571,"byte_end":268639,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268644,"byte_end":268754,"line_start":153,"line_end":153,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268759,"byte_end":268768,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269391,"byte_end":269419,"line_start":166,"line_end":166,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_generic_unchecked","value":"pub unsafe fn from_slice_generic_unchecked(&'a mut [N], usize, R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269002,"byte_end":269133,"line_start":161,"line_end":161,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269138,"byte_end":269141,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269146,"byte_end":269243,"line_start":163,"line_end":163,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269248,"byte_end":269358,"line_start":164,"line_end":164,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269363,"byte_end":269372,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269967,"byte_end":269985,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMutMN>::from_slice_generic","value":"pub fn from_slice_generic(&'a mut [N], R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269627,"byte_end":269745,"line_start":175,"line_end":175,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269750,"byte_end":269753,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269758,"byte_end":269826,"line_start":177,"line_end":177,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269831,"byte_end":269941,"line_start":178,"line_end":178,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":269946,"byte_end":269955,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298351,"byte_end":298365,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"upper_triangle","qualname":"<Matrix<N, R, C, S>>::upper_triangle","value":"pub fn upper_triangle(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the upper triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the upper triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298246,"byte_end":298325,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298330,"byte_end":298339,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298674,"byte_end":298688,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"lower_triangle","qualname":"<Matrix<N, R, C, S>>::lower_triangle","value":"pub fn lower_triangle(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the lower triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the lower triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298569,"byte_end":298648,"line_start":34,"line_end":34,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298653,"byte_end":298662,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":299029,"byte_end":299040,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"select_rows","qualname":"<Matrix<N, R, C, S>>::select_rows","value":"pub fn select_rows<'a, I>(&Self, I) -> MatrixMN<N, Dynamic, C> where\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator + Clone,\nDefaultAllocator: Allocator<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of rows from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of rows from `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298892,"byte_end":298965,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298970,"byte_end":299017,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":300298,"byte_end":300312,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"select_columns","qualname":"<Matrix<N, R, C, S>>::select_columns","value":"pub fn select_columns<'a, I>(&Self, I) -> MatrixMN<N, R, Dynamic> where\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator,\nDefaultAllocator: Allocator<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of columns from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of columns from `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":300158,"byte_end":300234,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":300239,"byte_end":300286,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301031,"byte_end":301035,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"fill","qualname":"<Matrix<N, R, C, S>>::fill","value":"pub fn fill(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of this matrix to `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":300955,"byte_end":301005,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301010,"byte_end":301019,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301218,"byte_end":301236,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"fill_with_identity","qualname":"<Matrix<N, R, C, S>>::fill_with_identity","value":"pub fn fill_with_identity(&mut Self) where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Fills `self` with the identity matrix.\n","sig":null,"attributes":[{"value":"/ Fills `self` with the identity matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301150,"byte_end":301192,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301197,"byte_end":301206,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301451,"byte_end":301464,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"fill_diagonal","qualname":"<Matrix<N, R, C, S>>::fill_diagonal","value":"pub fn fill_diagonal(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the diagonal elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the diagonal elements of this matrix to `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301366,"byte_end":301425,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301430,"byte_end":301439,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301773,"byte_end":301781,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"fill_row","qualname":"<Matrix<N, R, C, S>>::fill_row","value":"pub fn fill_row(&mut Self, usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected row to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected row to `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301692,"byte_end":301747,"line_start":132,"line_end":132,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":301752,"byte_end":301761,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302093,"byte_end":302104,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"fill_column","qualname":"<Matrix<N, R, C, S>>::fill_column","value":"pub fn fill_column(&mut Self, usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected column to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected column to `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302009,"byte_end":302067,"line_start":141,"line_end":141,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302072,"byte_end":302081,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302433,"byte_end":302445,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"set_diagonal","qualname":"<Matrix<N, R, C, S>>::set_diagonal","value":"pub fn set_diagonal<R2: Dim, S2>(&mut Self, &Vector<N, R2, S2>) where\nR: DimMin<C>, S2: Storage<N, R2>, ShapeConstraint: DimEq<DimMinimum<R, C>, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302332,"byte_end":302407,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302412,"byte_end":302421,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303263,"byte_end":303283,"line_start":173,"line_end":173,"column_start":12,"column_end":32},"name":"set_partial_diagonal","qualname":"<Matrix<N, R, C, S>>::set_partial_diagonal","value":"pub fn set_partial_diagonal<impl Iterator<Item = N>: Iterator<Item =\n                            N>>(&mut Self, impl Iterator<Item = N>)","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given iterator.","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given iterator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":302944,"byte_end":303021,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303026,"byte_end":303029,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This will fill as many diagonal elements as the iterator yields, up to the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303034,"byte_end":303112,"line_start":169,"line_end":169,"column_start":5,"column_end":83}},{"value":"/ minimum of the number of rows and columns of `self`, and starting with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303117,"byte_end":303195,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/ diagonal element at index (0, 0).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303200,"byte_end":303237,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303242,"byte_end":303251,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303678,"byte_end":303685,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"set_row","qualname":"<Matrix<N, R, C, S>>::set_row","value":"pub fn set_row<C2: Dim, S2>(&mut Self, usize, &RowVector<N, C2, S2>) where\nS2: Storage<N, U1, C2>, ShapeConstraint: SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected row of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected row of this matrix with the content of the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303573,"byte_end":303652,"line_start":182,"line_end":182,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303657,"byte_end":303666,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304008,"byte_end":304018,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"set_column","qualname":"<Matrix<N, R, C, S>>::set_column","value":"pub fn set_column<R2: Dim, S2>(&mut Self, usize, &Vector<N, R2, S2>) where\nS2: Storage<N, R2, U1>, ShapeConstraint: SameNumberOfRows<R, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected column of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected column of this matrix with the content of the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303900,"byte_end":303982,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":303987,"byte_end":303996,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304666,"byte_end":304685,"line_start":210,"line_end":210,"column_start":12,"column_end":31},"name":"fill_lower_triangle","qualname":"<Matrix<N, R, C, S>>::fill_lower_triangle","value":"pub fn fill_lower_triangle(&mut Self, N, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304236,"byte_end":304315,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304320,"byte_end":304323,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some subdiagonals to be left untouched:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304328,"byte_end":304400,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304405,"byte_end":304467,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304472,"byte_end":304529,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` subdiagonals are left","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304534,"byte_end":304621,"line_start":207,"line_end":207,"column_start":5,"column_end":92}},{"value":"/ untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304626,"byte_end":304640,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304645,"byte_end":304654,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305355,"byte_end":305374,"line_start":226,"line_end":226,"column_start":12,"column_end":31},"name":"fill_upper_triangle","qualname":"<Matrix<N, R, C, S>>::fill_upper_triangle","value":"pub fn fill_upper_triangle(&mut Self, N, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":304921,"byte_end":305000,"line_start":218,"line_end":218,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305005,"byte_end":305008,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some superdiagonals to be left untouched:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305013,"byte_end":305087,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305092,"byte_end":305154,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305159,"byte_end":305216,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` superdiagonals are left","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305221,"byte_end":305310,"line_start":223,"line_end":223,"column_start":5,"column_end":94}},{"value":"/ untouched.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305315,"byte_end":305329,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305334,"byte_end":305343,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305806,"byte_end":305815,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"swap_rows","qualname":"<Matrix<N, R, C, S>>::swap_rows","value":"pub fn swap_rows(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two rows in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two rows in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305752,"byte_end":305780,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":305785,"byte_end":305794,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306221,"byte_end":306233,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"swap_columns","qualname":"<Matrix<N, R, C, S>>::swap_columns","value":"pub fn swap_columns(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two columns in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two columns in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306164,"byte_end":306195,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306200,"byte_end":306209,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306824,"byte_end":306863,"line_start":269,"line_end":269,"column_start":12,"column_end":51},"name":"fill_lower_triangle_with_upper_triangle","qualname":"<Matrix<N, D, D, S>>::fill_lower_triangle_with_upper_triangle","value":"pub fn fill_lower_triangle_with_upper_triangle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its lower-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its lower-triangular part.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306653,"byte_end":306727,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306732,"byte_end":306735,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306740,"byte_end":306812,"line_start":268,"line_end":268,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307390,"byte_end":307429,"line_start":285,"line_end":285,"column_start":12,"column_end":51},"name":"fill_upper_triangle_with_lower_triangle","qualname":"<Matrix<N, D, D, S>>::fill_upper_triangle_with_lower_triangle","value":"pub fn fill_upper_triangle_with_lower_triangle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its upper-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its upper-triangular part.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307219,"byte_end":307293,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307298,"byte_end":307301,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307306,"byte_end":307378,"line_start":284,"line_end":284,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":308021,"byte_end":308034,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Matrix<N, R, C, S>>::remove_column","value":"pub fn remove_column(Self, usize) -> MatrixMN<N, R, DimDiff<C, U1>> where\nC: DimSub<U1>, DefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th column from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th column from this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307948,"byte_end":307995,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":308000,"byte_end":308009,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":308348,"byte_end":308365,"line_start":321,"line_end":321,"column_start":12,"column_end":29},"name":"remove_columns_at","qualname":"<Matrix<N, R, C, S>>::remove_columns_at","value":"pub fn remove_columns_at(Self, &[usize]) -> MatrixMN<N, R, Dynamic> where\nC: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes all columns in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all columns in `indices`   ","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":308245,"byte_end":308284,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":308289,"byte_end":308336,"line_start":320,"line_end":320,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":309615,"byte_end":309629,"line_start":358,"line_end":358,"column_start":12,"column_end":26},"name":"remove_rows_at","qualname":"<Matrix<N, R, C, S>>::remove_rows_at","value":"pub fn remove_rows_at(Self, &[usize]) -> MatrixMN<N, Dynamic, C> where\nR: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes all rows in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all rows in `indices`   ","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":309515,"byte_end":309551,"line_start":356,"line_end":356,"column_start":5,"column_end":41}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":309556,"byte_end":309603,"line_start":357,"line_end":357,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":310837,"byte_end":310857,"line_start":393,"line_end":393,"column_start":12,"column_end":32},"name":"remove_fixed_columns","qualname":"<Matrix<N, R, C, S>>::remove_fixed_columns","value":"pub fn remove_fixed_columns<D>(Self, usize) -> MatrixMN<N, R, DimDiff<C, D>>\nwhere D: DimName, C: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th\n (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":310706,"byte_end":310791,"line_start":390,"line_end":390,"column_start":5,"column_end":90}},{"value":"/ (included).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":310796,"byte_end":310811,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":310816,"byte_end":310825,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311263,"byte_end":311277,"line_start":405,"line_end":405,"column_start":12,"column_end":26},"name":"remove_columns","qualname":"<Matrix<N, R, C, S>>::remove_columns","value":"pub fn remove_columns(Self, usize, usize) -> MatrixMN<N, R, Dynamic> where\nC: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311095,"byte_end":311185,"line_start":402,"line_end":402,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311190,"byte_end":311199,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311204,"byte_end":311251,"line_start":404,"line_end":404,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311789,"byte_end":311811,"line_start":418,"line_end":418,"column_start":12,"column_end":34},"name":"remove_columns_generic","qualname":"<Matrix<N, R, C, S>>::remove_columns_generic","value":"pub fn remove_columns_generic<D>(Self, usize, D)\n-> MatrixMN<N, R, DimDiff<C, D>> where D: Dim, C: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311520,"byte_end":311612,"line_start":413,"line_end":413,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311617,"byte_end":311620,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_columns(...)` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311625,"byte_end":311693,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/ `.remove_fixed_columns(...)` which have nicer API interfaces.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311698,"byte_end":311763,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":311768,"byte_end":311777,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313186,"byte_end":313196,"line_start":466,"line_end":466,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Matrix<N, R, C, S>>::remove_row","value":"pub fn remove_row(Self, usize) -> MatrixMN<N, DimDiff<R, U1>, C> where\nR: DimSub<U1>, DefaultAllocator: Reallocator<N, R, C, DimDiff<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th row from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th row from this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313116,"byte_end":313160,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313165,"byte_end":313174,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313524,"byte_end":313541,"line_start":476,"line_end":476,"column_start":12,"column_end":29},"name":"remove_fixed_rows","qualname":"<Matrix<N, R, C, S>>::remove_fixed_rows","value":"pub fn remove_fixed_rows<D>(Self, usize) -> MatrixMN<N, DimDiff<R, D>, C>\nwhere D: DimName, R: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313404,"byte_end":313498,"line_start":474,"line_end":474,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313503,"byte_end":313512,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313941,"byte_end":313952,"line_start":488,"line_end":488,"column_start":12,"column_end":23},"name":"remove_rows","qualname":"<Matrix<N, R, C, S>>::remove_rows","value":"pub fn remove_rows(Self, usize, usize) -> MatrixMN<N, Dynamic, C> where\nR: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313776,"byte_end":313863,"line_start":485,"line_end":485,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313868,"byte_end":313877,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":313882,"byte_end":313929,"line_start":487,"line_end":487,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":314452,"byte_end":314471,"line_start":501,"line_end":501,"column_start":12,"column_end":31},"name":"remove_rows_generic","qualname":"<Matrix<N, R, C, S>>::remove_rows_generic","value":"pub fn remove_rows_generic<D>(Self, usize, D) -> MatrixMN<N, DimDiff<R, D>, C>\nwhere D: Dim, R: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":314192,"byte_end":314281,"line_start":496,"line_end":496,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":314286,"byte_end":314289,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_rows(...)` and `.remove_fixed_rows(...)`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":314294,"byte_end":314385,"line_start":498,"line_end":498,"column_start":5,"column_end":96}},{"value":"/ which have nicer API interfaces.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":314390,"byte_end":314426,"line_start":499,"line_end":499,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":314431,"byte_end":314440,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":315509,"byte_end":315522,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Matrix<N, R, C, S>>::insert_column","value":"pub fn insert_column(Self, usize, N) -> MatrixMN<N, R, DimSum<C, U1>> where\nC: DimAdd<U1>, DefaultAllocator: Reallocator<N, R, C, R, DimSum<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a column filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a column filled with `val` at the `i-th` position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":315421,"byte_end":315483,"line_start":540,"line_end":540,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":315488,"byte_end":315497,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":315851,"byte_end":315871,"line_start":552,"line_end":552,"column_start":12,"column_end":32},"name":"insert_fixed_columns","qualname":"<Matrix<N, R, C, S>>::insert_fixed_columns","value":"pub fn insert_fixed_columns<D>(Self, usize, N) -> MatrixMN<N, R, DimSum<C, D>>\nwhere D: DimName, C: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":315744,"byte_end":315825,"line_start":550,"line_end":550,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":315830,"byte_end":315839,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316368,"byte_end":316382,"line_start":566,"line_end":566,"column_start":12,"column_end":26},"name":"insert_columns","qualname":"<Matrix<N, R, C, S>>::insert_columns","value":"pub fn insert_columns(Self, usize, usize, N) -> MatrixMN<N, R, Dynamic> where\nC: DimAdd<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316216,"byte_end":316290,"line_start":563,"line_end":563,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316295,"byte_end":316304,"line_start":564,"line_end":564,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316309,"byte_end":316356,"line_start":565,"line_end":565,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316902,"byte_end":316938,"line_start":580,"line_end":580,"column_start":19,"column_end":55},"name":"insert_columns_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_columns_generic_uninitialized","value":"pub unsafe fn insert_columns_generic_uninitialized<D>(Self, usize, D)\n-> MatrixMN<N, R, DimSum<C, D>> where D: Dim, C: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316726,"byte_end":316808,"line_start":576,"line_end":576,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316813,"byte_end":316816,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ The added column values are not initialized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316821,"byte_end":316869,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":316874,"byte_end":316883,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318005,"byte_end":318015,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Matrix<N, R, C, S>>::insert_row","value":"pub fn insert_row(Self, usize, N) -> MatrixMN<N, DimSum<R, U1>, C> where\nR: DimAdd<U1>, DefaultAllocator: Reallocator<N, R, C, DimSum<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a row filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a row filled with `val` at the `i-th` position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":317920,"byte_end":317979,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":317984,"byte_end":317993,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318338,"byte_end":318355,"line_start":630,"line_end":630,"column_start":12,"column_end":29},"name":"insert_fixed_rows","qualname":"<Matrix<N, R, C, S>>::insert_fixed_rows","value":"pub fn insert_fixed_rows<D>(Self, usize, N) -> MatrixMN<N, DimSum<R, D>, C>\nwhere D: DimName, R: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318234,"byte_end":318312,"line_start":628,"line_end":628,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318317,"byte_end":318326,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318843,"byte_end":318854,"line_start":644,"line_end":644,"column_start":12,"column_end":23},"name":"insert_rows","qualname":"<Matrix<N, R, C, S>>::insert_rows","value":"pub fn insert_rows(Self, usize, usize, N) -> MatrixMN<N, Dynamic, C> where\nR: DimAdd<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318694,"byte_end":318765,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318770,"byte_end":318779,"line_start":642,"line_end":642,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":318784,"byte_end":318831,"line_start":643,"line_end":643,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319491,"byte_end":319524,"line_start":660,"line_end":660,"column_start":19,"column_end":52},"name":"insert_rows_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_rows_generic_uninitialized","value":"pub unsafe fn insert_rows_generic_uninitialized<D>(Self, usize, D)\n-> MatrixMN<N, DimSum<R, D>, C> where D: Dim, R: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319192,"byte_end":319262,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319267,"byte_end":319270,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The added rows values are not initialized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319275,"byte_end":319321,"line_start":656,"line_end":656,"column_start":5,"column_end":51}},{"value":"/ This is the generic implementation of `.insert_rows(...)` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319326,"byte_end":319391,"line_start":657,"line_end":657,"column_start":5,"column_end":70}},{"value":"/ `.insert_fixed_rows(...)` which have nicer API interfaces.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319396,"byte_end":319458,"line_start":658,"line_end":658,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":319463,"byte_end":319472,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320716,"byte_end":320722,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"resize","qualname":"<Matrix<N, R, C, S>>::resize","value":"pub fn resize(Self, usize, usize, N) -> DMatrix<N> where\nDefaultAllocator: Reallocator<N, R, C, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320367,"byte_end":320452,"line_start":699,"line_end":699,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320457,"byte_end":320460,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320465,"byte_end":320557,"line_start":701,"line_end":701,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320562,"byte_end":320652,"line_start":702,"line_end":702,"column_start":5,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320657,"byte_end":320704,"line_start":703,"line_end":703,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321321,"byte_end":321338,"line_start":716,"line_end":716,"column_start":12,"column_end":29},"name":"resize_vertically","qualname":"<Matrix<N, R, C, S>>::resize_vertically","value":"pub fn resize_vertically(Self, usize, N) -> MatrixMN<N, Dynamic, C> where\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":320963,"byte_end":321083,"line_start":711,"line_end":711,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321088,"byte_end":321091,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321096,"byte_end":321188,"line_start":713,"line_end":713,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321193,"byte_end":321257,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321262,"byte_end":321309,"line_start":715,"line_end":715,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321963,"byte_end":321982,"line_start":729,"line_end":729,"column_start":12,"column_end":31},"name":"resize_horizontally","qualname":"<Matrix<N, R, C, S>>::resize_horizontally","value":"pub fn resize_horizontally(Self, usize, N) -> MatrixMN<N, R, Dynamic> where\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321591,"byte_end":321719,"line_start":724,"line_end":724,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321724,"byte_end":321727,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321732,"byte_end":321824,"line_start":726,"line_end":726,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321829,"byte_end":321899,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":321904,"byte_end":321951,"line_start":728,"line_end":728,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322536,"byte_end":322548,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"fixed_resize","qualname":"<Matrix<N, R, C, S>>::fixed_resize","value":"pub fn fixed_resize<R2: DimName, C2: DimName>(Self, N) -> MatrixMN<N, R2, C2>\nwhere DefaultAllocator: Reallocator<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322235,"byte_end":322324,"line_start":737,"line_end":737,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322329,"byte_end":322332,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322337,"byte_end":322429,"line_start":739,"line_end":739,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322434,"byte_end":322524,"line_start":740,"line_end":740,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":323050,"byte_end":323064,"line_start":753,"line_end":753,"column_start":12,"column_end":26},"name":"resize_generic","qualname":"<Matrix<N, R, C, S>>::resize_generic","value":"pub fn resize_generic<R2: Dim, C2: Dim>(Self, R2, C2, N)\n-> MatrixMN<N, R2, C2> where DefaultAllocator: Reallocator<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","sig":null,"attributes":[{"value":"/ Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322752,"byte_end":322824,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322829,"byte_end":322832,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322837,"byte_end":322929,"line_start":750,"line_end":750,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":322934,"byte_end":323024,"line_start":751,"line_end":751,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":323029,"byte_end":323038,"line_start":752,"line_end":752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325425,"byte_end":325435,"line_start":824,"line_end":824,"column_start":12,"column_end":22},"name":"resize_mut","qualname":"<DMatrix<N>>::resize_mut","value":"pub fn resize_mut(&mut Self, usize, usize, N) where\nDefaultAllocator: Reallocator<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix in-place.","sig":null,"attributes":[{"value":"/ Resizes this matrix in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325100,"byte_end":325133,"line_start":818,"line_end":818,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325138,"byte_end":325141,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325146,"byte_end":325238,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325243,"byte_end":325333,"line_start":821,"line_end":821,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325338,"byte_end":325341,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned fully-dynamic matrices, i.e., `DMatrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325346,"byte_end":325413,"line_start":823,"line_end":823,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326364,"byte_end":326385,"line_start":847,"line_end":847,"column_start":12,"column_end":33},"name":"resize_vertically_mut","qualname":"<MatrixMN<N, Dynamic, C>>::resize_vertically_mut","value":"pub fn resize_vertically_mut(&mut Self, usize, N) where\nDefaultAllocator: Reallocator<N, Dynamic, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of rows of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of rows of this matrix in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325967,"byte_end":326022,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326027,"byte_end":326030,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326035,"byte_end":326127,"line_start":842,"line_end":842,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326132,"byte_end":326196,"line_start":843,"line_end":843,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326201,"byte_end":326204,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of rows (for example, `DVector`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326209,"byte_end":326300,"line_start":845,"line_end":845,"column_start":5,"column_end":96}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326305,"byte_end":326352,"line_start":846,"line_end":846,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327347,"byte_end":327370,"line_start":871,"line_end":871,"column_start":12,"column_end":35},"name":"resize_horizontally_mut","qualname":"<MatrixMN<N, R, Dynamic>>::resize_horizontally_mut","value":"pub fn resize_horizontally_mut(&mut Self, usize, N) where\nDefaultAllocator: Reallocator<N, R, Dynamic, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of column of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of column of this matrix in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326939,"byte_end":326996,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327001,"byte_end":327004,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327009,"byte_end":327101,"line_start":866,"line_end":866,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327106,"byte_end":327176,"line_start":867,"line_end":867,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327181,"byte_end":327184,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of columns (for example, `DVector`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327189,"byte_end":327283,"line_start":869,"line_end":869,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":327288,"byte_end":327335,"line_start":870,"line_end":870,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2637},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indexing","qualname":"::base::indexing","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":21808},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2659},{"krate":0,"index":2665},{"krate":0,"index":2671},{"krate":0,"index":2677},{"krate":0,"index":2684},{"krate":0,"index":2690},{"krate":0,"index":2696},{"krate":0,"index":2702},{"krate":0,"index":2708},{"krate":0,"index":2719},{"krate":0,"index":2729},{"krate":0,"index":2752},{"krate":0,"index":2761},{"krate":0,"index":2769},{"krate":0,"index":2778},{"krate":0,"index":15774},{"krate":0,"index":15784},{"krate":0,"index":15793},{"krate":0,"index":15803},{"krate":0,"index":15812},{"krate":0,"index":15822},{"krate":0,"index":15831},{"krate":0,"index":15841},{"krate":0,"index":15850},{"krate":0,"index":15860},{"krate":0,"index":15869},{"krate":0,"index":15879},{"krate":0,"index":15888},{"krate":0,"index":15899},{"krate":0,"index":15909},{"krate":0,"index":15919},{"krate":0,"index":15928},{"krate":0,"index":15938},{"krate":0,"index":15947},{"krate":0,"index":15957},{"krate":0,"index":15966},{"krate":0,"index":15976},{"krate":0,"index":15985},{"krate":0,"index":15995},{"krate":0,"index":16004},{"krate":0,"index":16014},{"krate":0,"index":16023},{"krate":0,"index":16033},{"krate":0,"index":16042},{"krate":0,"index":16053},{"krate":0,"index":16063},{"krate":0,"index":16073},{"krate":0,"index":16082},{"krate":0,"index":16092},{"krate":0,"index":16101},{"krate":0,"index":16111},{"krate":0,"index":16120},{"krate":0,"index":16130},{"krate":0,"index":16139},{"krate":0,"index":16149},{"krate":0,"index":16158},{"krate":0,"index":16168},{"krate":0,"index":16177},{"krate":0,"index":16187},{"krate":0,"index":16196},{"krate":0,"index":16207},{"krate":0,"index":16217},{"krate":0,"index":16227},{"krate":0,"index":16236},{"krate":0,"index":16246},{"krate":0,"index":16255},{"krate":0,"index":16265},{"krate":0,"index":16274},{"krate":0,"index":16284},{"krate":0,"index":16293},{"krate":0,"index":16303},{"krate":0,"index":16312},{"krate":0,"index":16322},{"krate":0,"index":16331},{"krate":0,"index":16341},{"krate":0,"index":16350},{"krate":0,"index":16361},{"krate":0,"index":16371},{"krate":0,"index":16381},{"krate":0,"index":16390},{"krate":0,"index":16400},{"krate":0,"index":16409},{"krate":0,"index":16419},{"krate":0,"index":16428},{"krate":0,"index":16438},{"krate":0,"index":16447},{"krate":0,"index":16457},{"krate":0,"index":16466},{"krate":0,"index":16476},{"krate":0,"index":16485},{"krate":0,"index":16495},{"krate":0,"index":16504},{"krate":0,"index":16515},{"krate":0,"index":16525},{"krate":0,"index":16535},{"krate":0,"index":16544},{"krate":0,"index":16554},{"krate":0,"index":16563},{"krate":0,"index":16573},{"krate":0,"index":16582},{"krate":0,"index":16592},{"krate":0,"index":16601},{"krate":0,"index":16611},{"krate":0,"index":16620},{"krate":0,"index":16630},{"krate":0,"index":16639},{"krate":0,"index":16649},{"krate":0,"index":16658},{"krate":0,"index":16669},{"krate":0,"index":16679},{"krate":0,"index":16689},{"krate":0,"index":16698},{"krate":0,"index":16708},{"krate":0,"index":16717},{"krate":0,"index":16727},{"krate":0,"index":16736},{"krate":0,"index":16746},{"krate":0,"index":16755},{"krate":0,"index":16765},{"krate":0,"index":16774},{"krate":0,"index":16784},{"krate":0,"index":16793},{"krate":0,"index":16803},{"krate":0,"index":16812},{"krate":0,"index":16823},{"krate":0,"index":16833},{"krate":0,"index":16844},{"krate":0,"index":16854},{"krate":0,"index":16865},{"krate":0,"index":16875},{"krate":0,"index":16886},{"krate":0,"index":16896},{"krate":0,"index":16907},{"krate":0,"index":16917},{"krate":0,"index":16928},{"krate":0,"index":16938},{"krate":0,"index":16949},{"krate":0,"index":16959},{"krate":0,"index":16970},{"krate":0,"index":16980},{"krate":0,"index":16992}],"decl_id":null,"docs":" Indexing\n","sig":null,"attributes":[{"value":"/ Indexing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":334144,"byte_end":334156,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":2655},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":334455,"byte_end":334461,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::base::indexing::DimRange::Length","value":"type Length: Dim;","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" The number of elements indexed by this range.\n","sig":null,"attributes":[{"value":"/ The number of elements indexed by this range.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":334396,"byte_end":334445,"line_start":12,"line_end":12,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":2708},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342104,"byte_end":342115,"line_start":326,"line_end":326,"column_start":11,"column_end":22},"name":"MatrixIndex","qualname":"::base::indexing::MatrixIndex","value":"MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342045,"byte_end":342093,"line_start":325,"line_end":325,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342231,"byte_end":342237,"line_start":328,"line_end":328,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::indexing::MatrixIndex::Output","value":"type Output: 'a;","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342181,"byte_end":342221,"line_start":327,"line_end":327,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342340,"byte_end":342352,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"contained_by","qualname":"::base::indexing::MatrixIndex::contained_by","value":"pub fn contained_by(&Self, &Matrix<N, R, C, S>) -> bool","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces true if the given matrix is contained by this index.\n","sig":null,"attributes":[{"value":"/ Produces true if the given matrix is contained by this index.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342248,"byte_end":342313,"line_start":330,"line_end":330,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342551,"byte_end":342554,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"get","qualname":"::base::indexing::MatrixIndex::get","value":"pub fn get(Self, &'a Matrix<N, R, C, S>) -> Option<Self::Output>","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds,\n or `None`, otherwise.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342403,"byte_end":342472,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ or `None`, otherwise.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342477,"byte_end":342502,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342526,"byte_end":342543,"line_start":337,"line_end":337,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342908,"byte_end":342921,"line_start":349,"line_end":349,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::indexing::MatrixIndex::get_unchecked","value":"pub unsafe fn get_unchecked(Self, &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds\n without any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342769,"byte_end":342837,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ without any bounds checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342842,"byte_end":342874,"line_start":347,"line_end":347,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343123,"byte_end":343128,"line_start":355,"line_end":355,"column_start":8,"column_end":13},"name":"index","qualname":"::base::indexing::MatrixIndex::index","value":"pub fn index(Self, &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces a shared view to the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a shared view to the data at this location, or panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342982,"byte_end":343048,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/ if out of bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343053,"byte_end":343074,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343098,"byte_end":343115,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2719},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343309,"byte_end":343323,"line_start":361,"line_end":361,"column_start":11,"column_end":25},"name":"MatrixIndexMut","qualname":"::base::indexing::MatrixIndexMut","value":"MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>: MatrixIndex","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343250,"byte_end":343298,"line_start":360,"line_end":360,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2725},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343468,"byte_end":343477,"line_start":365,"line_end":365,"column_start":10,"column_end":19},"name":"OutputMut","qualname":"::base::indexing::MatrixIndexMut::OutputMut","value":"type OutputMut: 'a;","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343418,"byte_end":343458,"line_start":364,"line_end":364,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343627,"byte_end":343644,"line_start":370,"line_end":370,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::indexing::MatrixIndexMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(Self, &'a mut Matrix<N, R, C, S>)\n-> Self::OutputMut","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, without\n performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, without","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343488,"byte_end":343553,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ performing any bounds checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343558,"byte_end":343593,"line_start":368,"line_end":368,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343840,"byte_end":343847,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::base::indexing::MatrixIndexMut::get_mut","value":"pub fn get_mut(Self, &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut>","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, if in\n bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, if in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343712,"byte_end":343775,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343780,"byte_end":343791,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343815,"byte_end":343832,"line_start":375,"line_end":375,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":344215,"byte_end":344224,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::base::indexing::MatrixIndexMut::index_mut","value":"pub fn index_mut(Self, &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, or panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":344073,"byte_end":344140,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ if out of bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":344145,"byte_end":344166,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":344190,"byte_end":344207,"line_start":387,"line_end":387,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347181,"byte_end":347184,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"get","qualname":"<Matrix<N, R, C, S>>::get","value":"pub fn get<'a, I>(&'a Self, I) -> Option<I::Output> where I: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347055,"byte_end":347109,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347114,"byte_end":347155,"line_start":494,"line_end":494,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347160,"byte_end":347169,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347458,"byte_end":347465,"line_start":506,"line_end":506,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Matrix<N, R, C, S>>::get_mut","value":"pub fn get_mut<'a, I>(&'a mut Self, I) -> Option<I::OutputMut> where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347324,"byte_end":347386,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347391,"byte_end":347432,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347437,"byte_end":347446,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347777,"byte_end":347782,"line_start":517,"line_end":517,"column_start":12,"column_end":17},"name":"index","qualname":"<Matrix<N, R, C, S>>::index","value":"pub fn index<'a, I>(&'a Self, I) -> I::Output where I: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347651,"byte_end":347705,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347710,"byte_end":347751,"line_start":515,"line_end":515,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347756,"byte_end":347765,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348050,"byte_end":348059,"line_start":527,"line_end":527,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<Matrix<N, R, C, S>>::index_mut","value":"pub fn index_mut<'a, I>(&'a mut Self, I) -> I::OutputMut where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347916,"byte_end":347978,"line_start":524,"line_end":524,"column_start":5,"column_end":67}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347983,"byte_end":348024,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348029,"byte_end":348038,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348366,"byte_end":348379,"line_start":538,"line_end":538,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Matrix<N, R, C, S>>::get_unchecked","value":"pub unsafe fn get_unchecked<'a, I>(&'a Self, I) -> I::Output where\nI: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, without doing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348239,"byte_end":348304,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/ any bounds checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348309,"byte_end":348333,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348338,"byte_end":348347,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348655,"byte_end":348672,"line_start":548,"line_end":548,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Matrix<N, R, C, S>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut<'a, I>(&'a mut Self, I) -> I::OutputMut where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable view of the data at the given index, without doing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348521,"byte_end":348593,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ any bounds checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348598,"byte_end":348622,"line_start":546,"line_end":546,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":348627,"byte_end":348636,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2851},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357108,"byte_end":357120,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"SquareMatrix","qualname":"::base::matrix::SquareMatrix","value":"Matrix<N, D, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A square matrix.\n","sig":null,"attributes":[{"value":"/ A square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357078,"byte_end":357098,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2855},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357205,"byte_end":357211,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Vector","qualname":"::base::matrix::Vector","value":"Matrix<N, D, U1, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one column and `D` rows.\n","sig":null,"attributes":[{"value":"/ A matrix with one column and `D` rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357153,"byte_end":357195,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":2859},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357298,"byte_end":357307,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"name":"RowVector","qualname":"::base::matrix::RowVector","value":"Matrix<N, U1, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one row and `D` columns .\n","sig":null,"attributes":[{"value":"/ A matrix with one row and `D` columns .","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357245,"byte_end":357288,"line_start":40,"line_end":40,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2863},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357394,"byte_end":357403,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"MatrixSum","qualname":"::base::matrix::MatrixSum","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357341,"byte_end":357384,"line_start":43,"line_end":43,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2869},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357571,"byte_end":357580,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"VectorSum","qualname":"::base::matrix::VectorSum","value":"Matrix<N, SameShapeR<R1, R2>, U1, SameShapeStorage<N, R1, U1, R2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357518,"byte_end":357561,"line_start":47,"line_end":47,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2873},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357734,"byte_end":357745,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"MatrixCross","qualname":"::base::matrix::MatrixCross","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix cross product.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix cross product.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357671,"byte_end":357724,"line_start":51,"line_end":51,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":17003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359265,"byte_end":359271,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::base::matrix::Matrix","value":"Matrix { data }","parent":null,"children":[{"krate":0,"index":17008},{"krate":0,"index":17009}],"decl_id":null,"docs":" The most generic column-major matrix (and vector) type.","sig":null,"attributes":[{"value":"/ The most generic column-major matrix (and vector) type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357860,"byte_end":357919,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357920,"byte_end":357923,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ It combines four type parameters:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357924,"byte_end":357961,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ - `N`: for the matrix components scalar type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":357962,"byte_end":358011,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/ - `R`: for the matrix number of rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358012,"byte_end":358053,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/ - `C`: for the matrix number of columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358054,"byte_end":358098,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ - `S`: for the matrix data storage, i.e., the buffer that actually contains the matrix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358099,"byte_end":358189,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358190,"byte_end":358205,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358206,"byte_end":358209,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The matrix dimensions parameters `R` and `C` can either be:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358210,"byte_end":358273,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ - type-level unsigned integer constants (e.g. `U1`, `U124`) from the `nalgebra::` root module.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358274,"byte_end":358372,"line_start":65,"line_end":65,"column_start":1,"column_end":99}},{"value":"/ All numbers from 0 to 127 are defined that way.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358373,"byte_end":358425,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ - type-level unsigned integer constants (e.g. `U1024`, `U10000`) from the `typenum::` crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358426,"byte_end":358522,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"/ Using those, you will not get error messages as nice as for numbers smaller than 128 defined on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358523,"byte_end":358622,"line_start":68,"line_end":68,"column_start":1,"column_end":100}},{"value":"/ the `nalgebra::` module.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358623,"byte_end":358651,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/ - the special value `Dynamic` from the `nalgebra::` root module. This indicates that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358652,"byte_end":358744,"line_start":70,"line_end":70,"column_start":1,"column_end":93}},{"value":"/ specified dimension is not known at compile-time. Note that this will generally imply that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358745,"byte_end":358843,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"/ matrix data storage `S` performs a dynamic allocation and contains extra metadata for the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358844,"byte_end":358937,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/ matrix shape.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358938,"byte_end":358955,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358956,"byte_end":358959,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Note that mixing `Dynamic` with type-level unsigned integers is allowed. Actually, a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":358960,"byte_end":359048,"line_start":75,"line_end":75,"column_start":1,"column_end":89}},{"value":"/ dynamically-sized column vector should be represented as a `Matrix<N, Dynamic, U1, S>` (given","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359049,"byte_end":359146,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ some concrete types for `N` and a compatible data storage type `S`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359147,"byte_end":359219,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359220,"byte_end":359230,"line_start":78,"line_end":78,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17008},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359451,"byte_end":359455,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"data","qualname":"::base::matrix::Matrix::data","value":"S","parent":{"krate":0,"index":17003},"children":[],"decl_id":null,"docs":" The data storage that contains all the matrix components and informations about its number\n of rows and column (if needed).\n","sig":null,"attributes":[{"value":"/ The data storage that contains all the matrix components and informations about its number","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359308,"byte_end":359402,"line_start":81,"line_end":81,"column_start":5,"column_end":99}},{"value":"/ of rows and column (if needed).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359407,"byte_end":359442,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362042,"byte_end":362072,"line_start":192,"line_end":192,"column_start":19,"column_end":49},"name":"from_data_statically_unchecked","qualname":"<Matrix<N, R, C, S>>::from_data_statically_unchecked","value":"pub unsafe fn from_data_statically_unchecked(S) -> Matrix<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data without statically checking that the matrix\n dimension matches the storage dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data without statically checking that the matrix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":361872,"byte_end":361960,"line_start":189,"line_end":189,"column_start":5,"column_end":93}},{"value":"/ dimension matches the storage dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":361965,"byte_end":362009,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362014,"byte_end":362023,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362345,"byte_end":362354,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Matrix<N, R, C, S>>::from_data","value":"pub fn from_data(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362274,"byte_end":362319,"line_start":201,"line_end":201,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362324,"byte_end":362333,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362684,"byte_end":362687,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"len","qualname":"<Matrix<N, R, C, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of elements of this matrix.","sig":null,"attributes":[{"value":"/ The total number of elements of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362447,"byte_end":362495,"line_start":207,"line_end":207,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362500,"byte_end":362503,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362508,"byte_end":362523,"line_start":209,"line_end":209,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362528,"byte_end":362531,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362536,"byte_end":362543,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362548,"byte_end":362578,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362583,"byte_end":362623,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.len(), 12);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362628,"byte_end":362658,"line_start":214,"line_end":214,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362663,"byte_end":362672,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363064,"byte_end":363069,"line_start":230,"line_end":230,"column_start":12,"column_end":17},"name":"shape","qualname":"<Matrix<N, R, C, S>>::shape","value":"pub fn shape(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The shape of this matrix returned as the tuple (number of rows, number of columns).","sig":null,"attributes":[{"value":"/ The shape of this matrix returned as the tuple (number of rows, number of columns).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362782,"byte_end":362869,"line_start":221,"line_end":221,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362874,"byte_end":362877,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362882,"byte_end":362897,"line_start":223,"line_end":223,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362902,"byte_end":362905,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362910,"byte_end":362917,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362922,"byte_end":362952,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362957,"byte_end":362997,"line_start":227,"line_end":227,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.shape(), (3, 4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363002,"byte_end":363038,"line_start":228,"line_end":228,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363043,"byte_end":363052,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363423,"byte_end":363428,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"nrows","qualname":"<Matrix<N, R, C, S>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this matrix.","sig":null,"attributes":[{"value":"/ The number of rows of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363195,"byte_end":363233,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363238,"byte_end":363241,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363246,"byte_end":363261,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363266,"byte_end":363269,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363274,"byte_end":363281,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363286,"byte_end":363316,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363321,"byte_end":363361,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.nrows(), 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363366,"byte_end":363397,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363402,"byte_end":363411,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363712,"byte_end":363717,"line_start":257,"line_end":257,"column_start":12,"column_end":17},"name":"ncols","qualname":"<Matrix<N, R, C, S>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this matrix.","sig":null,"attributes":[{"value":"/ The number of columns of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363481,"byte_end":363522,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363527,"byte_end":363530,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363535,"byte_end":363550,"line_start":250,"line_end":250,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363555,"byte_end":363558,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363563,"byte_end":363570,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363575,"byte_end":363605,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363610,"byte_end":363650,"line_start":254,"line_end":254,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.ncols(), 4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363655,"byte_end":363686,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363691,"byte_end":363700,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364200,"byte_end":364207,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"strides","qualname":"<Matrix<N, R, C, S>>::strides","value":"pub fn strides(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The strides (row stride, column stride) of this matrix.","sig":null,"attributes":[{"value":"/ The strides (row stride, column stride) of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363770,"byte_end":363829,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363834,"byte_end":363837,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363842,"byte_end":363857,"line_start":263,"line_end":263,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363862,"byte_end":363865,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363870,"byte_end":363877,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::DMatrix;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363882,"byte_end":363910,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ let mat = DMatrix::<f32>::zeros(10, 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363915,"byte_end":363959,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ let slice = mat.slice_with_steps((0, 0), (5, 3), (1, 2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":363964,"byte_end":364025,"line_start":268,"line_end":268,"column_start":5,"column_end":66}},{"value":"/ // The column strides is the number of steps (here 2) multiplied by the corresponding dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364030,"byte_end":364130,"line_start":269,"line_end":269,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(mat.strides(), (1, 10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364135,"byte_end":364174,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364179,"byte_end":364188,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364943,"byte_end":364947,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"iter","qualname":"<Matrix<N, R, C, S>>::iter","value":"pub fn iter(&Self) -> MatrixIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this matrix coordinates in column-major order.","sig":null,"attributes":[{"value":"/ Iterates through this matrix coordinates in column-major order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364335,"byte_end":364402,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364407,"byte_end":364410,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364415,"byte_end":364430,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364435,"byte_end":364438,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364443,"byte_end":364450,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364455,"byte_end":364485,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, 12, 13,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364490,"byte_end":364530,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/                          21, 22, 23);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364535,"byte_end":364576,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/ let mut it = mat.iter();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364581,"byte_end":364609,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(*it.next().unwrap(), 11);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364614,"byte_end":364654,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 21);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364659,"byte_end":364699,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 12);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364704,"byte_end":364744,"line_start":288,"line_end":288,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 22);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364749,"byte_end":364789,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 13);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364794,"byte_end":364834,"line_start":290,"line_end":290,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 23);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364839,"byte_end":364879,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/ assert!(it.next().is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364884,"byte_end":364917,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":364922,"byte_end":364931,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365373,"byte_end":365381,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Matrix<N, R, C, S>>::row_iter","value":"pub fn row_iter(&Self) -> RowIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the rows of this matrix.","sig":null,"attributes":[{"value":"/ Iterate through the rows of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365030,"byte_end":365074,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365079,"byte_end":365082,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365087,"byte_end":365100,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365105,"byte_end":365112,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365117,"byte_end":365147,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365152,"byte_end":365191,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365196,"byte_end":365236,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/ for (i, row) in a.row_iter().enumerate() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365241,"byte_end":365287,"line_start":305,"line_end":305,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(row, a.row(i))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365292,"byte_end":365325,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365330,"byte_end":365335,"line_start":307,"line_end":307,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365340,"byte_end":365347,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365352,"byte_end":365361,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365802,"byte_end":365813,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Matrix<N, R, C, S>>::column_iter","value":"pub fn column_iter(&Self) -> ColumnIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the columns of this matrix.\n # Example\n ```\n # use nalgebra::Matrix2x3;\n let mut a = Matrix2x3::new(1, 2, 3,\n                            4, 5, 6);\n for (i, column) in a.column_iter().enumerate() {\n     assert_eq!(column, a.column(i))\n }\n ```\n","sig":null,"attributes":[{"value":"/ Iterate through the columns of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365452,"byte_end":365499,"line_start":314,"line_end":314,"column_start":5,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365504,"byte_end":365517,"line_start":315,"line_end":315,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365522,"byte_end":365529,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365534,"byte_end":365564,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365569,"byte_end":365608,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365613,"byte_end":365653,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/ for (i, column) in a.column_iter().enumerate() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365658,"byte_end":365710,"line_start":320,"line_end":320,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(column, a.column(i))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365715,"byte_end":365754,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365759,"byte_end":365764,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365769,"byte_end":365776,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365781,"byte_end":365790,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366282,"byte_end":366304,"line_start":342,"line_end":342,"column_start":12,"column_end":34},"name":"vector_to_matrix_index","qualname":"<Matrix<N, R, C, S>>::vector_to_matrix_index","value":"pub fn vector_to_matrix_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the row and column coordinates of the i-th element of this matrix seen as a\n vector.","sig":null,"attributes":[{"value":"/ Computes the row and column coordinates of the i-th element of this matrix seen as a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365890,"byte_end":365978,"line_start":329,"line_end":329,"column_start":5,"column_end":93}},{"value":"/ vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365983,"byte_end":365994,"line_start":330,"line_end":330,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":365999,"byte_end":366002,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366007,"byte_end":366020,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366025,"byte_end":366032,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366037,"byte_end":366065,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366070,"byte_end":366100,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366105,"byte_end":366136,"line_start":336,"line_end":336,"column_start":5,"column_end":36}},{"value":"/ let i = m.vector_to_matrix_index(3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366141,"byte_end":366181,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(i, (1, 1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366186,"byte_end":366212,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(m[i], m[3]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366217,"byte_end":366244,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366249,"byte_end":366256,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366261,"byte_end":366270,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367076,"byte_end":367082,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Matrix<N, R, C, S>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const N","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366667,"byte_end":366716,"line_start":356,"line_end":356,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366721,"byte_end":366724,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366729,"byte_end":366801,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366806,"byte_end":366823,"line_start":359,"line_end":359,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366828,"byte_end":366831,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366836,"byte_end":366849,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366854,"byte_end":366861,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366866,"byte_end":366894,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366899,"byte_end":366929,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366934,"byte_end":366965,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/ let ptr = m.as_ptr();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":366970,"byte_end":366995,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(unsafe { *ptr }, m[0]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367000,"byte_end":367038,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367043,"byte_end":367050,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367055,"byte_end":367064,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367312,"byte_end":367323,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"relative_eq","qualname":"<Matrix<N, R, C, S>>::relative_eq","value":"pub fn relative_eq<R2, C2,\n                   SB>(&Self, &Matrix<N, R2, C2, SB>, N::Epsilon, N::Epsilon)\n-> bool where N: RelativeEq, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nN::Epsilon: Copy, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are equal up to a given epsilon.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are equal up to a given epsilon.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367139,"byte_end":367206,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367211,"byte_end":367214,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ See `relative_eq` from the `RelativeEq` trait for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367219,"byte_end":367286,"line_start":376,"line_end":376,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367291,"byte_end":367300,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367926,"byte_end":367928,"line_start":400,"line_end":400,"column_start":12,"column_end":14},"name":"eq","qualname":"<Matrix<N, R, C, S>>::eq","value":"pub fn eq<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>) -> bool where\nN: PartialEq, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are exactly equal.\n","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are exactly equal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367847,"byte_end":367900,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":367905,"byte_end":367914,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368366,"byte_end":368376,"line_start":414,"line_end":414,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Matrix<N, R, C, S>>::into_owned","value":"pub fn into_owned(Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368290,"byte_end":368340,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368345,"byte_end":368354,"line_start":413,"line_end":413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368784,"byte_end":368798,"line_start":426,"line_end":426,"column_start":12,"column_end":26},"name":"into_owned_sum","qualname":"<Matrix<N, R, C, S>>::into_owned_sum","value":"pub fn into_owned_sum<R2, C2>(Self) -> MatrixSum<N, R, C, R2, C2> where\nR2: Dim, C2: Dim, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368612,"byte_end":368703,"line_start":423,"line_end":423,"column_start":5,"column_end":96}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368708,"byte_end":368758,"line_start":424,"line_end":424,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":368763,"byte_end":368772,"line_start":425,"line_end":425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369615,"byte_end":369626,"line_start":450,"line_end":450,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Matrix<N, R, C, S>>::clone_owned","value":"pub fn clone_owned(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix to one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this matrix to one that owns its data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369540,"byte_end":369589,"line_start":448,"line_end":448,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369594,"byte_end":369603,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369952,"byte_end":369967,"line_start":460,"line_end":460,"column_start":12,"column_end":27},"name":"clone_owned_sum","qualname":"<Matrix<N, R, C, S>>::clone_owned_sum","value":"pub fn clone_owned_sum<R2, C2>(&Self) -> MatrixSum<N, R, C, R2, C2> where\nR2: Dim, C2: Dim, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Clones this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369779,"byte_end":369871,"line_start":457,"line_end":457,"column_start":5,"column_end":97}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369876,"byte_end":369926,"line_start":458,"line_end":458,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":369931,"byte_end":369940,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":370897,"byte_end":370900,"line_start":488,"line_end":488,"column_start":12,"column_end":15},"name":"map","qualname":"<Matrix<N, R, C, S>>::map","value":"pub fn map<N2: Scalar, F: FnMut(N) -> N2>(&Self, F) -> MatrixMN<N2, R, C>\nwhere DefaultAllocator: Allocator<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":370790,"byte_end":370871,"line_start":486,"line_end":486,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":370876,"byte_end":370885,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":372048,"byte_end":372057,"line_start":516,"line_end":516,"column_start":12,"column_end":21},"name":"fold_with","qualname":"<Matrix<N, R, C, S>>::fold_with","value":"pub fn fold_with<N2, impl FnOnce(Option<&N>) -> N2: FnOnce(Option<&N>) -> N2,\n                 impl FnMut(N2, &N) -> N2: FnMut(N2, &N) ->\n                 N2>(&Self, impl FnOnce(Option<&N>) -> N2,\n                     impl FnMut(N2, &N) -> N2) -> N2","parent":null,"children":[],"decl_id":null,"docs":" Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","sig":null,"attributes":[{"value":"/ Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371471,"byte_end":371558,"line_start":508,"line_end":508,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371563,"byte_end":371566,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ The initialization closure is given the first component of this matrix:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371571,"byte_end":371646,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ - If the matrix has no component (0 rows or 0 columns) then `init_f` is called with `None`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371651,"byte_end":371745,"line_start":511,"line_end":511,"column_start":5,"column_end":99}},{"value":"/ and its return value is the value returned by this method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371750,"byte_end":371812,"line_start":512,"line_end":512,"column_start":5,"column_end":67}},{"value":"/ - If the matrix has has least one component, then `init_f` is called with the first component","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371817,"byte_end":371914,"line_start":513,"line_end":513,"column_start":5,"column_end":102}},{"value":"/ to compute the initial value. Folding then continues on all the remaining components of the matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":371919,"byte_end":372022,"line_start":514,"line_end":514,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":372027,"byte_end":372036,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":372487,"byte_end":372504,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"map_with_location","qualname":"<Matrix<N, R, C, S>>::map_with_location","value":"pub fn map_with_location<N2: Scalar, F: FnMut(usize, usize, N) ->\n                         N2>(&Self, F) -> MatrixMN<N2, R, C> where\nDefaultAllocator: Allocator<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,\n `f` also gets passed the row and column index, i.e. `f(row, col, value)`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":372284,"byte_end":372379,"line_start":526,"line_end":526,"column_start":5,"column_end":100}},{"value":"/ `f` also gets passed the row and column index, i.e. `f(row, col, value)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":372384,"byte_end":372461,"line_start":527,"line_end":527,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":372466,"byte_end":372475,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":373246,"byte_end":373253,"line_start":555,"line_end":555,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<Matrix<N, R, C, S>>::zip_map","value":"pub fn zip_map<N2, N3, S2, F>(&Self, &Matrix<N2, R, C, S2>, F)\n-> MatrixMN<N3, R, C> where N2: Scalar, N3: Scalar, S2: Storage<N2, R, C>,\nF: FnMut(N, N2) -> N3, DefaultAllocator: Allocator<N3, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `rhs`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":373118,"byte_end":373205,"line_start":552,"line_end":552,"column_start":5,"column_end":92}},{"value":"/ `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":373210,"byte_end":373220,"line_start":553,"line_end":553,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":373225,"byte_end":373234,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":374322,"byte_end":374333,"line_start":589,"line_end":589,"column_start":12,"column_end":23},"name":"zip_zip_map","qualname":"<Matrix<N, R, C, S>>::zip_zip_map","value":"pub fn zip_zip_map<N2, N3, N4, S2, S3,\n                   F>(&Self, &Matrix<N2, R, C, S2>, &Matrix<N3, R, C, S3>, F)\n-> MatrixMN<N4, R, C> where N2: Scalar, N3: Scalar, N4: Scalar,\nS2: Storage<N2, R, C>, S3: Storage<N3, R, C>, F: FnMut(N, N2, N3) -> N4,\nDefaultAllocator: Allocator<N4, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `b`, and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":374187,"byte_end":374274,"line_start":586,"line_end":586,"column_start":5,"column_end":92}},{"value":"/ `b`, and `c`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":374279,"byte_end":374296,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":374301,"byte_end":374310,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":375708,"byte_end":375712,"line_start":635,"line_end":635,"column_start":12,"column_end":16},"name":"fold","qualname":"<Matrix<N, R, C, S>>::fold","value":"pub fn fold<Acc, impl FnMut(Acc, N) -> Acc: FnMut(Acc, N) ->\n            Acc>(&Self, Acc, impl FnMut(Acc, N) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each entry of `self`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each entry of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":375633,"byte_end":375682,"line_start":633,"line_end":633,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":375687,"byte_end":375696,"line_start":634,"line_end":634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":376233,"byte_end":376241,"line_start":654,"line_end":654,"column_start":12,"column_end":20},"name":"zip_fold","qualname":"<Matrix<N, R, C, S>>::zip_fold","value":"pub fn zip_fold<N2, R2, C2, S2, Acc,\n                impl FnMut(Acc, N, N2) -> Acc: FnMut(Acc, N, N2) ->\n                Acc>(&Self, &Matrix<N2, R2, C2, S2>, Acc,\n                     impl FnMut(Acc, N, N2) -> Acc) -> Acc where N2: Scalar,\nR2: Dim, C2: Dim, S2: Storage<N2, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each pairs of entries from `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each pairs of entries from `self` and `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":376135,"byte_end":376207,"line_start":652,"line_end":652,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":376212,"byte_end":376221,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":377262,"byte_end":377274,"line_start":692,"line_end":692,"column_start":12,"column_end":24},"name":"transpose_to","qualname":"<Matrix<N, R, C, S>>::transpose_to","value":"pub fn transpose_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Transposes `self` and store the result into `out`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":377182,"byte_end":377236,"line_start":690,"line_end":690,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":377241,"byte_end":377250,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378032,"byte_end":378041,"line_start":718,"line_end":718,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Matrix<N, R, C, S>>::transpose","value":"pub fn transpose(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.\n","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":377927,"byte_end":377949,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":377954,"byte_end":377963,"line_start":716,"line_end":716,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":377968,"byte_end":378020,"line_start":717,"line_end":717,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378510,"byte_end":378518,"line_start":736,"line_end":736,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Matrix<N, R, C, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> MatrixIterMut<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix coordinates.\n","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378431,"byte_end":378484,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378489,"byte_end":378498,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378805,"byte_end":378815,"line_start":745,"line_end":745,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Matrix<N, R, C, S>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut N","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the start of the matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378615,"byte_end":378672,"line_start":740,"line_end":740,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378677,"byte_end":378680,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378685,"byte_end":378757,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378762,"byte_end":378779,"line_start":743,"line_end":743,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378784,"byte_end":378793,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379370,"byte_end":379382,"line_start":765,"line_end":765,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Matrix<N, R, C, S>>::row_iter_mut","value":"pub fn row_iter_mut(&mut Self) -> RowIterMut<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix rows.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378878,"byte_end":378924,"line_start":749,"line_end":749,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378929,"byte_end":378932,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378937,"byte_end":378950,"line_start":751,"line_end":751,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378955,"byte_end":378962,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378967,"byte_end":378997,"line_start":753,"line_end":753,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379002,"byte_end":379041,"line_start":754,"line_end":754,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379046,"byte_end":379086,"line_start":755,"line_end":755,"column_start":5,"column_end":45}},{"value":"/ for (i, mut row) in a.row_iter_mut().enumerate() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379091,"byte_end":379145,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/     row *= (i + 1) * 10;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379150,"byte_end":379178,"line_start":757,"line_end":757,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379183,"byte_end":379188,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379193,"byte_end":379196,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 20, 30,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379201,"byte_end":379246,"line_start":760,"line_end":760,"column_start":5,"column_end":50}},{"value":"/                               80, 100, 120);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379251,"byte_end":379299,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379304,"byte_end":379332,"line_start":762,"line_end":762,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379337,"byte_end":379344,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379349,"byte_end":379358,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379961,"byte_end":379976,"line_start":785,"line_end":785,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Matrix<N, R, C, S>>::column_iter_mut","value":"pub fn column_iter_mut(&mut Self) -> ColumnIterMut<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix columns.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379463,"byte_end":379512,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379517,"byte_end":379520,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379525,"byte_end":379538,"line_start":771,"line_end":771,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379543,"byte_end":379550,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379555,"byte_end":379585,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379590,"byte_end":379629,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379634,"byte_end":379674,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ for (i, mut col) in a.column_iter_mut().enumerate() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379679,"byte_end":379736,"line_start":776,"line_end":776,"column_start":5,"column_end":62}},{"value":"/     col *= (i + 1) * 10;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379741,"byte_end":379769,"line_start":777,"line_end":777,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379774,"byte_end":379779,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379784,"byte_end":379787,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 40, 90,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379792,"byte_end":379837,"line_start":780,"line_end":780,"column_start":5,"column_end":50}},{"value":"/                               40, 100, 180);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379842,"byte_end":379890,"line_start":781,"line_end":781,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379895,"byte_end":379923,"line_start":782,"line_end":782,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379928,"byte_end":379935,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":379940,"byte_end":379949,"line_start":784,"line_end":784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380141,"byte_end":380155,"line_start":791,"line_end":791,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Matrix<N, R, C, S>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, (usize, usize), (usize, usize))","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380063,"byte_end":380108,"line_start":789,"line_end":789,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380113,"byte_end":380122,"line_start":790,"line_end":790,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380499,"byte_end":380503,"line_start":799,"line_end":799,"column_start":12,"column_end":16},"name":"swap","qualname":"<Matrix<N, R, C, S>>::swap","value":"pub fn swap(&mut Self, (usize, usize), (usize, usize))","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries.\n","sig":null,"attributes":[{"value":"/ Swaps two entries.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380451,"byte_end":380473,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380478,"byte_end":380487,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381179,"byte_end":381194,"line_start":816,"line_end":816,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Matrix<N, R, C, S>>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[N])","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of a slice. Both must hold the same number of elements.","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of a slice. Both must hold the same number of elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":380966,"byte_end":381060,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381065,"byte_end":381068,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The components of the slice are assumed to be ordered in column-major order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381073,"byte_end":381153,"line_start":814,"line_end":814,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381158,"byte_end":381167,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381795,"byte_end":381804,"line_start":836,"line_end":836,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Matrix<N, R, C, S>>::copy_from","value":"pub fn copy_from<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where R2: Dim,\nC2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of another one. Both must have the same shape.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of another one. Both must have the same shape.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381684,"byte_end":381769,"line_start":834,"line_end":834,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":381774,"byte_end":381783,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":382504,"byte_end":382516,"line_start":859,"line_end":859,"column_start":12,"column_end":24},"name":"tr_copy_from","qualname":"<Matrix<N, R, C, S>>::tr_copy_from","value":"pub fn tr_copy_from<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, C2> +\nSameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of the transpose another one.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of the transpose another one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":382410,"byte_end":382478,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":382483,"byte_end":382492,"line_start":858,"line_end":858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383343,"byte_end":383353,"line_start":884,"line_end":884,"column_start":12,"column_end":22},"name":"apply_into","qualname":"<Matrix<N, R, C, S>>::apply_into","value":"pub fn apply_into<F: FnMut(N) -> N>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` with each of its components replaced by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Returns `self` with each of its components replaced by the result of a closure `f` applied on it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383216,"byte_end":383317,"line_start":882,"line_end":882,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383322,"byte_end":383331,"line_start":883,"line_end":883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383554,"byte_end":383559,"line_start":891,"line_end":891,"column_start":12,"column_end":17},"name":"apply","qualname":"<Matrix<N, R, C, S>>::apply","value":"pub fn apply<F: FnMut(N) -> N>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383445,"byte_end":383528,"line_start":889,"line_end":889,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383533,"byte_end":383542,"line_start":890,"line_end":890,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":384059,"byte_end":384068,"line_start":907,"line_end":907,"column_start":12,"column_end":21},"name":"zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_apply","value":"pub fn zip_apply<N2, R2, C2, S2, impl FnMut(N, N2) -> N: FnMut(N, N2) ->\n                 N>(&mut Self, &Matrix<N2, R2, C2, S2>,\n                    impl FnMut(N, N2) -> N) where N2: Scalar, R2: Dim,\nC2: Dim, S2: Storage<N2, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `rhs`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383892,"byte_end":383986,"line_start":904,"line_end":904,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":383991,"byte_end":384033,"line_start":905,"line_end":905,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":384038,"byte_end":384047,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":385064,"byte_end":385077,"line_start":940,"line_end":940,"column_start":12,"column_end":25},"name":"zip_zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_zip_apply","value":"pub fn zip_zip_apply<N2, R2, C2, S2, N3, R3, C3, S3,\n                     impl FnMut(N, N2, N3) -> N: FnMut(N, N2, N3) ->\n                     N>(&mut Self, &Matrix<N2, R2, C2, S2>,\n                        &Matrix<N3, R3, C3, S3>, impl FnMut(N, N2, N3) -> N)\nwhere N2: Scalar, R2: Dim, C2: Dim, S2: Storage<N2, R2, C2>, N3: Scalar,\nR3: Dim, C3: Dim, S3: Storage<N3, R3, C3>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":384891,"byte_end":384985,"line_start":937,"line_end":937,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `b` and `c`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":384990,"byte_end":385038,"line_start":938,"line_end":938,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":385043,"byte_end":385052,"line_start":939,"line_end":939,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386518,"byte_end":386532,"line_start":986,"line_end":986,"column_start":19,"column_end":33},"name":"vget_unchecked","qualname":"<Vector<N, D, S>>::vget_unchecked","value":"pub unsafe fn vget_unchecked(&Self, usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386399,"byte_end":386485,"line_start":984,"line_end":984,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386490,"byte_end":386499,"line_start":985,"line_end":985,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386913,"byte_end":386931,"line_start":996,"line_end":996,"column_start":19,"column_end":37},"name":"vget_unchecked_mut","qualname":"<Vector<N, D, S>>::vget_unchecked_mut","value":"pub unsafe fn vget_unchecked_mut(&mut Self, usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386786,"byte_end":386880,"line_start":994,"line_end":994,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386885,"byte_end":386894,"line_start":995,"line_end":995,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387328,"byte_end":387336,"line_start":1006,"line_end":1006,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Matrix<N, R, C, S>>::as_slice","value":"pub fn as_slice(&Self) -> &[N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387218,"byte_end":387302,"line_start":1004,"line_end":1004,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387307,"byte_end":387316,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387601,"byte_end":387613,"line_start":1014,"line_end":1014,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Matrix<N, R, C, S>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387483,"byte_end":387575,"line_start":1012,"line_end":1012,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387580,"byte_end":387589,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387815,"byte_end":387828,"line_start":1021,"line_end":1021,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Matrix<N, D, D, S>>::transpose_mut","value":"pub fn transpose_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transposes the square matrix `self` in-place.\n","sig":null,"attributes":[{"value":"/ Transposes the square matrix `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387754,"byte_end":387803,"line_start":1020,"line_end":1020,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":388355,"byte_end":388365,"line_start":1040,"line_end":1040,"column_start":12,"column_end":22},"name":"adjoint_to","qualname":"<Matrix<N, R, C, S>>::adjoint_to","value":"pub fn adjoint_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":388238,"byte_end":388329,"line_start":1038,"line_end":1038,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":388334,"byte_end":388343,"line_start":1039,"line_end":1039,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389153,"byte_end":389160,"line_start":1066,"line_end":1066,"column_start":12,"column_end":19},"name":"adjoint","qualname":"<Matrix<N, R, C, S>>::adjoint","value":"pub fn adjoint(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The adjoint (aka. conjugate-transpose) of `self`.\n","sig":null,"attributes":[{"value":"/ The adjoint (aka. conjugate-transpose) of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389019,"byte_end":389072,"line_start":1063,"line_end":1063,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389077,"byte_end":389086,"line_start":1064,"line_end":1064,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use adjoint_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389091,"byte_end":389141,"line_start":1065,"line_end":1065,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389652,"byte_end":389674,"line_start":1083,"line_end":1083,"column_start":12,"column_end":34},"name":"conjugate_transpose_to","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose_to","value":"pub fn conjugate_transpose_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>)\nwhere R2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Takes the conjugate and transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the conjugate and transposes `self` and store the result into `out`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389488,"byte_end":389566,"line_start":1080,"line_end":1080,"column_start":5,"column_end":83}},{"value":"deprecated(note = \"Renamed `self.adjoint_to(out)`.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389571,"byte_end":389626,"line_start":1081,"line_end":1081,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389631,"byte_end":389640,"line_start":1082,"line_end":1082,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390053,"byte_end":390072,"line_start":1096,"line_end":1096,"column_start":12,"column_end":31},"name":"conjugate_transpose","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose","value":"pub fn conjugate_transpose(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate transposition of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate transposition of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389931,"byte_end":389973,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"Renamed `self.adjoint()`.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":389978,"byte_end":390027,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390032,"byte_end":390041,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390308,"byte_end":390317,"line_start":1106,"line_end":1106,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Matrix<N, R, C, S>>::conjugate","value":"pub fn conjugate(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390197,"byte_end":390225,"line_start":1103,"line_end":1103,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390230,"byte_end":390239,"line_start":1104,"line_end":1104,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390244,"byte_end":390296,"line_start":1105,"line_end":1105,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390615,"byte_end":390622,"line_start":1116,"line_end":1116,"column_start":12,"column_end":19},"name":"unscale","qualname":"<Matrix<N, R, C, S>>::unscale","value":"pub fn unscale(&Self, N::SimdRealField) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390460,"byte_end":390534,"line_start":1113,"line_end":1113,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390539,"byte_end":390548,"line_start":1114,"line_end":1114,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use unscale_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390553,"byte_end":390603,"line_start":1115,"line_end":1115,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390947,"byte_end":390952,"line_start":1126,"line_end":1126,"column_start":12,"column_end":17},"name":"scale","qualname":"<Matrix<N, R, C, S>>::scale","value":"pub fn scale(&Self, N::SimdRealField) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390791,"byte_end":390868,"line_start":1123,"line_end":1123,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390873,"byte_end":390882,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use scale_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":390887,"byte_end":390935,"line_start":1125,"line_end":1125,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391299,"byte_end":391312,"line_start":1137,"line_end":1137,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Matrix<N, R, C, S>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the complex matrix `self` computed in-place.\n","sig":null,"attributes":[{"value":"/ The conjugate of the complex matrix `self` computed in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391208,"byte_end":391273,"line_start":1135,"line_end":1135,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391278,"byte_end":391287,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391480,"byte_end":391491,"line_start":1143,"line_end":1143,"column_start":12,"column_end":23},"name":"unscale_mut","qualname":"<Matrix<N, R, C, S>>::unscale_mut","value":"pub fn unscale_mut(&mut Self, N::SimdRealField)","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391380,"byte_end":391454,"line_start":1141,"line_end":1141,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391459,"byte_end":391468,"line_start":1142,"line_end":1142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391688,"byte_end":391697,"line_start":1149,"line_end":1149,"column_start":12,"column_end":21},"name":"scale_mut","qualname":"<Matrix<N, R, C, S>>::scale_mut","value":"pub fn scale_mut(&mut Self, N::SimdRealField)","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391585,"byte_end":391662,"line_start":1147,"line_end":1147,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391667,"byte_end":391676,"line_start":1148,"line_end":1148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391974,"byte_end":391997,"line_start":1157,"line_end":1157,"column_start":12,"column_end":35},"name":"conjugate_transform_mut","qualname":"<Matrix<N, D, D, S>>::conjugate_transform_mut","value":"pub fn conjugate_transform_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint.\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391870,"byte_end":391901,"line_start":1155,"line_end":1155,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to `self.adjoint_mut()`.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391906,"byte_end":391962,"line_start":1156,"line_end":1156,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":392119,"byte_end":392130,"line_start":1162,"line_end":1162,"column_start":12,"column_end":23},"name":"adjoint_mut","qualname":"<Matrix<N, D, D, S>>::adjoint_mut","value":"pub fn adjoint_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint (aka. conjugate-transpose).\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint (aka. conjugate-transpose).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":392049,"byte_end":392107,"line_start":1161,"line_end":1161,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393061,"byte_end":393069,"line_start":1193,"line_end":1193,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SquareMatrix<N, D, S>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393003,"byte_end":393035,"line_start":1191,"line_end":1191,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393040,"byte_end":393049,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393396,"byte_end":393408,"line_start":1204,"line_end":1204,"column_start":12,"column_end":24},"name":"map_diagonal","qualname":"<SquareMatrix<N, D, S>>::map_diagonal","value":"pub fn map_diagonal<N2: Scalar, impl FnMut(N) -> N2: FnMut(N) ->\n                    N2>(&Self, impl FnMut(N) -> N2) -> VectorN<N2, D> where\nDefaultAllocator: Allocator<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to this matrix's diagonal and returns it.","sig":null,"attributes":[{"value":"/ Apply the given function to this matrix's diagonal and returns it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393197,"byte_end":393267,"line_start":1200,"line_end":1200,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393272,"byte_end":393275,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient version of `self.diagonal().map(f)` since this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393280,"byte_end":393355,"line_start":1202,"line_end":1202,"column_start":5,"column_end":80}},{"value":"/ allocates only once.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393360,"byte_end":393384,"line_start":1203,"line_end":1203,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394077,"byte_end":394082,"line_start":1227,"line_end":1227,"column_start":12,"column_end":17},"name":"trace","qualname":"<SquareMatrix<N, D, S>>::trace","value":"pub fn trace(&Self) -> N where N: Scalar + Zero + ClosedAdd","parent":null,"children":[],"decl_id":null,"docs":" Computes a trace of a square matrix, i.e., the sum of its diagonal elements.\n","sig":null,"attributes":[{"value":"/ Computes a trace of a square matrix, i.e., the sum of its diagonal elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":393971,"byte_end":394051,"line_start":1225,"line_end":1225,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394056,"byte_end":394065,"line_start":1226,"line_end":1226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394665,"byte_end":394679,"line_start":1250,"line_end":1250,"column_start":12,"column_end":26},"name":"symmetric_part","qualname":"<SquareMatrix<N, D, S>>::symmetric_part","value":"pub fn symmetric_part(&Self) -> MatrixMN<N, D, D> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.\n","sig":null,"attributes":[{"value":"/ The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394565,"byte_end":394639,"line_start":1248,"line_end":1248,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394644,"byte_end":394653,"line_start":1249,"line_end":1249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395122,"byte_end":395136,"line_start":1266,"line_end":1266,"column_start":12,"column_end":26},"name":"hermitian_part","qualname":"<SquareMatrix<N, D, S>>::hermitian_part","value":"pub fn hermitian_part(&Self) -> MatrixMN<N, D, D> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.\n","sig":null,"attributes":[{"value":"/ The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395024,"byte_end":395096,"line_start":1264,"line_end":1264,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395101,"byte_end":395110,"line_start":1265,"line_end":1265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395758,"byte_end":395772,"line_start":1288,"line_end":1288,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Matrix<N, D, D, S>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and\n and setting the diagonal element to `1`.\n","sig":null,"attributes":[{"value":"/ Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395589,"byte_end":395683,"line_start":1285,"line_end":1285,"column_start":5,"column_end":99}},{"value":"/ and setting the diagonal element to `1`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395688,"byte_end":395732,"line_start":1286,"line_end":1286,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395737,"byte_end":395746,"line_start":1287,"line_end":1287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396502,"byte_end":396516,"line_start":1308,"line_end":1308,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Vector<N, D, S>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> VectorN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the coordinates in projective space of this vector, i.e., appends a `0` to its\n coordinates.\n","sig":null,"attributes":[{"value":"/ Computes the coordinates in projective space of this vector, i.e., appends a `0` to its","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396364,"byte_end":396455,"line_start":1305,"line_end":1305,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396460,"byte_end":396476,"line_start":1306,"line_end":1306,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396481,"byte_end":396490,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396852,"byte_end":396868,"line_start":1318,"line_end":1318,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Vector<N, D, S>>::from_homogeneous","value":"pub fn from_homogeneous<SB>(Vector<N, DimSum<D, U1>, SB>)\n-> Option<VectorN<N, D>> where SB: Storage<N, DimSum<D, U1>>,\nDefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of\n `self`. Returns `None` if this last component is not zero.\n","sig":null,"attributes":[{"value":"/ Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396664,"byte_end":396759,"line_start":1315,"line_end":1315,"column_start":5,"column_end":100}},{"value":"/ `self`. Returns `None` if this last component is not zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396764,"byte_end":396826,"line_start":1316,"line_end":1316,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396831,"byte_end":396840,"line_start":1317,"line_end":1317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397436,"byte_end":397440,"line_start":1335,"line_end":1335,"column_start":12,"column_end":16},"name":"push","qualname":"<Vector<N, D, S>>::push","value":"pub fn push(&Self, N) -> VectorN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector of higher dimension by appending `element` to the end of `self`.\n","sig":null,"attributes":[{"value":"/ Constructs a new vector of higher dimension by appending `element` to the end of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397318,"byte_end":397410,"line_start":1333,"line_end":1333,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397415,"byte_end":397424,"line_start":1334,"line_end":1334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":406281,"byte_end":406285,"line_start":1635,"line_end":1635,"column_start":12,"column_end":16},"name":"perp","qualname":"<Matrix<N, R, C, S>>::perp","value":"pub fn perp<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where R2: Dim,\nC2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, U2> +\nSameNumberOfColumns<C, U1> + SameNumberOfRows<R2, U2> +\nSameNumberOfColumns<C2, U1>","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.\n","sig":null,"attributes":[{"value":"/ The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":406165,"byte_end":406255,"line_start":1633,"line_end":1633,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":406260,"byte_end":406269,"line_start":1634,"line_end":1634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":407318,"byte_end":407323,"line_start":1664,"line_end":1664,"column_start":12,"column_end":17},"name":"cross","qualname":"<Matrix<N, R, C, S>>::cross","value":"pub fn cross<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixCross<N, R, C, R2, C2> where R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The 3D cross product between two vectors.","sig":null,"attributes":[{"value":"/ The 3D cross product between two vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":407075,"byte_end":407120,"line_start":1659,"line_end":1659,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":407125,"byte_end":407128,"line_start":1660,"line_end":1660,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not 3D vector. In the future, this will be implemented only for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":407133,"byte_end":407223,"line_start":1661,"line_end":1661,"column_start":5,"column_end":95}},{"value":"/ dynamically-sized matrices and statically-sized 3D matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":407228,"byte_end":407292,"line_start":1662,"line_end":1662,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":407297,"byte_end":407306,"line_start":1663,"line_end":1663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410387,"byte_end":410399,"line_start":1738,"line_end":1738,"column_start":12,"column_end":24},"name":"cross_matrix","qualname":"<Vector<N, U3, S>>::cross_matrix","value":"pub fn cross_matrix(&Self) -> MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.\n","sig":null,"attributes":[{"value":"/ Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410270,"byte_end":410361,"line_start":1736,"line_end":1736,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410366,"byte_end":410375,"line_start":1737,"line_end":1737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410928,"byte_end":410933,"line_start":1756,"line_end":1756,"column_start":12,"column_end":17},"name":"angle","qualname":"<Matrix<N, R, C, S>>::angle","value":"pub fn angle<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> N::SimdRealField where SB: Storage<N, R2, C2>,\nShapeConstraint: DimEq<R, R2> + DimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest angle between two vectors.\n","sig":null,"attributes":[{"value":"/ The smallest angle between two vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410859,"byte_end":410902,"line_start":1754,"line_end":1754,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410907,"byte_end":410916,"line_start":1755,"line_end":1755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412058,"byte_end":412062,"line_start":1790,"line_end":1790,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector<N, D, S>>::lerp","value":"pub fn lerp<S2: Storage<N, D>>(&Self, &Vector<N, D, S2>, N) -> VectorN<N, D>\nwhere DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","sig":null,"attributes":[{"value":"/ Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411608,"byte_end":411721,"line_start":1778,"line_end":1778,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411726,"byte_end":411729,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ The value for a is not restricted to the range `[0, 1]`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411734,"byte_end":411794,"line_start":1780,"line_end":1780,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411799,"byte_end":411802,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411807,"byte_end":411822,"line_start":1782,"line_end":1782,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411827,"byte_end":411830,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411835,"byte_end":411842,"line_start":1784,"line_end":1784,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411847,"byte_end":411875,"line_start":1785,"line_end":1785,"column_start":5,"column_end":33}},{"value":"/ let x = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411880,"byte_end":411920,"line_start":1786,"line_end":1786,"column_start":5,"column_end":45}},{"value":"/ let y = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411925,"byte_end":411968,"line_start":1787,"line_end":1787,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(x.lerp(&y, 0.1), Vector3::new(1.9, 3.8, 5.7));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411973,"byte_end":412034,"line_start":1788,"line_end":1788,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412039,"byte_end":412046,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412785,"byte_end":412790,"line_start":1815,"line_end":1815,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Unit<Vector<N, D, S>>>::slerp","value":"pub fn slerp<S2: Storage<N, D>>(&Self, &Unit<Vector<N, D, S2>>, N)\n-> Unit<VectorN<N, D>> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412387,"byte_end":412460,"line_start":1801,"line_end":1801,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412465,"byte_end":412468,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412473,"byte_end":412488,"line_start":1803,"line_end":1803,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412493,"byte_end":412496,"line_start":1804,"line_end":1804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412501,"byte_end":412508,"line_start":1805,"line_end":1805,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412513,"byte_end":412549,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412554,"byte_end":412557,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ let v1 = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412562,"byte_end":412619,"line_start":1808,"line_end":1808,"column_start":5,"column_end":62}},{"value":"/ let v2 = Unit::new_normalize(Vector2::new(2.0, -3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412624,"byte_end":412682,"line_start":1809,"line_end":1809,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412687,"byte_end":412690,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8}},{"value":"/ let v = v1.slerp(&v2, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412695,"byte_end":412726,"line_start":1811,"line_end":1811,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412731,"byte_end":412734,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, v2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412739,"byte_end":412761,"line_start":1813,"line_end":1813,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412766,"byte_end":412773,"line_start":1814,"line_end":1814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":413439,"byte_end":413448,"line_start":1832,"line_end":1832,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Unit<Vector<N, D, S>>>::try_slerp","value":"pub fn try_slerp<S2: Storage<N, D>>(&Self, &Unit<Vector<N, D, S2>>, N, N)\n-> Option<Unit<VectorN<N, D>>> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":413189,"byte_end":413262,"line_start":1828,"line_end":1828,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":413267,"byte_end":413270,"line_start":1829,"line_end":1829,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the two vectors are almost collinear and with opposite direction","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":413275,"byte_end":413361,"line_start":1830,"line_end":1830,"column_start":5,"column_end":91}},{"value":"/ (in this case, there is an infinity of possible results).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":413366,"byte_end":413427,"line_start":1831,"line_end":1831,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":17122},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":421263,"byte_end":421275,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"name":"SliceStorage","qualname":"::base::matrix_slice::SliceStorage","value":"SliceStorage {  }","parent":null,"children":[{"krate":0,"index":17129},{"krate":0,"index":17130},{"krate":0,"index":17131},{"krate":0,"index":17132}],"decl_id":null,"docs":"A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17178},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":421527,"byte_end":421542,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"name":"SliceStorageMut","qualname":"::base::matrix_slice::SliceStorageMut","value":"SliceStorageMut {  }","parent":null,"children":[{"krate":0,"index":17185},{"krate":0,"index":17186},{"krate":0,"index":17187},{"krate":0,"index":17188}],"decl_id":null,"docs":"A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17229},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443516,"byte_end":443527,"line_start":638,"line_end":638,"column_start":19,"column_end":30},"name":"MatrixSlice","qualname":"::base::matrix_slice::MatrixSlice","value":"Matrix<N, R, C, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":427438,"byte_end":427457,"line_start":277,"line_end":277,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17241},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443593,"byte_end":443596,"line_start":639,"line_end":639,"column_start":6,"column_end":9},"name":"row","qualname":"<Matrix<N, R, C, S>>::row","value":"pub fn row(&Self, usize) -> MatrixSlice<, N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":427777,"byte_end":427836,"line_start":287,"line_end":287,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":427849,"byte_end":427858,"line_start":288,"line_end":288,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17242},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443603,"byte_end":443611,"line_start":640,"line_end":640,"column_start":6,"column_end":14},"name":"row_part","qualname":"<Matrix<N, R, C, S>>::row_part","value":"pub fn row_part(&Self, usize, usize)\n-> MatrixSlice<, N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428023,"byte_end":428108,"line_start":293,"line_end":293,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428121,"byte_end":428130,"line_start":294,"line_end":294,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17243},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443618,"byte_end":443622,"line_start":641,"line_end":641,"column_start":6,"column_end":10},"name":"rows","qualname":"<Matrix<N, R, C, S>>::rows","value":"pub fn rows(&Self, usize, usize)\n-> MatrixSlice<, N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428341,"byte_end":428397,"line_start":299,"line_end":299,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428410,"byte_end":428419,"line_start":300,"line_end":300,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17244},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443629,"byte_end":443643,"line_start":642,"line_end":642,"column_start":6,"column_end":20},"name":"rows_with_step","qualname":"<Matrix<N, R, C, S>>::rows_with_step","value":"pub fn rows_with_step(&Self, usize, usize, usize)\n-> MatrixSlice<, N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428654,"byte_end":428741,"line_start":307,"line_end":307,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428754,"byte_end":428763,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443650,"byte_end":443660,"line_start":643,"line_end":643,"column_start":6,"column_end":16},"name":"fixed_rows","qualname":"<Matrix<N, R, C, S>>::fixed_rows","value":"pub fn fixed_rows<RSlice: DimName>(&Self, usize)\n-> MatrixSlice<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429034,"byte_end":429106,"line_start":315,"line_end":315,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429119,"byte_end":429128,"line_start":316,"line_end":316,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17247},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443667,"byte_end":443687,"line_start":644,"line_end":644,"column_start":6,"column_end":26},"name":"fixed_rows_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step","value":"pub fn fixed_rows_with_step<RSlice: DimName>(&Self, usize, usize)\n-> MatrixSlice<, N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429366,"byte_end":429451,"line_start":323,"line_end":323,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429464,"byte_end":429473,"line_start":324,"line_end":324,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429486,"byte_end":429495,"line_start":325,"line_end":325,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17249},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443694,"byte_end":443706,"line_start":645,"line_end":645,"column_start":6,"column_end":18},"name":"rows_generic","qualname":"<Matrix<N, R, C, S>>::rows_generic","value":"pub fn rows_generic<RSlice: Dim>(&Self, usize, RSlice)\n-> MatrixSlice<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429769,"byte_end":429848,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429861,"byte_end":429921,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429934,"byte_end":429943,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17251},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443713,"byte_end":443735,"line_start":646,"line_end":646,"column_start":6,"column_end":28},"name":"rows_generic_with_step","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step","value":"pub fn rows_generic_with_step<RSlice>(&Self, usize, RSlice, usize)\n-> MatrixSlice<, N, RSlice, C, Dynamic, S::CStride> where RSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":430535,"byte_end":430614,"line_start":349,"line_end":349,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":430627,"byte_end":430687,"line_start":350,"line_end":350,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":430700,"byte_end":430709,"line_start":351,"line_end":351,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17253},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443742,"byte_end":443748,"line_start":647,"line_end":647,"column_start":6,"column_end":12},"name":"column","qualname":"<Matrix<N, R, C, S>>::column","value":"pub fn column(&Self, usize) -> MatrixSlice<, N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431617,"byte_end":431679,"line_start":374,"line_end":374,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431692,"byte_end":431701,"line_start":375,"line_end":375,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17254},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443755,"byte_end":443766,"line_start":648,"line_end":648,"column_start":6,"column_end":17},"name":"column_part","qualname":"<Matrix<N, R, C, S>>::column_part","value":"pub fn column_part(&Self, usize, usize)\n-> MatrixSlice<, N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431872,"byte_end":431960,"line_start":380,"line_end":380,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431973,"byte_end":431982,"line_start":381,"line_end":381,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17255},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443773,"byte_end":443780,"line_start":649,"line_end":649,"column_start":6,"column_end":13},"name":"columns","qualname":"<Matrix<N, R, C, S>>::columns","value":"pub fn columns(&Self, usize, usize)\n-> MatrixSlice<, N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432196,"byte_end":432255,"line_start":386,"line_end":386,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432268,"byte_end":432277,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17256},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443787,"byte_end":443804,"line_start":650,"line_end":650,"column_start":6,"column_end":23},"name":"columns_with_step","qualname":"<Matrix<N, R, C, S>>::columns_with_step","value":"pub fn columns_with_step(&Self, usize, usize, usize)\n-> MatrixSlice<, N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432518,"byte_end":432602,"line_start":394,"line_end":394,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432615,"byte_end":432627,"line_start":395,"line_end":395,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432640,"byte_end":432649,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17257},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443811,"byte_end":443824,"line_start":651,"line_end":651,"column_start":6,"column_end":19},"name":"fixed_columns","qualname":"<Matrix<N, R, C, S>>::fixed_columns","value":"pub fn fixed_columns<CSlice: DimName>(&Self, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432926,"byte_end":433001,"line_start":403,"line_end":403,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433014,"byte_end":433023,"line_start":404,"line_end":404,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17259},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443831,"byte_end":443854,"line_start":652,"line_end":652,"column_start":6,"column_end":29},"name":"fixed_columns_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step","value":"pub fn fixed_columns_with_step<CSlice: DimName>(&Self, usize, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433267,"byte_end":433348,"line_start":411,"line_end":411,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433361,"byte_end":433380,"line_start":412,"line_end":412,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433393,"byte_end":433402,"line_start":413,"line_end":413,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17261},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443861,"byte_end":443876,"line_start":653,"line_end":653,"column_start":6,"column_end":21},"name":"columns_generic","qualname":"<Matrix<N, R, C, S>>::columns_generic","value":"pub fn columns_generic<CSlice: Dim>(&Self, usize, CSlice)\n-> MatrixSlice<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433682,"byte_end":433768,"line_start":420,"line_end":420,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433781,"byte_end":433807,"line_start":421,"line_end":421,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433820,"byte_end":433829,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17263},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443883,"byte_end":443908,"line_start":654,"line_end":654,"column_start":6,"column_end":31},"name":"columns_generic_with_step","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step","value":"pub fn columns_generic_with_step<CSlice: Dim>(&Self, usize, CSlice, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":434422,"byte_end":434510,"line_start":437,"line_end":437,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":434523,"byte_end":434570,"line_start":438,"line_end":438,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":434583,"byte_end":434592,"line_start":439,"line_end":439,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443915,"byte_end":443920,"line_start":655,"line_end":655,"column_start":6,"column_end":11},"name":"slice","qualname":"<Matrix<N, R, C, S>>::slice","value":"pub fn slice(&Self, (usize, usize), (usize, usize))\n-> MatrixSlice<, N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":435476,"byte_end":435565,"line_start":462,"line_end":462,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":435578,"byte_end":435603,"line_start":463,"line_end":463,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":435616,"byte_end":435625,"line_start":464,"line_end":464,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17266},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443927,"byte_end":443943,"line_start":656,"line_end":656,"column_start":6,"column_end":22},"name":"slice_with_steps","qualname":"<Matrix<N, R, C, S>>::slice_with_steps","value":"pub fn slice_with_steps(&Self, (usize, usize), (usize, usize), (usize, usize))\n-> MatrixSlice<, N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436145,"byte_end":436223,"line_start":478,"line_end":478,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436236,"byte_end":436320,"line_start":479,"line_end":479,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436333,"byte_end":436413,"line_start":480,"line_end":480,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436426,"byte_end":436446,"line_start":481,"line_end":481,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436459,"byte_end":436468,"line_start":482,"line_end":482,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17267},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443950,"byte_end":443961,"line_start":657,"line_end":657,"column_start":6,"column_end":17},"name":"fixed_slice","qualname":"<Matrix<N, R, C, S>>::fixed_slice","value":"pub fn fixed_slice<RSlice, CSlice>(&Self, usize, usize)\n-> MatrixSlice<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436829,"byte_end":436913,"line_start":490,"line_end":490,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436926,"byte_end":436969,"line_start":491,"line_end":491,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436982,"byte_end":436991,"line_start":492,"line_end":492,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17270},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443968,"byte_end":443990,"line_start":658,"line_end":658,"column_start":6,"column_end":28},"name":"fixed_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps","value":"pub fn fixed_slice_with_steps<RSlice,\n                              CSlice>(&Self, (usize, usize), (usize, usize))\n-> MatrixSlice<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: DimName,\nCSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437612,"byte_end":437690,"line_start":507,"line_end":507,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437703,"byte_end":437784,"line_start":508,"line_end":508,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437797,"byte_end":437883,"line_start":509,"line_end":509,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437896,"byte_end":437920,"line_start":510,"line_end":510,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437933,"byte_end":437942,"line_start":511,"line_end":511,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17273},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":443997,"byte_end":444010,"line_start":659,"line_end":659,"column_start":6,"column_end":19},"name":"generic_slice","qualname":"<Matrix<N, R, C, S>>::generic_slice","value":"pub fn generic_slice<RSlice, CSlice>(&Self, (usize, usize), (RSlice, CSlice))\n-> MatrixSlice<, N, RSlice, CSlice, S::RStride, S::CStride> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":438362,"byte_end":438431,"line_start":520,"line_end":520,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":438444,"byte_end":438453,"line_start":521,"line_end":521,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17276},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444017,"byte_end":444041,"line_start":660,"line_end":660,"column_start":6,"column_end":30},"name":"generic_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps","value":"pub fn generic_slice_with_steps<RSlice,\n                                CSlice>(&Self, (usize, usize),\n                                        (RSlice, CSlice), (usize, usize))\n-> MatrixSlice<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":439018,"byte_end":439087,"line_start":535,"line_end":535,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":439100,"byte_end":439109,"line_start":536,"line_end":536,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17279},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444048,"byte_end":444063,"line_start":661,"line_end":661,"column_start":6,"column_end":21},"name":"rows_range_pair","qualname":"<Matrix<N, R, C, S>>::rows_range_pair","value":"pub fn rows_range_pair<Range1: SliceRange<R>,\n                       Range2: SliceRange<R>>(&Self, Range1, Range2)\n->\n    (MatrixSlice<, N, Range1::Size, C, S::RStride, S::CStride>,\n     MatrixSlice<, N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440220,"byte_end":440286,"line_start":562,"line_end":562,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440299,"byte_end":440302,"line_start":563,"line_end":563,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440315,"byte_end":440379,"line_start":564,"line_end":564,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440392,"byte_end":440401,"line_start":565,"line_end":565,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17282},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444070,"byte_end":444088,"line_start":662,"line_end":662,"column_start":6,"column_end":24},"name":"columns_range_pair","qualname":"<Matrix<N, R, C, S>>::columns_range_pair","value":"pub fn columns_range_pair<Range1: SliceRange<C>,\n                          Range2: SliceRange<C>>(&Self, Range1, Range2)\n->\n    (MatrixSlice<, N, R, Range1::Size, S::RStride, S::CStride>,\n     MatrixSlice<, N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":441841,"byte_end":441907,"line_start":598,"line_end":598,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":441920,"byte_end":441923,"line_start":599,"line_end":599,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":441936,"byte_end":442000,"line_start":600,"line_end":600,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":442013,"byte_end":442022,"line_start":601,"line_end":601,"column_start":13,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":17285},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444134,"byte_end":444148,"line_start":665,"line_end":665,"column_start":23,"column_end":37},"name":"MatrixSliceMut","qualname":"::base::matrix_slice::MatrixSliceMut","value":"Matrix<N, R, C, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":427438,"byte_end":427457,"line_start":277,"line_end":277,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17297},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444228,"byte_end":444235,"line_start":666,"line_end":666,"column_start":6,"column_end":13},"name":"row_mut","qualname":"<Matrix<N, R, C, S>>::row_mut","value":"pub fn row_mut(&mut Self, usize)\n-> MatrixSliceMut<, N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":427777,"byte_end":427836,"line_start":287,"line_end":287,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":427849,"byte_end":427858,"line_start":288,"line_end":288,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17298},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444242,"byte_end":444254,"line_start":667,"line_end":667,"column_start":6,"column_end":18},"name":"row_part_mut","qualname":"<Matrix<N, R, C, S>>::row_part_mut","value":"pub fn row_part_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428023,"byte_end":428108,"line_start":293,"line_end":293,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428121,"byte_end":428130,"line_start":294,"line_end":294,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17299},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444261,"byte_end":444269,"line_start":668,"line_end":668,"column_start":6,"column_end":14},"name":"rows_mut","qualname":"<Matrix<N, R, C, S>>::rows_mut","value":"pub fn rows_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428341,"byte_end":428397,"line_start":299,"line_end":299,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428410,"byte_end":428419,"line_start":300,"line_end":300,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17300},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444276,"byte_end":444294,"line_start":669,"line_end":669,"column_start":6,"column_end":24},"name":"rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_with_step_mut","value":"pub fn rows_with_step_mut(&mut Self, usize, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428654,"byte_end":428741,"line_start":307,"line_end":307,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":428754,"byte_end":428763,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17301},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444301,"byte_end":444315,"line_start":670,"line_end":670,"column_start":6,"column_end":20},"name":"fixed_rows_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_mut","value":"pub fn fixed_rows_mut<RSlice: DimName>(&mut Self, usize)\n-> MatrixSliceMut<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429034,"byte_end":429106,"line_start":315,"line_end":315,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429119,"byte_end":429128,"line_start":316,"line_end":316,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17303},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444322,"byte_end":444346,"line_start":671,"line_end":671,"column_start":6,"column_end":30},"name":"fixed_rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step_mut","value":"pub fn fixed_rows_with_step_mut<RSlice: DimName>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429366,"byte_end":429451,"line_start":323,"line_end":323,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429464,"byte_end":429473,"line_start":324,"line_end":324,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429486,"byte_end":429495,"line_start":325,"line_end":325,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17305},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444353,"byte_end":444369,"line_start":672,"line_end":672,"column_start":6,"column_end":22},"name":"rows_generic_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_mut","value":"pub fn rows_generic_mut<RSlice: Dim>(&mut Self, usize, RSlice)\n-> MatrixSliceMut<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429769,"byte_end":429848,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429861,"byte_end":429921,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":429934,"byte_end":429943,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17307},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444376,"byte_end":444402,"line_start":673,"line_end":673,"column_start":6,"column_end":32},"name":"rows_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step_mut","value":"pub fn rows_generic_with_step_mut<RSlice>(&mut Self, usize, RSlice, usize)\n-> MatrixSliceMut<, N, RSlice, C, Dynamic, S::CStride> where RSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":430535,"byte_end":430614,"line_start":349,"line_end":349,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":430627,"byte_end":430687,"line_start":350,"line_end":350,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":430700,"byte_end":430709,"line_start":351,"line_end":351,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17309},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444409,"byte_end":444419,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"name":"column_mut","qualname":"<Matrix<N, R, C, S>>::column_mut","value":"pub fn column_mut(&mut Self, usize)\n-> MatrixSliceMut<, N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431617,"byte_end":431679,"line_start":374,"line_end":374,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431692,"byte_end":431701,"line_start":375,"line_end":375,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444426,"byte_end":444441,"line_start":675,"line_end":675,"column_start":6,"column_end":21},"name":"column_part_mut","qualname":"<Matrix<N, R, C, S>>::column_part_mut","value":"pub fn column_part_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431872,"byte_end":431960,"line_start":380,"line_end":380,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":431973,"byte_end":431982,"line_start":381,"line_end":381,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17311},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444448,"byte_end":444459,"line_start":676,"line_end":676,"column_start":6,"column_end":17},"name":"columns_mut","qualname":"<Matrix<N, R, C, S>>::columns_mut","value":"pub fn columns_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432196,"byte_end":432255,"line_start":386,"line_end":386,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432268,"byte_end":432277,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17312},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444466,"byte_end":444487,"line_start":677,"line_end":677,"column_start":6,"column_end":27},"name":"columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_with_step_mut","value":"pub fn columns_with_step_mut(&mut Self, usize, usize, usize)\n-> MatrixSliceMut<, N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432518,"byte_end":432602,"line_start":394,"line_end":394,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432615,"byte_end":432627,"line_start":395,"line_end":395,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432640,"byte_end":432649,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17313},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444494,"byte_end":444511,"line_start":678,"line_end":678,"column_start":6,"column_end":23},"name":"fixed_columns_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_mut","value":"pub fn fixed_columns_mut<CSlice: DimName>(&mut Self, usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":432926,"byte_end":433001,"line_start":403,"line_end":403,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433014,"byte_end":433023,"line_start":404,"line_end":404,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17315},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444518,"byte_end":444545,"line_start":679,"line_end":679,"column_start":6,"column_end":33},"name":"fixed_columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step_mut","value":"pub fn fixed_columns_with_step_mut<CSlice: DimName>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433267,"byte_end":433348,"line_start":411,"line_end":411,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433361,"byte_end":433380,"line_start":412,"line_end":412,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433393,"byte_end":433402,"line_start":413,"line_end":413,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17317},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444552,"byte_end":444571,"line_start":680,"line_end":680,"column_start":6,"column_end":25},"name":"columns_generic_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_mut","value":"pub fn columns_generic_mut<CSlice: Dim>(&mut Self, usize, CSlice)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433682,"byte_end":433768,"line_start":420,"line_end":420,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433781,"byte_end":433807,"line_start":421,"line_end":421,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":433820,"byte_end":433829,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17319},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444578,"byte_end":444607,"line_start":681,"line_end":681,"column_start":6,"column_end":35},"name":"columns_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step_mut","value":"pub fn columns_generic_with_step_mut<CSlice: Dim>(&mut Self, usize, CSlice,\n                                                  usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":434422,"byte_end":434510,"line_start":437,"line_end":437,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":434523,"byte_end":434570,"line_start":438,"line_end":438,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":434583,"byte_end":434592,"line_start":439,"line_end":439,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17321},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444614,"byte_end":444623,"line_start":682,"line_end":682,"column_start":6,"column_end":15},"name":"slice_mut","qualname":"<Matrix<N, R, C, S>>::slice_mut","value":"pub fn slice_mut(&mut Self, (usize, usize), (usize, usize))\n-> MatrixSliceMut<, N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":435476,"byte_end":435565,"line_start":462,"line_end":462,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":435578,"byte_end":435603,"line_start":463,"line_end":463,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":435616,"byte_end":435625,"line_start":464,"line_end":464,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17322},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444630,"byte_end":444650,"line_start":683,"line_end":683,"column_start":6,"column_end":26},"name":"slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::slice_with_steps_mut","value":"pub fn slice_with_steps_mut(&mut Self, (usize, usize), (usize, usize),\n                            (usize, usize))\n-> MatrixSliceMut<, N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436145,"byte_end":436223,"line_start":478,"line_end":478,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436236,"byte_end":436320,"line_start":479,"line_end":479,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436333,"byte_end":436413,"line_start":480,"line_end":480,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436426,"byte_end":436446,"line_start":481,"line_end":481,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436459,"byte_end":436468,"line_start":482,"line_end":482,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17323},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444657,"byte_end":444672,"line_start":684,"line_end":684,"column_start":6,"column_end":21},"name":"fixed_slice_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_mut","value":"pub fn fixed_slice_mut<RSlice, CSlice>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436829,"byte_end":436913,"line_start":490,"line_end":490,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436926,"byte_end":436969,"line_start":491,"line_end":491,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":436982,"byte_end":436991,"line_start":492,"line_end":492,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17326},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444679,"byte_end":444705,"line_start":685,"line_end":685,"column_start":6,"column_end":32},"name":"fixed_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps_mut","value":"pub fn fixed_slice_with_steps_mut<RSlice,\n                                  CSlice>(&mut Self, (usize, usize),\n                                          (usize, usize))\n-> MatrixSliceMut<, N, RSlice, CSlice, Dynamic, Dynamic> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437612,"byte_end":437690,"line_start":507,"line_end":507,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437703,"byte_end":437784,"line_start":508,"line_end":508,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437797,"byte_end":437883,"line_start":509,"line_end":509,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437896,"byte_end":437920,"line_start":510,"line_end":510,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":437933,"byte_end":437942,"line_start":511,"line_end":511,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17329},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444712,"byte_end":444729,"line_start":686,"line_end":686,"column_start":6,"column_end":23},"name":"generic_slice_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_mut","value":"pub fn generic_slice_mut<RSlice,\n                         CSlice>(&mut Self, (usize, usize), (RSlice, CSlice))\n-> MatrixSliceMut<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: Dim, CSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":438362,"byte_end":438431,"line_start":520,"line_end":520,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":438444,"byte_end":438453,"line_start":521,"line_end":521,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17332},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444736,"byte_end":444764,"line_start":687,"line_end":687,"column_start":6,"column_end":34},"name":"generic_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps_mut","value":"pub fn generic_slice_with_steps_mut<RSlice,\n                                    CSlice>(&mut Self, (usize, usize),\n                                            (RSlice, CSlice), (usize, usize))\n-> MatrixSliceMut<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":439018,"byte_end":439087,"line_start":535,"line_end":535,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":439100,"byte_end":439109,"line_start":536,"line_end":536,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17335},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444771,"byte_end":444790,"line_start":688,"line_end":688,"column_start":6,"column_end":25},"name":"rows_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_pair_mut","value":"pub fn rows_range_pair_mut<Range1: SliceRange<R>,\n                           Range2: SliceRange<R>>(&mut Self, Range1, Range2)\n->\n    (MatrixSliceMut<, N, Range1::Size, C, S::RStride, S::CStride>,\n     MatrixSliceMut<, N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440220,"byte_end":440286,"line_start":562,"line_end":562,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440299,"byte_end":440302,"line_start":563,"line_end":563,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440315,"byte_end":440379,"line_start":564,"line_end":564,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":440392,"byte_end":440401,"line_start":565,"line_end":565,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17338},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444797,"byte_end":444819,"line_start":689,"line_end":689,"column_start":6,"column_end":28},"name":"columns_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_pair_mut","value":"pub fn columns_range_pair_mut<Range1: SliceRange<C>,\n                              Range2: SliceRange<C>>(&mut Self, Range1,\n                                                     Range2)\n->\n    (MatrixSliceMut<, N, R, Range1::Size, S::RStride, S::CStride>,\n     MatrixSliceMut<, N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":441841,"byte_end":441907,"line_start":598,"line_end":598,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":441920,"byte_end":441923,"line_start":599,"line_end":599,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":441936,"byte_end":442000,"line_start":600,"line_end":600,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":442013,"byte_end":442022,"line_start":601,"line_end":601,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3344},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445125,"byte_end":445135,"line_start":698,"line_end":698,"column_start":11,"column_end":21},"name":"SliceRange","qualname":"::base::matrix_slice::SliceRange","value":"SliceRange<D: Dim>","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"decl_id":null,"docs":" A range with a size that may be known at compile-time.","sig":null,"attributes":[{"value":"/ A range with a size that may be known at compile-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444823,"byte_end":444881,"line_start":691,"line_end":691,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444882,"byte_end":444885,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ This may be:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444886,"byte_end":444902,"line_start":693,"line_end":693,"column_start":1,"column_end":17}},{"value":"/ * A single `usize` index, e.g., `4`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444903,"byte_end":444942,"line_start":694,"line_end":694,"column_start":1,"column_end":40}},{"value":"/ * A left-open range `std::ops::RangeTo`, e.g., `.. 4`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":444943,"byte_end":445000,"line_start":695,"line_end":695,"column_start":1,"column_end":58}},{"value":"/ * A right-open range `std::ops::RangeFrom`, e.g., `4 ..`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445001,"byte_end":445061,"line_start":696,"line_end":696,"column_start":1,"column_end":61}},{"value":"/ * A full range `std::ops::RangeFull`, e.g., `..`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445062,"byte_end":445114,"line_start":697,"line_end":697,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":3346},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445216,"byte_end":445220,"line_start":700,"line_end":700,"column_start":10,"column_end":14},"name":"Size","qualname":"::base::matrix_slice::SliceRange::Size","value":"type Size: Dim;","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" Type of the range size. May be a type-level integer.\n","sig":null,"attributes":[{"value":"/ Type of the range size. May be a type-level integer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445150,"byte_end":445206,"line_start":699,"line_end":699,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445273,"byte_end":445278,"line_start":703,"line_end":703,"column_start":8,"column_end":13},"name":"begin","qualname":"::base::matrix_slice::SliceRange::begin","value":"pub fn begin(&Self, D) -> usize","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" The start index of the range.\n","sig":null,"attributes":[{"value":"/ The start index of the range.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445232,"byte_end":445265,"line_start":702,"line_end":702,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445450,"byte_end":445453,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"end","qualname":"::base::matrix_slice::SliceRange::end","value":"pub fn end(&Self, D) -> usize","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" The index immediately after the last index inside of the range.\n","sig":null,"attributes":[{"value":"/ The index immediately after the last index inside of the range.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445375,"byte_end":445442,"line_start":705,"line_end":705,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445564,"byte_end":445568,"line_start":708,"line_end":708,"column_start":8,"column_end":12},"name":"size","qualname":"::base::matrix_slice::SliceRange::size","value":"pub fn size(&Self, D) -> Self::Size","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" The number of elements of the range, i.e., `self.end - self.begin`.\n","sig":null,"attributes":[{"value":"/ The number of elements of the range, i.e., `self.end - self.begin`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445485,"byte_end":445556,"line_start":707,"line_end":707,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447504,"byte_end":447515,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"slice_range","qualname":"<Matrix<N, R, C, S>>::slice_range","value":"pub fn slice_range<RowRange, ColRange>(&Self, RowRange, ColRange)\n-> MatrixSlice<, N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>\nwhere RowRange: SliceRange<R>, ColRange: SliceRange<C>","parent":null,"children":[],"decl_id":null,"docs":" Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed\n by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447354,"byte_end":447449,"line_start":807,"line_end":807,"column_start":5,"column_end":100}},{"value":"/ by the range `cols`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447454,"byte_end":447478,"line_start":808,"line_end":808,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447483,"byte_end":447492,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448049,"byte_end":448059,"line_start":828,"line_end":828,"column_start":12,"column_end":22},"name":"rows_range","qualname":"<Matrix<N, R, C, S>>::rows_range","value":"pub fn rows_range<RowRange: SliceRange<R>>(&Self, RowRange)\n-> MatrixSlice<, N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447961,"byte_end":448023,"line_start":826,"line_end":826,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448028,"byte_end":448037,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448331,"byte_end":448344,"line_start":837,"line_end":837,"column_start":12,"column_end":25},"name":"columns_range","qualname":"<Matrix<N, R, C, S>>::columns_range","value":"pub fn columns_range<ColRange: SliceRange<C>>(&Self, ColRange)\n-> MatrixSlice<, N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `rows`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448240,"byte_end":448305,"line_start":835,"line_end":835,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448310,"byte_end":448319,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448748,"byte_end":448763,"line_start":848,"line_end":848,"column_start":12,"column_end":27},"name":"slice_range_mut","qualname":"<Matrix<N, R, C, S>>::slice_range_mut","value":"pub fn slice_range_mut<RowRange, ColRange>(&mut Self, RowRange, ColRange)\n-> MatrixSliceMut<, N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>\nwhere RowRange: SliceRange<R>, ColRange: SliceRange<C>","parent":null,"children":[],"decl_id":null,"docs":" Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns\n indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448604,"byte_end":448699,"line_start":846,"line_end":846,"column_start":5,"column_end":100}},{"value":"/ indexed by the range `cols`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448704,"byte_end":448736,"line_start":847,"line_end":847,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449308,"byte_end":449322,"line_start":866,"line_end":866,"column_start":12,"column_end":26},"name":"rows_range_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_mut","value":"pub fn rows_range_mut<RowRange: SliceRange<R>>(&mut Self, RowRange)\n-> MatrixSliceMut<, N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449220,"byte_end":449282,"line_start":864,"line_end":864,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449287,"byte_end":449296,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449605,"byte_end":449622,"line_start":875,"line_end":875,"column_start":12,"column_end":29},"name":"columns_range_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_mut","value":"pub fn columns_range_mut<ColRange: SliceRange<C>>(&mut Self, ColRange)\n-> MatrixSliceMut<, N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `cols`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449514,"byte_end":449579,"line_start":873,"line_end":873,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449584,"byte_end":449593,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3440},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451035,"byte_end":451039,"line_start":19,"line_end":19,"column_start":11,"column_end":15},"name":"Norm","qualname":"::base::norm::Norm","value":"Norm<N: SimdComplexField>","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3446}],"decl_id":null,"docs":" A trait for abstract matrix norms.","sig":null,"attributes":[{"value":"/ A trait for abstract matrix norms.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":450927,"byte_end":450965,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":450966,"byte_end":450969,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This may be moved to the alga crate in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":450970,"byte_end":451024,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451115,"byte_end":451119,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::norm::Norm::norm","value":"pub fn norm<R, C, S>(&Self, &Matrix<N, R, C, S>) -> N::SimdRealField where\nR: Dim, C: Dim, S: Storage<N, R, C>","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Apply this norm to the given matrix.\n","sig":null,"attributes":[{"value":"/ Apply this norm to the given matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451067,"byte_end":451107,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451365,"byte_end":451380,"line_start":27,"line_end":27,"column_start":8,"column_end":23},"name":"metric_distance","qualname":"::base::norm::Norm::metric_distance","value":"pub fn metric_distance<R1, C1, S1, R2, C2,\n                       S2>(&Self, &Matrix<N, R1, C1, S1>,\n                           &Matrix<N, R2, C2, S2>) -> N::SimdRealField where\nR1: Dim, C1: Dim, S1: Storage<N, R1, C1>, R2: Dim, C2: Dim,\nS2: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Use the metric induced by this norm to compute the metric distance between the two given matrices.\n","sig":null,"attributes":[{"value":"/ Use the metric induced by this norm to compute the metric distance between the two given matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451255,"byte_end":451357,"line_start":26,"line_end":26,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":3453},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451776,"byte_end":451789,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"EuclideanNorm","qualname":"::base::norm::EuclideanNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Euclidean norm.\n","sig":null,"attributes":[{"value":"/ Euclidean norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451745,"byte_end":451764,"line_start":42,"line_end":42,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3455},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451815,"byte_end":451821,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"LpNorm","qualname":"::base::norm::LpNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lp norm.\n","sig":null,"attributes":[{"value":"/ Lp norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451791,"byte_end":451803,"line_start":44,"line_end":44,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":3457},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451822,"byte_end":451829,"line_start":45,"line_end":45,"column_start":19,"column_end":26},"name":"0","qualname":"::base::norm::LpNorm::0","value":"i32","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451923,"byte_end":451934,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"UniformNorm","qualname":"::base::norm::UniformNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.\n","sig":null,"attributes":[{"value":"/ L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451832,"byte_end":451911,"line_start":46,"line_end":46,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":454991,"byte_end":455003,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Matrix<N, R, C, S>>::norm_squared","value":"pub fn norm_squared(&Self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The squared L2 norm of this vector.\n","sig":null,"attributes":[{"value":"/ The squared L2 norm of this vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":454926,"byte_end":454965,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":454970,"byte_end":454979,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455350,"byte_end":455354,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"norm","qualname":"<Matrix<N, R, C, S>>::norm","value":"pub fn norm(&Self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The L2 norm of this matrix.","sig":null,"attributes":[{"value":"/ The L2 norm of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455235,"byte_end":455266,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455271,"byte_end":455274,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_norm` to apply a custom norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455279,"byte_end":455324,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455329,"byte_end":455338,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455627,"byte_end":455642,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"metric_distance","qualname":"<Matrix<N, R, C, S>>::metric_distance","value":"pub fn metric_distance<R2, C2, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> N::SimdRealField where R2: Dim, C2: Dim, S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","sig":null,"attributes":[{"value":"/ Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455435,"byte_end":455532,"line_start":179,"line_end":179,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455537,"byte_end":455540,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_metric_distance` to apply a custom norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455545,"byte_end":455601,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455606,"byte_end":455615,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456367,"byte_end":456377,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"apply_norm","qualname":"<Matrix<N, R, C, S>>::apply_norm","value":"pub fn apply_norm<impl Norm<N>: Norm<N>>(&Self, &impl Norm<N>)\n-> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the given `norm` to compute the norm of `self`.","sig":null,"attributes":[{"value":"/ Uses the given `norm` to compute the norm of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":455939,"byte_end":455995,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456000,"byte_end":456003,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456008,"byte_end":456021,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456026,"byte_end":456029,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456034,"byte_end":456041,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456046,"byte_end":456112,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456117,"byte_end":456120,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let v = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456125,"byte_end":456165,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v.apply_norm(&UniformNorm), 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456170,"byte_end":456218,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(v.apply_norm(&LpNorm(1)), 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456223,"byte_end":456269,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v.apply_norm(&EuclideanNorm), v.norm());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456274,"byte_end":456329,"line_start":203,"line_end":203,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456334,"byte_end":456341,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456346,"byte_end":456355,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457071,"byte_end":457092,"line_start":225,"line_end":225,"column_start":12,"column_end":33},"name":"apply_metric_distance","qualname":"<Matrix<N, R, C, S>>::apply_metric_distance","value":"pub fn apply_metric_distance<R2, C2, S2,\n                             impl Norm<N>: Norm<N>>(&Self,\n                                                    &Matrix<N, R2, C2, S2>,\n                                                    &impl Norm<N>)\n-> N::SimdRealField where R2: Dim, C2: Dim, S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456463,"byte_end":456567,"line_start":210,"line_end":210,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456572,"byte_end":456575,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456580,"byte_end":456593,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456598,"byte_end":456601,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456606,"byte_end":456613,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456618,"byte_end":456684,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456689,"byte_end":456692,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456697,"byte_end":456738,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ let v2 = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456743,"byte_end":456787,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456792,"byte_end":456795,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &UniformNorm), 27.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456800,"byte_end":456866,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &LpNorm(1)), 27.0 + 18.0 + 9.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456871,"byte_end":456948,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &EuclideanNorm), (v1 - v2).norm());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":456953,"byte_end":457033,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457038,"byte_end":457045,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457050,"byte_end":457059,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457599,"byte_end":457608,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Matrix<N, R, C, S>>::magnitude","value":"pub fn magnitude(&Self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457425,"byte_end":457467,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457472,"byte_end":457475,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457480,"byte_end":457499,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457504,"byte_end":457507,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm()`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457512,"byte_end":457573,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457578,"byte_end":457587,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457867,"byte_end":457884,"line_start":255,"line_end":255,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Matrix<N, R, C, S>>::magnitude_squared","value":"pub fn magnitude_squared(&Self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457669,"byte_end":457719,"line_start":249,"line_end":249,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457724,"byte_end":457727,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457732,"byte_end":457759,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457764,"byte_end":457767,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm_squared()`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457772,"byte_end":457841,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457846,"byte_end":457855,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458017,"byte_end":458030,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"set_magnitude","qualname":"<Matrix<N, R, C, S>>::set_magnitude","value":"pub fn set_magnitude(&mut Self, N::SimdRealField) where S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector.\n","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457953,"byte_end":457991,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":457996,"byte_end":458005,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458328,"byte_end":458337,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Matrix<N, R, C, S>>::normalize","value":"pub fn normalize(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458197,"byte_end":458245,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458250,"byte_end":458259,"line_start":270,"line_end":270,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458264,"byte_end":458316,"line_start":271,"line_end":271,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458530,"byte_end":458537,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"lp_norm","qualname":"<Matrix<N, R, C, S>>::lp_norm","value":"pub fn lp_norm(&Self, i32) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The Lp norm of this matrix.\n","sig":null,"attributes":[{"value":"/ The Lp norm of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458473,"byte_end":458504,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458509,"byte_end":458518,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458812,"byte_end":458830,"line_start":290,"line_end":290,"column_start":12,"column_end":30},"name":"simd_try_normalize","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize","value":"pub fn simd_try_normalize(&Self, N::SimdRealField)\n-> SimdOption<MatrixMN<N, R, C>> where N::Element: Scalar,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N::Element, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize `self`.","sig":null,"attributes":[{"value":"/ Attempts to normalize `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458622,"byte_end":458655,"line_start":285,"line_end":285,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458660,"byte_end":458663,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix can be SIMD types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458668,"byte_end":458720,"line_start":287,"line_end":287,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458725,"byte_end":458734,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":458739,"byte_end":458800,"line_start":289,"line_end":289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459531,"byte_end":459548,"line_start":308,"line_end":308,"column_start":12,"column_end":29},"name":"try_set_magnitude","qualname":"<Matrix<N, R, C, S>>::try_set_magnitude","value":"pub fn try_set_magnitude(&mut Self, N::RealField, N::RealField) where\nS: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459247,"byte_end":459327,"line_start":303,"line_end":303,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459332,"byte_end":459335,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ If `self.magnitude()` is smaller than `min_magnitude`, it will be left unchanged.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459340,"byte_end":459425,"line_start":305,"line_end":305,"column_start":5,"column_end":90}},{"value":"/ Otherwise this is equivalent to: `*self = self.normalize() * magnitude.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459430,"byte_end":459505,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459510,"byte_end":459519,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460070,"byte_end":460083,"line_start":324,"line_end":324,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Matrix<N, R, C, S>>::try_normalize","value":"pub fn try_normalize(&Self, N::RealField) -> Option<MatrixMN<N, R, C>> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459787,"byte_end":459880,"line_start":319,"line_end":319,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459885,"byte_end":459888,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix cannot be SIMD types (see `simd_try_normalize`) instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459893,"byte_end":459983,"line_start":321,"line_end":321,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459988,"byte_end":459997,"line_start":322,"line_end":322,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_normalize_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460002,"byte_end":460058,"line_start":323,"line_end":323,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460630,"byte_end":460643,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Matrix<N, R, C, S>>::normalize_mut","value":"pub fn normalize_mut(&mut Self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and returns its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and returns its norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460441,"byte_end":460498,"line_start":339,"line_end":339,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460503,"byte_end":460506,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix cannot be SIMD types (see `simd_try_normalize_mut` instead).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460511,"byte_end":460604,"line_start":341,"line_end":341,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460609,"byte_end":460618,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460969,"byte_end":460991,"line_start":355,"line_end":355,"column_start":12,"column_end":34},"name":"simd_try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize_mut","value":"pub fn simd_try_normalize_mut(&mut Self, N::SimdRealField)\n-> SimdOption<N::SimdRealField> where N::Element: Scalar,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N::Element, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and return its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and return its norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460757,"byte_end":460813,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460818,"byte_end":460821,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix can be SIMD types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460826,"byte_end":460877,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460882,"byte_end":460891,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460896,"byte_end":460957,"line_start":354,"line_end":354,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461661,"byte_end":461678,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::try_normalize_mut","value":"pub fn try_normalize_mut(&mut Self, N::RealField) -> Option<N::RealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461457,"byte_end":461550,"line_start":371,"line_end":371,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461555,"byte_end":461558,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If the normalization succeeded, returns the old norm of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461563,"byte_end":461635,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461640,"byte_end":461649,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":463601,"byte_end":463615,"line_start":451,"line_end":451,"column_start":12,"column_end":26},"name":"orthonormalize","qualname":"<VectorN<N, D>>::orthonormalize","value":"pub fn orthonormalize(&mut [Self]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Orthonormalizes the given family of vectors. The largest free family of vectors is moved at\n the beginning of the array and its size is returned. Vectors at an indices larger or equal to\n this length can be modified to an arbitrary value.\n","sig":null,"attributes":[{"value":"/ Orthonormalizes the given family of vectors. The largest free family of vectors is moved at","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":463319,"byte_end":463414,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the beginning of the array and its size is returned. Vectors at an indices larger or equal to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":463419,"byte_end":463516,"line_start":448,"line_end":448,"column_start":5,"column_end":102}},{"value":"/ this length can be modified to an arbitrary value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":463521,"byte_end":463575,"line_start":449,"line_end":449,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":463580,"byte_end":463589,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":464827,"byte_end":464853,"line_start":484,"line_end":484,"column_start":12,"column_end":38},"name":"orthonormal_subspace_basis","qualname":"<VectorN<N, D>>::orthonormal_subspace_basis","value":"pub fn orthonormal_subspace_basis<F>(&[Self], F) where F: FnMut(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies the given closure to each element of the orthonormal basis of the subspace\n orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is\n unspecified.\n","sig":null,"attributes":[{"value":"/ Applies the given closure to each element of the orthonormal basis of the subspace","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":464507,"byte_end":464593,"line_start":479,"line_end":479,"column_start":5,"column_end":91}},{"value":"/ orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":464598,"byte_end":464688,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ unspecified.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":464693,"byte_end":464709,"line_start":481,"line_end":481,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":464806,"byte_end":464815,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468400,"byte_end":468408,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Matrix<N, R, C, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is an empty matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is an empty matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468333,"byte_end":468374,"line_start":13,"line_end":13,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468379,"byte_end":468388,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468580,"byte_end":468589,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"is_square","qualname":"<Matrix<N, R, C, S>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is a square matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is a square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468513,"byte_end":468554,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468559,"byte_end":468568,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":469073,"byte_end":469084,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Matrix<N, R, C, S>>::is_identity","value":"pub fn is_identity(&Self, N::Epsilon) -> bool where N: Zero + One +\nRelativeEq, N::Epsilon: Copy","parent":null,"children":[],"decl_id":null,"docs":" Indicated if this is the identity matrix within a relative error of `eps`.","sig":null,"attributes":[{"value":"/ Indicated if this is the identity matrix within a relative error of `eps`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468769,"byte_end":468847,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468852,"byte_end":468855,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the matrix is diagonal, this checks that diagonal elements (i.e. at coordinates `(i, i)`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468860,"byte_end":468955,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ for i from `0` to `min(R, C)`) are equal one; and that all other elements are zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468960,"byte_end":469047,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":469052,"byte_end":469061,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470769,"byte_end":470782,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"is_orthogonal","qualname":"<Matrix<N, R, C, S>>::is_orthogonal","value":"pub fn is_orthogonal(&Self, N::Epsilon) -> bool where N: Zero + One +\nClosedAdd + ClosedMul + RelativeEq, S: Storage<N, R, C>, N::Epsilon: Copy,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, C, C>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `Mᵀ × M = Id`.","sig":null,"attributes":[{"value":"/ Checks that `Mᵀ × M = Id`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470578,"byte_end":470611,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470616,"byte_end":470619,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ In this definition `Id` is approximately equal to the identity matrix with a relative error","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470624,"byte_end":470719,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ equal to `eps`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470724,"byte_end":470743,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470748,"byte_end":470757,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471292,"byte_end":471313,"line_start":110,"line_end":110,"column_start":12,"column_end":33},"name":"is_special_orthogonal","qualname":"<SquareMatrix<N, D, S>>::is_special_orthogonal","value":"pub fn is_special_orthogonal(&Self, N) -> bool where D: DimMin<D, Output = D>,\nDefaultAllocator: Allocator<(usize, usize), D>","parent":null,"children":[],"decl_id":null,"docs":" Checks that this matrix is orthogonal and has a determinant equal to 1.\n","sig":null,"attributes":[{"value":"/ Checks that this matrix is orthogonal and has a determinant equal to 1.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471191,"byte_end":471266,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471271,"byte_end":471280,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471614,"byte_end":471627,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<SquareMatrix<N, D, S>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this matrix is invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471540,"byte_end":471588,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471593,"byte_end":471602,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3615},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471951,"byte_end":471957,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Scalar","qualname":"::base::scalar::Scalar","value":"Scalar: Clone + PartialEq + Debug + Any","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3618}],"decl_id":null,"docs":" The basic scalar type for all structures of `nalgebra`.","sig":null,"attributes":[{"value":"/ The basic scalar type for all structures of `nalgebra`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471800,"byte_end":471859,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471860,"byte_end":471863,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This does not make any assumption on the algebraic properties of `Self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471864,"byte_end":471940,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472153,"byte_end":472155,"line_start":13,"line_end":13,"column_start":8,"column_end":10},"name":"is","qualname":"::base::scalar::Scalar::is","value":"pub fn is<T: Scalar>() -> bool","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Tests if `Self` the same as the type `T`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471997,"byte_end":472006,"line_start":9,"line_end":9,"column_start":5,"column_end":14}},{"value":"/ Tests if `Self` the same as the type `T`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472011,"byte_end":472055,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472060,"byte_end":472063,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Typically used to test of `Self` is a f32 or a f64 with `N::is::<f32>()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472068,"byte_end":472145,"line_start":12,"line_end":12,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472373,"byte_end":472386,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"inlined_clone","qualname":"::base::scalar::Scalar::inlined_clone","value":"pub fn inlined_clone(&Self) -> Self","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472240,"byte_end":472257,"line_start":17,"line_end":17,"column_start":5,"column_end":22}},{"value":"/ Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472262,"byte_end":472365,"line_start":18,"line_end":18,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473036,"byte_end":473049,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"compress_rows","qualname":"<Matrix<N, R, C, S>>::compress_rows","value":"pub fn compress_rows<impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N: Fn(VectorSliceN<,\n                                                                                               N,\n                                                                                               R,\n                                                                                               S::RStride,\n                                                                                               S::CStride>)\n                     ->\n                     N>(&Self,\n                        impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N)\n-> RowVectorN<N, C> where DefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a row vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.\n","sig":null,"attributes":[{"value":"/ Returns a row vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":472867,"byte_end":472957,"line_start":8,"line_end":8,"column_start":5,"column_end":95}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":472962,"byte_end":473010,"line_start":9,"line_end":9,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473015,"byte_end":473024,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473821,"byte_end":473837,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"compress_rows_tr","qualname":"<Matrix<N, R, C, S>>::compress_rows_tr","value":"pub fn compress_rows_tr<impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N: Fn(VectorSliceN<,\n                                                                                                  N,\n                                                                                                  R,\n                                                                                                  S::RStride,\n                                                                                                  S::CStride>)\n                        ->\n                        N>(&Self,\n                           impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N)\n-> VectorN<N, C> where DefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a column vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473576,"byte_end":473669,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473674,"byte_end":473722,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473727,"byte_end":473730,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.compress_rows(f).transpose()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473735,"byte_end":473795,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":473800,"byte_end":473809,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":474468,"byte_end":474484,"line_start":58,"line_end":58,"column_start":12,"column_end":28},"name":"compress_columns","qualname":"<Matrix<N, R, C, S>>::compress_columns","value":"pub fn compress_columns<impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>): Fn(&mut VectorN<N,\n                                                                                                                 R>,\n                                                                                                    VectorSliceN<,\n                                                                                                                 N,\n                                                                                                                 R,\n                                                                                                                 S::RStride,\n                                                                                                                 S::CStride>)\n                        ->\n                        ()>(&Self, VectorN<N, R>,\n                            impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>))\n-> VectorN<N, R> where DefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector resulting from the folding of `f` on each column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a column vector resulting from the folding of `f` on each column of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":474350,"byte_end":474442,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":474447,"byte_end":474456,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475284,"byte_end":475287,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"sum","qualname":"<Matrix<N, R, C, S>>::sum","value":"pub fn sum(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the elements of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":474982,"byte_end":475029,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475034,"byte_end":475037,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475042,"byte_end":475055,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475060,"byte_end":475063,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475068,"byte_end":475075,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475080,"byte_end":475110,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475115,"byte_end":475118,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475123,"byte_end":475164,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475169,"byte_end":475211,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.sum(), 21.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475216,"byte_end":475246,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475251,"byte_end":475258,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475263,"byte_end":475272,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475968,"byte_end":475975,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"row_sum","qualname":"<Matrix<N, R, C, S>>::row_sum","value":"pub fn row_sum(&Self) -> RowVectorN<N, C> where\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475372,"byte_end":475415,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475420,"byte_end":475423,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475428,"byte_end":475505,"line_start":100,"line_end":100,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475510,"byte_end":475513,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475518,"byte_end":475531,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475536,"byte_end":475539,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475544,"byte_end":475551,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475556,"byte_end":475599,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{RowVector2, RowVector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475604,"byte_end":475649,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475654,"byte_end":475657,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475662,"byte_end":475703,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475708,"byte_end":475750,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum(), RowVector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475755,"byte_end":475815,"line_start":110,"line_end":110,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475820,"byte_end":475823,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475828,"byte_end":475871,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum(), RowVector2::new(9,12));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475876,"byte_end":475930,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475935,"byte_end":475942,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":475947,"byte_end":475956,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476679,"byte_end":476689,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"row_sum_tr","qualname":"<Matrix<N, R, C, S>>::row_sum_tr","value":"pub fn row_sum_tr(&Self) -> VectorN<N, C> where\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476121,"byte_end":476222,"line_start":123,"line_end":123,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476227,"byte_end":476230,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476235,"byte_end":476248,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476253,"byte_end":476256,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476261,"byte_end":476268,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476273,"byte_end":476316,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476321,"byte_end":476360,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476365,"byte_end":476368,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476373,"byte_end":476414,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476419,"byte_end":476461,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum_tr(), Vector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476466,"byte_end":476526,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476531,"byte_end":476534,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476539,"byte_end":476582,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum_tr(), Vector2::new(9,12));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476587,"byte_end":476641,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476646,"byte_end":476653,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476658,"byte_end":476667,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477332,"byte_end":477342,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"column_sum","qualname":"<Matrix<N, R, C, S>>::column_sum","value":"pub fn column_sum(&Self) -> VectorN<N, R> where\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the columns of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476831,"byte_end":476877,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476882,"byte_end":476885,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476890,"byte_end":476903,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476908,"byte_end":476911,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476916,"byte_end":476923,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476928,"byte_end":476971,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":476976,"byte_end":477015,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477020,"byte_end":477023,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477028,"byte_end":477069,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477074,"byte_end":477116,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_sum(), Vector2::new(6.0, 15.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477121,"byte_end":477177,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477182,"byte_end":477185,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477190,"byte_end":477233,"line_start":158,"line_end":158,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.column_sum(), Vector3::new(3,7,11));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477238,"byte_end":477294,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477299,"byte_end":477306,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477311,"byte_end":477320,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478142,"byte_end":478150,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<N, R, C, S>>::variance","value":"pub fn variance(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the elements of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477752,"byte_end":477804,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477809,"byte_end":477812,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477817,"byte_end":477830,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477835,"byte_end":477838,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477843,"byte_end":477850,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477855,"byte_end":477894,"line_start":184,"line_end":184,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477899,"byte_end":477929,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477934,"byte_end":477937,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477942,"byte_end":477983,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477988,"byte_end":478030,"line_start":188,"line_end":188,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.variance(), 35.0 / 12.0, epsilon = 1.0e-8);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478035,"byte_end":478104,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478109,"byte_end":478116,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478121,"byte_end":478130,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479041,"byte_end":479053,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"row_variance","qualname":"<Matrix<N, R, C, S>>::row_variance","value":"pub fn row_variance(&Self) -> RowVectorN<N, C> where\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478604,"byte_end":478652,"line_start":205,"line_end":205,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478657,"byte_end":478660,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478665,"byte_end":478742,"line_start":207,"line_end":207,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478747,"byte_end":478760,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478765,"byte_end":478768,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478773,"byte_end":478780,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478785,"byte_end":478829,"line_start":211,"line_end":211,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478834,"byte_end":478837,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478842,"byte_end":478883,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478888,"byte_end":478930,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance(), RowVector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":478935,"byte_end":479003,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479008,"byte_end":479015,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479020,"byte_end":479029,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479614,"byte_end":479629,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"row_variance_tr","qualname":"<Matrix<N, R, C, S>>::row_variance_tr","value":"pub fn row_variance_tr(&Self) -> VectorN<N, C> where\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479204,"byte_end":479310,"line_start":225,"line_end":225,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479315,"byte_end":479318,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479323,"byte_end":479336,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479341,"byte_end":479344,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479349,"byte_end":479356,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479361,"byte_end":479402,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479407,"byte_end":479410,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479415,"byte_end":479456,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479461,"byte_end":479503,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance_tr(), Vector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479508,"byte_end":479576,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479581,"byte_end":479588,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479593,"byte_end":479602,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480206,"byte_end":480221,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"column_variance","qualname":"<Matrix<N, R, C, S>>::column_variance","value":"pub fn column_variance(&Self) -> VectorN<N, R> where\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the columns of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479776,"byte_end":479827,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479832,"byte_end":479835,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479840,"byte_end":479853,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479858,"byte_end":479861,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479866,"byte_end":479873,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479878,"byte_end":479917,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479922,"byte_end":479963,"line_start":250,"line_end":250,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479968,"byte_end":479971,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":479976,"byte_end":480017,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480022,"byte_end":480064,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.column_variance(), Vector2::new(2.0 / 3.0, 2.0 / 3.0), epsilon = 1.0e-8);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480069,"byte_end":480168,"line_start":254,"line_end":254,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480173,"byte_end":480180,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480185,"byte_end":480194,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481243,"byte_end":481247,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<N, R, C, S>>::mean","value":"pub fn mean(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the elements of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480940,"byte_end":480988,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":480993,"byte_end":480996,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481001,"byte_end":481014,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481019,"byte_end":481022,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481027,"byte_end":481034,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481039,"byte_end":481069,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481074,"byte_end":481077,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481082,"byte_end":481123,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481128,"byte_end":481170,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.mean(), 3.5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481175,"byte_end":481205,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481210,"byte_end":481217,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481222,"byte_end":481231,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481840,"byte_end":481848,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"row_mean","qualname":"<Matrix<N, R, C, S>>::row_mean","value":"pub fn row_mean(&Self) -> RowVectorN<N, C> where\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481410,"byte_end":481454,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481459,"byte_end":481462,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Use `.row_mean_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481467,"byte_end":481540,"line_start":305,"line_end":305,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481545,"byte_end":481548,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481553,"byte_end":481566,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481571,"byte_end":481574,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481579,"byte_end":481586,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481591,"byte_end":481635,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481640,"byte_end":481643,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481648,"byte_end":481689,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481694,"byte_end":481736,"line_start":313,"line_end":313,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean(), RowVector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481741,"byte_end":481802,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481807,"byte_end":481814,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481819,"byte_end":481828,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482394,"byte_end":482405,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"row_mean_tr","qualname":"<Matrix<N, R, C, S>>::row_mean_tr","value":"pub fn row_mean_tr(&Self) -> VectorN<N, C> where\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":481995,"byte_end":482097,"line_start":324,"line_end":324,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482102,"byte_end":482105,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482110,"byte_end":482123,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482128,"byte_end":482131,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482136,"byte_end":482143,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482148,"byte_end":482189,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482194,"byte_end":482197,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482202,"byte_end":482243,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482248,"byte_end":482290,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean_tr(), Vector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482295,"byte_end":482356,"line_start":333,"line_end":333,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482361,"byte_end":482368,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482373,"byte_end":482382,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482887,"byte_end":482898,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"column_mean","qualname":"<Matrix<N, R, C, S>>::column_mean","value":"pub fn column_mean(&Self) -> VectorN<N, R> where\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the columns of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482548,"byte_end":482595,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482600,"byte_end":482603,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482608,"byte_end":482621,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482626,"byte_end":482629,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482634,"byte_end":482641,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482646,"byte_end":482687,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482692,"byte_end":482695,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482700,"byte_end":482741,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482746,"byte_end":482788,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_mean(), Vector2::new(2.0, 5.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482793,"byte_end":482849,"line_start":352,"line_end":352,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482854,"byte_end":482861,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":482866,"byte_end":482875,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17345},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484031,"byte_end":484033,"line_start":24,"line_end":24,"column_start":15,"column_end":17},"name":"xx","qualname":"<Vector<N, D, S>>::xx","value":"pub fn xx(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17346},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484069,"byte_end":484072,"line_start":25,"line_end":25,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Vector<N, D, S>>::xxx","value":"pub fn xxx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17351},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484111,"byte_end":484113,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xy","qualname":"<Vector<N, D, S>>::xy","value":"pub fn xy(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17352},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484149,"byte_end":484151,"line_start":28,"line_end":28,"column_start":15,"column_end":17},"name":"yx","qualname":"<Vector<N, D, S>>::yx","value":"pub fn yx(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17353},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484187,"byte_end":484189,"line_start":29,"line_end":29,"column_start":15,"column_end":17},"name":"yy","qualname":"<Vector<N, D, S>>::yy","value":"pub fn yy(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17354},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484225,"byte_end":484228,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Vector<N, D, S>>::xxy","value":"pub fn xxy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17355},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484266,"byte_end":484269,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Vector<N, D, S>>::xyx","value":"pub fn xyx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17356},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484307,"byte_end":484310,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Vector<N, D, S>>::xyy","value":"pub fn xyy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17357},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484348,"byte_end":484351,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Vector<N, D, S>>::yxx","value":"pub fn yxx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17358},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484389,"byte_end":484392,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Vector<N, D, S>>::yxy","value":"pub fn yxy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17359},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484430,"byte_end":484433,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Vector<N, D, S>>::yyx","value":"pub fn yyx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17360},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484471,"byte_end":484474,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Vector<N, D, S>>::yyy","value":"pub fn yyy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17365},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484513,"byte_end":484515,"line_start":38,"line_end":38,"column_start":15,"column_end":17},"name":"xz","qualname":"<Vector<N, D, S>>::xz","value":"pub fn xz(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17366},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484551,"byte_end":484553,"line_start":39,"line_end":39,"column_start":15,"column_end":17},"name":"yz","qualname":"<Vector<N, D, S>>::yz","value":"pub fn yz(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17367},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484589,"byte_end":484591,"line_start":40,"line_end":40,"column_start":15,"column_end":17},"name":"zx","qualname":"<Vector<N, D, S>>::zx","value":"pub fn zx(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17368},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484627,"byte_end":484629,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"zy","qualname":"<Vector<N, D, S>>::zy","value":"pub fn zy(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17369},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484665,"byte_end":484667,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"zz","qualname":"<Vector<N, D, S>>::zz","value":"pub fn zz(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17370},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484703,"byte_end":484706,"line_start":43,"line_end":43,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Vector<N, D, S>>::xxz","value":"pub fn xxz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17371},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484744,"byte_end":484747,"line_start":44,"line_end":44,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Vector<N, D, S>>::xyz","value":"pub fn xyz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17372},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484785,"byte_end":484788,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Vector<N, D, S>>::xzx","value":"pub fn xzx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17373},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484826,"byte_end":484829,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Vector<N, D, S>>::xzy","value":"pub fn xzy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17374},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484867,"byte_end":484870,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Vector<N, D, S>>::xzz","value":"pub fn xzz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17375},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484908,"byte_end":484911,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Vector<N, D, S>>::yxz","value":"pub fn yxz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17376},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484949,"byte_end":484952,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Vector<N, D, S>>::yyz","value":"pub fn yyz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17377},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":484990,"byte_end":484993,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Vector<N, D, S>>::yzx","value":"pub fn yzx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17378},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485031,"byte_end":485034,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Vector<N, D, S>>::yzy","value":"pub fn yzy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17379},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485072,"byte_end":485075,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Vector<N, D, S>>::yzz","value":"pub fn yzz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17380},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485113,"byte_end":485116,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Vector<N, D, S>>::zxx","value":"pub fn zxx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17381},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485154,"byte_end":485157,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Vector<N, D, S>>::zxy","value":"pub fn zxy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17382},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485195,"byte_end":485198,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Vector<N, D, S>>::zxz","value":"pub fn zxz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17383},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485236,"byte_end":485239,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Vector<N, D, S>>::zyx","value":"pub fn zyx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17384},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485277,"byte_end":485280,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Vector<N, D, S>>::zyy","value":"pub fn zyy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17385},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485318,"byte_end":485321,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Vector<N, D, S>>::zyz","value":"pub fn zyz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17386},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485359,"byte_end":485362,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Vector<N, D, S>>::zzx","value":"pub fn zzx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17387},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485400,"byte_end":485403,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Vector<N, D, S>>::zzy","value":"pub fn zzy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17388},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":485441,"byte_end":485444,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Vector<N, D, S>>::zzz","value":"pub fn zzz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483722,"byte_end":483772,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/swizzle.rs","byte_start":483793,"byte_end":483802,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":17389},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":486172,"byte_end":486176,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Unit","qualname":"::base::unit::Unit","value":"Unit {  }","parent":null,"children":[{"krate":0,"index":17391}],"decl_id":null,"docs":" A wrapper that ensures the underlying algebraic entity has a unit norm.","sig":null,"attributes":[{"value":"/ A wrapper that ensures the underlying algebraic entity has a unit norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":485914,"byte_end":485989,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":485990,"byte_end":485993,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `.as_ref()` or `.into_inner()` to obtain the underlying value by-reference or by-move.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":485994,"byte_end":486088,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"repr(transparent)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":486089,"byte_end":486109,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":3709},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487225,"byte_end":487231,"line_start":61,"line_end":61,"column_start":11,"column_end":17},"name":"Normed","qualname":"::base::unit::Normed","value":"Normed","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714}],"decl_id":null,"docs":" Trait implemented by entities scan be be normalized and put in an `Unit` struct.\n","sig":null,"attributes":[{"value":"/ Trait implemented by entities scan be be normalized and put in an `Unit` struct.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487130,"byte_end":487214,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":3710},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487273,"byte_end":487277,"line_start":63,"line_end":63,"column_start":10,"column_end":14},"name":"Norm","qualname":"::base::unit::Normed::Norm","value":"type Norm: SimdRealField;","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" The type of the norm.\n","sig":null,"attributes":[{"value":"/ The type of the norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487238,"byte_end":487263,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487328,"byte_end":487332,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::unit::Normed::norm","value":"pub fn norm(&Self) -> Self::Norm","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Computes the norm.\n","sig":null,"attributes":[{"value":"/ Computes the norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487298,"byte_end":487320,"line_start":64,"line_end":64,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487397,"byte_end":487409,"line_start":67,"line_end":67,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::base::unit::Normed::norm_squared","value":"pub fn norm_squared(&Self) -> Self::Norm","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Computes the squared norm.\n","sig":null,"attributes":[{"value":"/ Computes the squared norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487359,"byte_end":487389,"line_start":66,"line_end":66,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487469,"byte_end":487478,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"scale_mut","qualname":"::base::unit::Normed::scale_mut","value":"pub fn scale_mut(&mut Self, Self::Norm)","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Multiply `self` by n.\n","sig":null,"attributes":[{"value":"/ Multiply `self` by n.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487436,"byte_end":487461,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487542,"byte_end":487553,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"unscale_mut","qualname":"::base::unit::Normed::unscale_mut","value":"pub fn unscale_mut(&mut Self, Self::Norm)","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Divides `self` by n.\n","sig":null,"attributes":[{"value":"/ Divides `self` by n.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487510,"byte_end":487534,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487715,"byte_end":487728,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"new_normalize","qualname":"<Unit<T>>::new_normalize","value":"pub fn new_normalize(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487614,"byte_end":487689,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487694,"byte_end":487703,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487987,"byte_end":487994,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Unit<T>>::try_new","value":"pub fn try_new(T, T::Norm) -> Option<Self> where T::Norm: RealField","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","sig":null,"attributes":[{"value":"/ Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487795,"byte_end":487882,"line_start":81,"line_end":81,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487887,"byte_end":487890,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487895,"byte_end":487961,"line_start":83,"line_end":83,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487966,"byte_end":487975,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488273,"byte_end":488284,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"new_and_get","qualname":"<Unit<T>>::new_and_get","value":"pub fn new_and_get(T) -> (Self, T::Norm)","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488159,"byte_end":488247,"line_start":92,"line_end":92,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488252,"byte_end":488261,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488612,"byte_end":488627,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"try_new_and_get","qualname":"<Unit<T>>::try_new_and_get","value":"pub fn try_new_and_get(T, T::Norm) -> Option<(Self, T::Norm)> where\nT::Norm: RealField","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488419,"byte_end":488507,"line_start":100,"line_end":100,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488512,"byte_end":488515,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488520,"byte_end":488586,"line_start":102,"line_end":102,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488591,"byte_end":488600,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489369,"byte_end":489380,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Unit<T>>::renormalize","value":"pub fn renormalize(&mut Self) -> T::Norm","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again. This is useful when repeated computations\n might cause a drift in the norm because of float inaccuracies.","sig":null,"attributes":[{"value":"/ Normalizes this vector again. This is useful when repeated computations","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":488988,"byte_end":489063,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ might cause a drift in the norm because of float inaccuracies.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489068,"byte_end":489134,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489139,"byte_end":489142,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns the norm before re-normalization. See `.renormalize_fast` for a faster alternative","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489147,"byte_end":489241,"line_start":122,"line_end":122,"column_start":5,"column_end":99}},{"value":"/ that may be slightly less accurate if `self` drifted significantly from having a unit length.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489246,"byte_end":489343,"line_start":123,"line_end":123,"column_start":5,"column_end":102}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489348,"byte_end":489357,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489711,"byte_end":489727,"line_start":135,"line_end":135,"column_start":12,"column_end":28},"name":"renormalize_fast","qualname":"<Unit<T>>::renormalize_fast","value":"pub fn renormalize_fast(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again using a first-order Taylor approximation.\n This is useful when repeated computations might cause a drift in the norm\n because of float inaccuracies.\n","sig":null,"attributes":[{"value":"/ Normalizes this vector again using a first-order Taylor approximation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489490,"byte_end":489564,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ This is useful when repeated computations might cause a drift in the norm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489569,"byte_end":489646,"line_start":132,"line_end":132,"column_start":5,"column_end":82}},{"value":"/ because of float inaccuracies.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489651,"byte_end":489685,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489690,"byte_end":489699,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490057,"byte_end":490070,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Unit<T>>::new_unchecked","value":"pub fn new_unchecked(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given value, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given value, assuming it is already normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489970,"byte_end":490031,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490036,"byte_end":490045,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490216,"byte_end":490234,"line_start":152,"line_end":152,"column_start":12,"column_end":30},"name":"from_ref_unchecked","qualname":"<Unit<T>>::from_ref_unchecked","value":"pub fn from_ref_unchecked<'a>(&'a T) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given reference, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given reference, assuming it is already normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490125,"byte_end":490190,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490195,"byte_end":490204,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490380,"byte_end":490390,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490319,"byte_end":490354,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490359,"byte_end":490368,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490603,"byte_end":490609,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Unit<T>>::unwrap","value":"pub fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n Deprecated: use [Unit::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490434,"byte_end":490469,"line_start":162,"line_end":162,"column_start":5,"column_end":40}},{"value":"/ Deprecated: use [Unit::into_inner] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490474,"byte_end":490521,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490526,"byte_end":490577,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490582,"byte_end":490591,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490891,"byte_end":490907,"line_start":174,"line_end":174,"column_start":12,"column_end":28},"name":"as_mut_unchecked","qualname":"<Unit<T>>::as_mut_unchecked","value":"pub fn as_mut_unchecked(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value. This is `_unchecked` because modifying\n the underlying value in such a way that it no longer has unit length may lead to unexpected\n results.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value. This is `_unchecked` because modifying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490653,"byte_end":490748,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ the underlying value in such a way that it no longer has unit length may lead to unexpected","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490753,"byte_end":490848,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ results.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490853,"byte_end":490865,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490870,"byte_end":490879,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17415},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":496913,"byte_end":496923,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::base::vec_storage::VecStorage","value":"VecStorage {  }","parent":null,"children":[{"krate":0,"index":17419},{"krate":0,"index":17420},{"krate":0,"index":17421}],"decl_id":null,"docs":" A Vec-based matrix data storage. It may be dynamically-sized.\n","sig":null,"attributes":[{"value":"/ A Vec-based matrix data storage. It may be dynamically-sized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":496713,"byte_end":496778,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":496779,"byte_end":496789,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":3791},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497080,"byte_end":497089,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"MatrixVec","qualname":"::base::vec_storage::MatrixVec","value":"VecStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [VecStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `VecStorage`\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":496994,"byte_end":497041,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ Renamed to [VecStorage].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497042,"byte_end":497070,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497277,"byte_end":497280,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<VecStorage<N, R, C>>::new","value":"pub fn new(R, C, Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamic matrix data storage from the given vector and shape.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamic matrix data storage from the given vector and shape.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497173,"byte_end":497251,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497256,"byte_end":497265,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497569,"byte_end":497575,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<VecStorage<N, R, C>>::as_vec","value":"pub fn as_vec(&Self) -> &Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying data storage.\n","sig":null,"attributes":[{"value":"/ The underlying data storage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497511,"byte_end":497543,"line_start":47,"line_end":47,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497548,"byte_end":497557,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497814,"byte_end":497824,"line_start":58,"line_end":58,"column_start":19,"column_end":29},"name":"as_vec_mut","qualname":"<VecStorage<N, R, C>>::as_vec_mut","value":"pub unsafe fn as_vec_mut(&mut Self) -> &mut Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying mutable data storage.","sig":null,"attributes":[{"value":"/ The underlying mutable data storage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497626,"byte_end":497666,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497671,"byte_end":497674,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because this may cause UB if the size of the vector is changed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497679,"byte_end":497760,"line_start":55,"line_end":55,"column_start":5,"column_end":86}},{"value":"/ by the user.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497765,"byte_end":497781,"line_start":56,"line_end":56,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497786,"byte_end":497795,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498164,"byte_end":498170,"line_start":67,"line_end":67,"column_start":19,"column_end":25},"name":"resize","qualname":"<VecStorage<N, R, C>>::resize","value":"pub unsafe fn resize(Self, usize) -> Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the underlying mutable data storage and unwraps it.","sig":null,"attributes":[{"value":"/ Resizes the underlying mutable data storage and unwraps it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497887,"byte_end":497950,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497955,"byte_end":497958,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If `sz` is larger than the current size, additional elements are uninitialized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497963,"byte_end":498046,"line_start":64,"line_end":64,"column_start":5,"column_end":88}},{"value":"/ If `sz` is smaller than the current size, additional elements are truncated.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498051,"byte_end":498131,"line_start":65,"line_end":65,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498136,"byte_end":498145,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498548,"byte_end":498551,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"len","qualname":"<VecStorage<N, R, C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements on the underlying vector.\n","sig":null,"attributes":[{"value":"/ The number of elements on the underlying vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498470,"byte_end":498522,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498527,"byte_end":498536,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3877},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/helper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::base::helper","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/helper.rs","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":22400},{"krate":0,"index":3881},{"krate":0,"index":3882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3882},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/helper.rs","byte_start":505453,"byte_end":505464,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"reject_rand","qualname":"::base::helper::reject_rand","value":"pub fn reject_rand<G: Rng + ?Sized, F: FnMut(&T) -> bool, T>(&mut G, F) -> T\nwhere Standard: Distribution<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/helper.rs","byte_start":505436,"byte_end":505445,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":3899},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3907},{"krate":0,"index":3961},{"krate":0,"index":4045},{"krate":0,"index":4066},{"krate":0,"index":4112},{"krate":0,"index":4184},{"krate":0,"index":4208},{"krate":0,"index":4273},{"krate":0,"index":4294},{"krate":0,"index":4378},{"krate":0,"index":4387},{"krate":0,"index":4409},{"krate":0,"index":4537},{"krate":0,"index":4575},{"krate":0,"index":4596},{"krate":0,"index":4697},{"krate":0,"index":4885},{"krate":0,"index":5001},{"krate":0,"index":5137},{"krate":0,"index":5153},{"krate":0,"index":5203},{"krate":0,"index":5232},{"krate":0,"index":5297},{"krate":0,"index":5351},{"krate":0,"index":5451},{"krate":0,"index":5559},{"krate":0,"index":5577},{"krate":0,"index":5658},{"krate":0,"index":5679},{"krate":0,"index":5717},{"krate":0,"index":5820},{"krate":0,"index":5845},{"krate":0,"index":5870},{"krate":0,"index":5891},{"krate":0,"index":5990},{"krate":0,"index":6011},{"krate":0,"index":6070},{"krate":0,"index":6176},{"krate":0,"index":6214},{"krate":0,"index":6237},{"krate":0,"index":6350},{"krate":0,"index":6368},{"krate":0,"index":6425},{"krate":0,"index":6523},{"krate":0,"index":6561},{"krate":0,"index":6585},{"krate":0,"index":6600},{"krate":0,"index":6727},{"krate":0,"index":6748},{"krate":0,"index":6772},{"krate":0,"index":6811},{"krate":0,"index":6865},{"krate":0,"index":6893},{"krate":0,"index":6946},{"krate":0,"index":7019},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089},{"krate":0,"index":7090},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7103}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for points and usual transformations\n (rotations, isometries, etc.)\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Data structures for points and usual transformations","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":505645,"byte_end":505741,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ (rotations, isometries, etc.)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/mod.rs","byte_start":505742,"byte_end":505775,"line_start":2,"line_end":2,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517084,"byte_end":517100,"line_start":8,"line_end":8,"column_start":11,"column_end":27},"name":"AbstractRotation","qualname":"::geometry::abstract_rotation::AbstractRotation","value":"AbstractRotation<N: Scalar, D: DimName>: PartialEq + ClosedMul + Clone","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932}],"decl_id":null,"docs":" Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":516981,"byte_end":517073,"line_start":7,"line_end":7,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517195,"byte_end":517203,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"identity","qualname":"::geometry::abstract_rotation::AbstractRotation::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" The rotation identity.\n","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517161,"byte_end":517187,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517252,"byte_end":517259,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"inverse","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse","value":"pub fn inverse(&Self) -> Self","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" The rotation inverse.\n","sig":null,"attributes":[{"value":"/ The rotation inverse.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517219,"byte_end":517244,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517321,"byte_end":517332,"line_start":14,"line_end":14,"column_start":8,"column_end":19},"name":"inverse_mut","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Change `self` to its inverse.\n","sig":null,"attributes":[{"value":"/ Change `self` to its inverse.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517280,"byte_end":517313,"line_start":13,"line_end":13,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517400,"byte_end":517416,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517349,"byte_end":517392,"line_start":15,"line_end":15,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517567,"byte_end":517582,"line_start":20,"line_end":20,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517517,"byte_end":517559,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517738,"byte_end":517762,"line_start":24,"line_end":24,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517679,"byte_end":517730,"line_start":23,"line_end":23,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517921,"byte_end":517944,"line_start":28,"line_end":28,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517863,"byte_end":517913,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":17451},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521505,"byte_end":521510,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::point::Point","value":"Point { coords }","parent":null,"children":[{"krate":0,"index":17454}],"decl_id":null,"docs":" A point in a n-dimensional euclidean space.\n","sig":null,"attributes":[{"value":"/ A point in a n-dimensional euclidean space.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521411,"byte_end":521458,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521459,"byte_end":521469,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17454},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521661,"byte_end":521667,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::point::Point::coords","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":17451},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the shift from the origin.\n","sig":null,"attributes":[{"value":"/ The coordinates of this point, i.e., the shift from the origin.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521585,"byte_end":521652,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524108,"byte_end":524122,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> VectorN<N, DimNameSum<D, U1>> where N: One,\nD: DimNameAdd<U1>, DefaultAllocator: Allocator<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the\n end of it.","sig":null,"attributes":[{"value":"/ Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523530,"byte_end":523622,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/ end of it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523627,"byte_end":523641,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523646,"byte_end":523649,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is the same as `.into()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523654,"byte_end":523688,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523693,"byte_end":523696,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523701,"byte_end":523714,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523719,"byte_end":523726,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523731,"byte_end":523786,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ let p = Point2::new(10.0, 20.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523791,"byte_end":523827,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector3::new(10.0, 20.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523832,"byte_end":523898,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523903,"byte_end":523906,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523911,"byte_end":523946,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523951,"byte_end":523993,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector4::new(10.0, 20.0, 30.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523998,"byte_end":524070,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524075,"byte_end":524082,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524087,"byte_end":524096,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524637,"byte_end":524653,"line_start":137,"line_end":137,"column_start":12,"column_end":28},"name":"from_coordinates","qualname":"<Point<N, D>>::from_coordinates","value":"pub fn from_coordinates(VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with the given coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with the given coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524499,"byte_end":524550,"line_start":134,"line_end":134,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"Use Point::from(vector) instead.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524555,"byte_end":524611,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524616,"byte_end":524625,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525070,"byte_end":525073,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<Point<N, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of this point.","sig":null,"attributes":[{"value":"/ The dimension of this point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524722,"byte_end":524754,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524759,"byte_end":524762,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524767,"byte_end":524780,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524785,"byte_end":524792,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524797,"byte_end":524834,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524839,"byte_end":524873,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.len(), 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524878,"byte_end":524905,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524910,"byte_end":524913,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524918,"byte_end":524953,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":524958,"byte_end":525000,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.len(), 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525005,"byte_end":525032,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525037,"byte_end":525044,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525049,"byte_end":525058,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525362,"byte_end":525368,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"stride","qualname":"<Point<N, D>>::stride","value":"pub fn stride(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The stride of this point. This is the number of buffer element separating each component of\n this point.\n","sig":null,"attributes":[{"value":"/ The stride of this point. This is the number of buffer element separating each component of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525129,"byte_end":525224,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ this point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525229,"byte_end":525244,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525249,"byte_end":525258,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This methods is no longer significant and will always return 1.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525263,"byte_end":525350,"line_start":161,"line_end":161,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525825,"byte_end":525829,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"iter","qualname":"<Point<N, D>>::iter","value":"pub fn iter(&Self)\n-> MatrixIter<, N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Iterates through this point coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525430,"byte_end":525474,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525479,"byte_end":525482,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525487,"byte_end":525500,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525505,"byte_end":525512,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525517,"byte_end":525544,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525549,"byte_end":525588,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ let mut it = p.iter().cloned();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525593,"byte_end":525628,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525633,"byte_end":525636,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(it.next(), Some(1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525641,"byte_end":525678,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525683,"byte_end":525720,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525725,"byte_end":525762,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525767,"byte_end":525799,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525804,"byte_end":525813,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526055,"byte_end":526068,"line_start":185,"line_end":185,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Point<N, D>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":525948,"byte_end":526022,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526027,"byte_end":526036,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526475,"byte_end":526483,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Point<N, D>>::iter_mut","value":"pub fn iter_mut(&mut Self)\n-> MatrixIterMut<, N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Mutably iterates through this point coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526143,"byte_end":526195,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526200,"byte_end":526203,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526208,"byte_end":526221,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526226,"byte_end":526233,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526238,"byte_end":526265,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526270,"byte_end":526313,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526318,"byte_end":526321,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ for e in p.iter_mut() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526326,"byte_end":526353,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     *e *= 10.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526358,"byte_end":526377,"line_start":197,"line_end":197,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526382,"byte_end":526387,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526392,"byte_end":526395,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526400,"byte_end":526449,"line_start":200,"line_end":200,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526454,"byte_end":526463,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526743,"byte_end":526760,"line_start":210,"line_end":210,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Point<N, D>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526628,"byte_end":526710,"line_start":208,"line_end":208,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526715,"byte_end":526724,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526925,"byte_end":526939,"line_start":216,"line_end":216,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Point<N, D>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526847,"byte_end":526892,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":526897,"byte_end":526906,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4038},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529485,"byte_end":529488,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"inf","qualname":"<Point<N, D>>::inf","value":"pub fn inf(&Self, &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529395,"byte_end":529459,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529464,"byte_end":529473,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4039},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529675,"byte_end":529678,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"sup","qualname":"<Point<N, D>>::sup","value":"pub fn sup(&Self, &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529584,"byte_end":529649,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529654,"byte_end":529663,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529851,"byte_end":529858,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Point<N, D>>::inf_sup","value":"pub fn inf_sup(&Self, &Self) -> (Point<N, D>, Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529774,"byte_end":529825,"line_start":338,"line_end":338,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529830,"byte_end":529839,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4054},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530586,"byte_end":530592,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Point1","qualname":"::geometry::point_alias::Point1","value":"Point<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 1-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 1-dimensional column point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530526,"byte_end":530576,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4056},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530672,"byte_end":530678,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Point2","qualname":"::geometry::point_alias::Point2","value":"Point<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 2-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 2-dimensional column point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530612,"byte_end":530662,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4058},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530758,"byte_end":530764,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Point3","qualname":"::geometry::point_alias::Point3","value":"Point<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 3-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 3-dimensional column point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530698,"byte_end":530748,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4060},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530844,"byte_end":530850,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Point4","qualname":"::geometry::point_alias::Point4","value":"Point<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 4-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 4-dimensional column point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530784,"byte_end":530834,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4062},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530930,"byte_end":530936,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Point5","qualname":"::geometry::point_alias::Point5","value":"Point<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 5-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 5-dimensional column point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530870,"byte_end":530920,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4064},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":531016,"byte_end":531022,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Point6","qualname":"::geometry::point_alias::Point6","value":"Point<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 6-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 6-dimensional column point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_alias.rs","byte_start":530956,"byte_end":531006,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531625,"byte_end":531642,"line_start":21,"line_end":21,"column_start":19,"column_end":36},"name":"new_uninitialized","qualname":"<Point<N, D>>::new_uninitialized","value":"pub unsafe fn new_uninitialized() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with uninitialized coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with uninitialized coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531537,"byte_end":531592,"line_start":19,"line_end":19,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531597,"byte_end":531606,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532271,"byte_end":532277,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point<N, D>>::origin","value":"pub fn origin() -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with all coordinates equal to zero.","sig":null,"attributes":[{"value":"/ Creates a new point with all coordinates equal to zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531715,"byte_end":531774,"line_start":25,"line_end":25,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531779,"byte_end":531782,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531787,"byte_end":531800,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531805,"byte_end":531808,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531813,"byte_end":531820,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531825,"byte_end":531862,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531867,"byte_end":531902,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ // The explicit crate::<f32> type annotation may not always be needed,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531907,"byte_end":531981,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ // depending on the context of type inference.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531986,"byte_end":532036,"line_start":33,"line_end":33,"column_start":5,"column_end":55}},{"value":"/ let pt = Point2::<f32>::origin();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532041,"byte_end":532078,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532083,"byte_end":532123,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532128,"byte_end":532131,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::<f32>::origin();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532136,"byte_end":532173,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0 && pt.z == 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532178,"byte_end":532233,"line_start":38,"line_end":38,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532238,"byte_end":532245,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532250,"byte_end":532259,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532794,"byte_end":532804,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Point<N, D>>::from_slice","value":"pub fn from_slice(&[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from a slice.","sig":null,"attributes":[{"value":"/ Creates a new point from a slice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532385,"byte_end":532422,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532427,"byte_end":532430,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532435,"byte_end":532448,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532453,"byte_end":532456,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532461,"byte_end":532468,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532473,"byte_end":532510,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/ let data = [ 1.0, 2.0, 3.0 ];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532515,"byte_end":532548,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532553,"byte_end":532556,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::from_slice(&data[..2]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532561,"byte_end":532605,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(pt, Point2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532610,"byte_end":532652,"line_start":57,"line_end":57,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532657,"byte_end":532660,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::from_slice(&data);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532665,"byte_end":532704,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(pt, Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532709,"byte_end":532756,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532761,"byte_end":532768,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532773,"byte_end":532782,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534161,"byte_end":534177,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point<N, D>>::from_homogeneous","value":"pub fn from_homogeneous(VectorN<N, DimNameSum<D, U1>>) -> Option<Self> where\nN: Scalar + Zero + One + ClosedDiv, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from its homogeneous vector representation.","sig":null,"attributes":[{"value":"/ Creates a new point from its homogeneous vector representation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532900,"byte_end":532967,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532972,"byte_end":532975,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ In practice, this builds a D-dimensional points with the same first D component as `v`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":532980,"byte_end":533070,"line_start":69,"line_end":69,"column_start":5,"column_end":95}},{"value":"/ divided by the last component of `v`. Returns `None` if this divisor is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533075,"byte_end":533156,"line_start":70,"line_end":70,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533161,"byte_end":533164,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533169,"byte_end":533182,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533187,"byte_end":533190,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533195,"byte_end":533202,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533207,"byte_end":533262,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533267,"byte_end":533270,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533275,"byte_end":533325,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533330,"byte_end":533376,"line_start":78,"line_end":78,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(1.0, 2.0, 3.0)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533381,"byte_end":533434,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533439,"byte_end":533442,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // All component of the result will be divided by the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533447,"byte_end":533504,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/ // last component of the vector, here 2.0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533509,"byte_end":533556,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533561,"byte_end":533611,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533616,"byte_end":533662,"line_start":84,"line_end":84,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(0.5, 1.0, 1.5)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533667,"byte_end":533720,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533725,"byte_end":533728,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Fails because the last component is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533733,"byte_end":533781,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533786,"byte_end":533836,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533841,"byte_end":533887,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/ assert!(pt.is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533892,"byte_end":533918,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533923,"byte_end":533926,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Works also in other dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533931,"byte_end":533969,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ let coords = Vector3::new(1.0, 2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":533974,"byte_end":534019,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/ let pt = Point2::from_homogeneous(coords);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534024,"byte_end":534070,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point2::new(1.0, 2.0)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534075,"byte_end":534123,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534128,"byte_end":534135,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534140,"byte_end":534149,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17841},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":555742,"byte_end":555750,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Rotation","qualname":"::geometry::rotation::Rotation","value":"Rotation {  }","parent":null,"children":[{"krate":0,"index":17844}],"decl_id":null,"docs":" A rotation matrix.\n","sig":null,"attributes":[{"value":"/ A rotation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":555680,"byte_end":555702,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":555703,"byte_end":555713,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558772,"byte_end":558778,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Rotation<N, D>>::matrix","value":"pub fn matrix(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":557968,"byte_end":558041,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558046,"byte_end":558049,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558054,"byte_end":558067,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558072,"byte_end":558079,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558084,"byte_end":558154,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558159,"byte_end":558178,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558183,"byte_end":558268,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558273,"byte_end":558331,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558336,"byte_end":558394,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558399,"byte_end":558458,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558463,"byte_end":558503,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558508,"byte_end":558511,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558516,"byte_end":558519,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558524,"byte_end":558577,"line_start":131,"line_end":131,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558582,"byte_end":558630,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558635,"byte_end":558689,"line_start":133,"line_end":133,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558694,"byte_end":558734,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558739,"byte_end":558746,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558751,"byte_end":558760,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559019,"byte_end":559029,"line_start":144,"line_end":144,"column_start":19,"column_end":29},"name":"matrix_mut","qualname":"<Rotation<N, D>>::matrix_mut","value":"pub unsafe fn matrix_mut(&mut Self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558838,"byte_end":558919,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558924,"byte_end":558933,"line_start":142,"line_end":142,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `.matrix_mut_unchecked()` instead.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":558938,"byte_end":559000,"line_start":143,"line_end":143,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559468,"byte_end":559488,"line_start":154,"line_end":154,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Rotation<N, D>>::matrix_mut_unchecked","value":"pub fn matrix_mut_unchecked(&mut Self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559101,"byte_end":559182,"line_start":148,"line_end":148,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559187,"byte_end":559190,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This is suffixed by \"_unchecked\" because this allows the user to replace the matrix by another one that is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559195,"byte_end":559305,"line_start":150,"line_end":150,"column_start":5,"column_end":115}},{"value":"/ non-square, non-inversible, or non-orthonormal. If one of those properties is broken,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559310,"byte_end":559399,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/ subsequent method calls may be UB.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559404,"byte_end":559442,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559447,"byte_end":559456,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560377,"byte_end":560387,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Rotation<N, D>>::into_inner","value":"pub fn into_inner(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559560,"byte_end":559594,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559599,"byte_end":559602,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559607,"byte_end":559620,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559625,"byte_end":559632,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559637,"byte_end":559707,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559712,"byte_end":559731,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559736,"byte_end":559821,"line_start":164,"line_end":164,"column_start":5,"column_end":90}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559826,"byte_end":559857,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559862,"byte_end":559920,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559925,"byte_end":559983,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":559988,"byte_end":560047,"line_start":168,"line_end":168,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560052,"byte_end":560082,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560087,"byte_end":560090,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560095,"byte_end":560098,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560103,"byte_end":560156,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560161,"byte_end":560192,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560197,"byte_end":560245,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560250,"byte_end":560304,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560309,"byte_end":560339,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560344,"byte_end":560351,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560356,"byte_end":560365,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560616,"byte_end":560622,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Rotation<N, D>>::unwrap","value":"pub fn unwrap(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.\n Deprecated: Use [Rotation::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560444,"byte_end":560478,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ Deprecated: Use [Rotation::into_inner] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560483,"byte_end":560534,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560539,"byte_end":560590,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560595,"byte_end":560604,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561717,"byte_end":561731,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Rotation<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where N: Zero +\nOne, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this rotation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this rotation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560679,"byte_end":560760,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560765,"byte_end":560768,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.into()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560773,"byte_end":560811,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560816,"byte_end":560819,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560824,"byte_end":560837,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560842,"byte_end":560849,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560854,"byte_end":560924,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560929,"byte_end":560948,"line_start":198,"line_end":198,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":560953,"byte_end":561038,"line_start":199,"line_end":199,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561043,"byte_end":561106,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561111,"byte_end":561174,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561179,"byte_end":561242,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561247,"byte_end":561311,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561316,"byte_end":561363,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561368,"byte_end":561371,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561376,"byte_end":561379,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561384,"byte_end":561437,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561442,"byte_end":561500,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561505,"byte_end":561563,"line_start":209,"line_end":209,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561568,"byte_end":561627,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561632,"byte_end":561679,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561684,"byte_end":561691,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":561696,"byte_end":561705,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563106,"byte_end":563127,"line_start":252,"line_end":252,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Rotation<N, D>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from the given square matrix.","sig":null,"attributes":[{"value":"/ Creates a new rotation from the given square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562304,"byte_end":562360,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562365,"byte_end":562368,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The matrix squareness is checked but not its orthonormality.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562373,"byte_end":562437,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562442,"byte_end":562445,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562450,"byte_end":562463,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562468,"byte_end":562475,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Matrix2, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562480,"byte_end":562541,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562546,"byte_end":562565,"line_start":236,"line_end":236,"column_start":5,"column_end":24}},{"value":"/ let mat = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562570,"byte_end":562623,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/                        0.5,       0.8660254, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562628,"byte_end":562681,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/                        0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562686,"byte_end":562740,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/ let rot = Rotation3::from_matrix_unchecked(mat);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562745,"byte_end":562797,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562802,"byte_end":562805,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562810,"byte_end":562845,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562850,"byte_end":562853,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562858,"byte_end":562861,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562866,"byte_end":562909,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/                        0.5,       0.8660254);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562914,"byte_end":562963,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/ let rot = Rotation2::from_matrix_unchecked(mat);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":562968,"byte_end":563020,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563025,"byte_end":563028,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563033,"byte_end":563068,"line_start":249,"line_end":249,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563073,"byte_end":563080,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563085,"byte_end":563094,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564199,"byte_end":564208,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Rotation<N, D>>::transpose","value":"pub fn transpose(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563325,"byte_end":563347,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563352,"byte_end":563355,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563360,"byte_end":563443,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563448,"byte_end":563451,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563456,"byte_end":563469,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563474,"byte_end":563481,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563486,"byte_end":563525,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563530,"byte_end":563582,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563587,"byte_end":563645,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563650,"byte_end":563683,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563688,"byte_end":563767,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563772,"byte_end":563851,"line_start":272,"line_end":272,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563856,"byte_end":563859,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563864,"byte_end":563898,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563903,"byte_end":563936,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":563941,"byte_end":564020,"line_start":276,"line_end":276,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564025,"byte_end":564104,"line_start":277,"line_end":277,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564109,"byte_end":564116,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564121,"byte_end":564130,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564135,"byte_end":564187,"line_start":280,"line_end":280,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565147,"byte_end":565154,"line_start":305,"line_end":305,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation<N, D>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564298,"byte_end":564317,"line_start":285,"line_end":285,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564322,"byte_end":564325,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564330,"byte_end":564415,"line_start":287,"line_end":287,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564420,"byte_end":564423,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564428,"byte_end":564441,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564446,"byte_end":564453,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564458,"byte_end":564497,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564502,"byte_end":564554,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564559,"byte_end":564617,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564622,"byte_end":564650,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564655,"byte_end":564731,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564736,"byte_end":564812,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564817,"byte_end":564820,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564825,"byte_end":564859,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564864,"byte_end":564892,"line_start":299,"line_end":299,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564897,"byte_end":564973,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":564978,"byte_end":565054,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565059,"byte_end":565066,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565071,"byte_end":565080,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565085,"byte_end":565135,"line_start":304,"line_end":304,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566158,"byte_end":566171,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Rotation<N, D>>::transpose_mut","value":"pub fn transpose_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` in-place.","sig":null,"attributes":[{"value":"/ Transposes `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565208,"byte_end":565239,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565244,"byte_end":565247,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565252,"byte_end":565339,"line_start":311,"line_end":311,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565344,"byte_end":565347,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565352,"byte_end":565365,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565370,"byte_end":565377,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565382,"byte_end":565421,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565426,"byte_end":565478,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565483,"byte_end":565541,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/ let mut tr_rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565546,"byte_end":565611,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565616,"byte_end":565643,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565648,"byte_end":565651,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565656,"byte_end":565735,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565740,"byte_end":565819,"line_start":322,"line_end":322,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565824,"byte_end":565827,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565832,"byte_end":565866,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/ let mut tr_rot = Rotation2::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565871,"byte_end":565912,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565917,"byte_end":565944,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565949,"byte_end":565952,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":565957,"byte_end":566036,"line_start":328,"line_end":328,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566041,"byte_end":566120,"line_start":329,"line_end":329,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566125,"byte_end":566132,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566137,"byte_end":566146,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567153,"byte_end":567164,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Rotation<N, D>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566232,"byte_end":566260,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566265,"byte_end":566268,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566273,"byte_end":566362,"line_start":338,"line_end":338,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566367,"byte_end":566370,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566375,"byte_end":566388,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566393,"byte_end":566400,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566405,"byte_end":566444,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566449,"byte_end":566501,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566506,"byte_end":566564,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/ let mut inv = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566569,"byte_end":566631,"line_start":345,"line_end":345,"column_start":5,"column_end":67}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566636,"byte_end":566658,"line_start":346,"line_end":346,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566663,"byte_end":566666,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566671,"byte_end":566747,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566752,"byte_end":566828,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566833,"byte_end":566836,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566841,"byte_end":566875,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let mut inv = Rotation2::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566880,"byte_end":566918,"line_start":352,"line_end":352,"column_start":5,"column_end":43}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566923,"byte_end":566945,"line_start":353,"line_end":353,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566950,"byte_end":566953,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":566958,"byte_end":567034,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567039,"byte_end":567115,"line_start":356,"line_end":356,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567120,"byte_end":567127,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567132,"byte_end":567141,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567947,"byte_end":567962,"line_start":384,"line_end":384,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation<N, D>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point.","sig":null,"attributes":[{"value":"/ Rotate the given point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567369,"byte_end":567396,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567401,"byte_end":567404,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567409,"byte_end":567464,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567469,"byte_end":567472,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567477,"byte_end":567490,"line_start":373,"line_end":373,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567495,"byte_end":567502,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567507,"byte_end":567546,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567551,"byte_end":567570,"line_start":376,"line_end":376,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567575,"byte_end":567651,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567656,"byte_end":567724,"line_start":378,"line_end":378,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567729,"byte_end":567806,"line_start":379,"line_end":379,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567811,"byte_end":567814,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567819,"byte_end":567909,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567914,"byte_end":567921,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567926,"byte_end":567935,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568609,"byte_end":568625,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation<N, D>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568034,"byte_end":568062,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568067,"byte_end":568070,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568075,"byte_end":568129,"line_start":390,"line_end":390,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568134,"byte_end":568137,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568142,"byte_end":568155,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568160,"byte_end":568167,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568172,"byte_end":568211,"line_start":394,"line_end":394,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568216,"byte_end":568235,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568240,"byte_end":568308,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568313,"byte_end":568381,"line_start":397,"line_end":397,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568386,"byte_end":568466,"line_start":398,"line_end":398,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568471,"byte_end":568474,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568479,"byte_end":568571,"line_start":400,"line_end":400,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568576,"byte_end":568583,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568588,"byte_end":568597,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569352,"byte_end":569375,"line_start":422,"line_end":422,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Rotation<N, D>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n point.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this rotation. This may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568699,"byte_end":568770,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568775,"byte_end":568846,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/ point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568851,"byte_end":568861,"line_start":409,"line_end":409,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568866,"byte_end":568869,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568874,"byte_end":568887,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568892,"byte_end":568899,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568904,"byte_end":568943,"line_start":413,"line_end":413,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568948,"byte_end":568967,"line_start":414,"line_end":414,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":568972,"byte_end":569048,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569053,"byte_end":569121,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569126,"byte_end":569211,"line_start":417,"line_end":417,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569216,"byte_end":569219,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569224,"byte_end":569314,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569319,"byte_end":569326,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569331,"byte_end":569340,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570144,"byte_end":570168,"line_start":441,"line_end":441,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Rotation<N, D>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569492,"byte_end":569564,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569569,"byte_end":569640,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569645,"byte_end":569656,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569661,"byte_end":569664,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569669,"byte_end":569682,"line_start":430,"line_end":430,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569687,"byte_end":569694,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569699,"byte_end":569738,"line_start":432,"line_end":432,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569743,"byte_end":569762,"line_start":433,"line_end":433,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569767,"byte_end":569835,"line_start":434,"line_end":434,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569840,"byte_end":569908,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":569913,"byte_end":570001,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570006,"byte_end":570009,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570014,"byte_end":570106,"line_start":438,"line_end":438,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570111,"byte_end":570118,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570123,"byte_end":570132,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4383},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_alias.rs","byte_start":572973,"byte_end":572982,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Rotation2","qualname":"::geometry::rotation_alias::Rotation2","value":"Rotation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional rotation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_alias.rs","byte_start":572927,"byte_end":572963,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4385},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_alias.rs","byte_start":573052,"byte_end":573061,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Rotation3","qualname":"::geometry::rotation_alias::Rotation3","value":"Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional rotation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_alias.rs","byte_start":573006,"byte_end":573042,"line_start":8,"line_end":8,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4404},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573797,"byte_end":573805,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation<N, D>>::identity","value":"pub fn identity() -> Rotation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new square identity rotation of the given `dimension`.","sig":null,"attributes":[{"value":"/ Creates a new square identity rotation of the given `dimension`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573432,"byte_end":573500,"line_start":16,"line_end":16,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573505,"byte_end":573508,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573513,"byte_end":573526,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573531,"byte_end":573538,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573543,"byte_end":573574,"line_start":20,"line_end":20,"column_start":5,"column_end":36}},{"value":"/ let rot1 = Quaternion::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573579,"byte_end":573617,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/ let rot2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573622,"byte_end":573673,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573678,"byte_end":573681,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573686,"byte_end":573720,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573725,"byte_end":573759,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573764,"byte_end":573771,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573776,"byte_end":573785,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592804,"byte_end":592807,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592406,"byte_end":592473,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592478,"byte_end":592481,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592486,"byte_end":592499,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592504,"byte_end":592507,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592512,"byte_end":592519,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592524,"byte_end":592563,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592568,"byte_end":592587,"line_start":31,"line_end":31,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592592,"byte_end":592632,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592637,"byte_end":592690,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592695,"byte_end":592698,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592703,"byte_end":592780,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592785,"byte_end":592792,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593234,"byte_end":593250,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation2<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U1>>(Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592957,"byte_end":593058,"line_start":42,"line_end":42,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593063,"byte_end":593066,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593071,"byte_end":593074,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593079,"byte_end":593150,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593155,"byte_end":593208,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593213,"byte_end":593222,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593705,"byte_end":593716,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation2<N>>::from_matrix","value":"pub fn from_matrix(&Matrix2<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593354,"byte_end":593447,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593452,"byte_end":593455,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593460,"byte_end":593532,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593537,"byte_end":593586,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593591,"byte_end":593693,"line_start":56,"line_end":56,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594666,"byte_end":594681,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation2<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix2<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593866,"byte_end":593959,"line_start":64,"line_end":64,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593964,"byte_end":593967,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":593972,"byte_end":594074,"line_start":66,"line_end":66,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594079,"byte_end":594082,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594087,"byte_end":594103,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594108,"byte_end":594111,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594116,"byte_end":594188,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594193,"byte_end":594284,"line_start":71,"line_end":71,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594289,"byte_end":594392,"line_start":72,"line_end":72,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594397,"byte_end":594510,"line_start":73,"line_end":73,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `Rotation2::identity()` if no other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594515,"byte_end":594614,"line_start":74,"line_end":74,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":594619,"byte_end":594654,"line_start":75,"line_end":75,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4634},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595970,"byte_end":595986,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation2<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595396,"byte_end":595469,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595474,"byte_end":595477,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595482,"byte_end":595577,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595582,"byte_end":595585,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595590,"byte_end":595603,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595608,"byte_end":595615,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595620,"byte_end":595659,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595664,"byte_end":595705,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595710,"byte_end":595745,"line_start":109,"line_end":109,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595750,"byte_end":595785,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/ let rot = Rotation2::rotation_between(&a, &b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595790,"byte_end":595840,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595845,"byte_end":595881,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595886,"byte_end":595932,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595937,"byte_end":595944,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":595949,"byte_end":595958,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596904,"byte_end":596927,"line_start":140,"line_end":140,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation2<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>, N)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596235,"byte_end":596323,"line_start":125,"line_end":125,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596328,"byte_end":596367,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596372,"byte_end":596375,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596380,"byte_end":596393,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596398,"byte_end":596405,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596410,"byte_end":596449,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596454,"byte_end":596495,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596500,"byte_end":596535,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596540,"byte_end":596575,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596580,"byte_end":596643,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ let rot5 = Rotation2::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596648,"byte_end":596711,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596716,"byte_end":596799,"line_start":136,"line_end":136,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596804,"byte_end":596866,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596871,"byte_end":596878,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":596883,"byte_end":596892,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4640},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597489,"byte_end":597494,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation2<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle.","sig":null,"attributes":[{"value":"/ The rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597223,"byte_end":597246,"line_start":153,"line_end":153,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597251,"byte_end":597254,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597259,"byte_end":597272,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597277,"byte_end":597284,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597289,"byte_end":597328,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597333,"byte_end":597363,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597368,"byte_end":597403,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597408,"byte_end":597451,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597456,"byte_end":597463,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597468,"byte_end":597477,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597941,"byte_end":597949,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation2<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597584,"byte_end":597650,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597655,"byte_end":597658,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597663,"byte_end":597676,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597681,"byte_end":597688,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597693,"byte_end":597732,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597737,"byte_end":597767,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597772,"byte_end":597807,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597812,"byte_end":597847,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597852,"byte_end":597903,"line_start":175,"line_end":175,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597908,"byte_end":597915,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":597920,"byte_end":597929,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598579,"byte_end":598590,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation2<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598029,"byte_end":598096,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598101,"byte_end":598104,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598109,"byte_end":598180,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598185,"byte_end":598188,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598193,"byte_end":598206,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598211,"byte_end":598218,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598223,"byte_end":598262,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598267,"byte_end":598297,"line_start":189,"line_end":189,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598302,"byte_end":598337,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598342,"byte_end":598377,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598382,"byte_end":598423,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598428,"byte_end":598431,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598436,"byte_end":598481,"line_start":194,"line_end":194,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598486,"byte_end":598541,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598546,"byte_end":598553,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598558,"byte_end":598567,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598872,"byte_end":598883,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation2<N>>::renormalize","value":"pub fn renormalize(&mut Self) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598664,"byte_end":598752,"line_start":202,"line_end":202,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598757,"byte_end":598846,"line_start":203,"line_end":203,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":598851,"byte_end":598860,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599524,"byte_end":599528,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation2<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the angle\n of `self` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the angle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599112,"byte_end":599205,"line_start":215,"line_end":215,"column_start":5,"column_end":98}},{"value":"/ of `self` multiplied by `n`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599210,"byte_end":599242,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599247,"byte_end":599250,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599255,"byte_end":599268,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599273,"byte_end":599280,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599285,"byte_end":599324,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599329,"byte_end":599359,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(0.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599364,"byte_end":599399,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599404,"byte_end":599432,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599437,"byte_end":599486,"line_start":224,"line_end":224,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599491,"byte_end":599498,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599503,"byte_end":599512,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599821,"byte_end":599832,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation2<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599599,"byte_end":599657,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599662,"byte_end":599665,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599670,"byte_end":599741,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599746,"byte_end":599795,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599800,"byte_end":599809,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4653},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601666,"byte_end":601669,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation3<N>>::new","value":"pub fn new<SB: Storage<N, U3>>(Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3 dimensional rotation matrix from an axis and an angle.","sig":null,"attributes":[{"value":"/ Builds a 3 dimensional rotation matrix from an axis and an angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600644,"byte_end":600713,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600718,"byte_end":600721,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600726,"byte_end":600741,"line_start":276,"line_end":276,"column_start":5,"column_end":20}},{"value":"/   * `axisangle` - A vector representing the rotation. Its magnitude is the amount of rotation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600746,"byte_end":600843,"line_start":277,"line_end":277,"column_start":5,"column_end":102}},{"value":"/   in radian. Its direction is the axis of rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600848,"byte_end":600903,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600908,"byte_end":600911,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600916,"byte_end":600929,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600934,"byte_end":600941,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600946,"byte_end":600985,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600990,"byte_end":601009,"line_start":283,"line_end":283,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601014,"byte_end":601063,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601068,"byte_end":601126,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601131,"byte_end":601186,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601191,"byte_end":601231,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601236,"byte_end":601278,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601283,"byte_end":601323,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601328,"byte_end":601331,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601336,"byte_end":601417,"line_start":291,"line_end":291,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601422,"byte_end":601505,"line_start":292,"line_end":292,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601510,"byte_end":601513,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601518,"byte_end":601558,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::new(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601563,"byte_end":601642,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601647,"byte_end":601654,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4655},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602242,"byte_end":602253,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation3<N>>::from_matrix","value":"pub fn from_matrix(&Matrix3<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601891,"byte_end":601984,"line_start":303,"line_end":303,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601989,"byte_end":601992,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":601997,"byte_end":602069,"line_start":305,"line_end":305,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602074,"byte_end":602123,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602128,"byte_end":602230,"line_start":307,"line_end":307,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4656},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":603199,"byte_end":603214,"line_start":327,"line_end":327,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation3<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix3<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602403,"byte_end":602496,"line_start":315,"line_end":315,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602501,"byte_end":602504,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602509,"byte_end":602611,"line_start":317,"line_end":317,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602616,"byte_end":602619,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602624,"byte_end":602640,"line_start":319,"line_end":319,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602645,"byte_end":602648,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602653,"byte_end":602725,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602730,"byte_end":602821,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602826,"byte_end":602929,"line_start":323,"line_end":323,"column_start":5,"column_end":108}},{"value":"/ * `guess`: a guess of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":602934,"byte_end":603043,"line_start":324,"line_end":324,"column_start":5,"column_end":114}},{"value":"/           to the actual solution is provided. Can be set to `Rotation3::identity()` if no other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":603048,"byte_end":603147,"line_start":325,"line_end":325,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":603152,"byte_end":603187,"line_start":326,"line_end":326,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4657},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605050,"byte_end":605066,"line_start":378,"line_end":378,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation3<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U3>>(Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis scaled by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604140,"byte_end":604214,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604219,"byte_end":604222,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Self::new(axisangle)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604227,"byte_end":604274,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604279,"byte_end":604282,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604287,"byte_end":604300,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604305,"byte_end":604312,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604317,"byte_end":604356,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604361,"byte_end":604380,"line_start":364,"line_end":364,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604385,"byte_end":604434,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604439,"byte_end":604497,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604502,"byte_end":604557,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604562,"byte_end":604602,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604607,"byte_end":604649,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604654,"byte_end":604694,"line_start":370,"line_end":370,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604699,"byte_end":604702,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604707,"byte_end":604788,"line_start":372,"line_end":372,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604793,"byte_end":604876,"line_start":373,"line_end":373,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604881,"byte_end":604884,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604889,"byte_end":604929,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":604934,"byte_end":605026,"line_start":376,"line_end":376,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605031,"byte_end":605038,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":606130,"byte_end":606145,"line_start":404,"line_end":404,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Rotation3<N>>::from_axis_angle","value":"pub fn from_axis_angle<SB>(&Unit<Vector<N, U3, SB>>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis and a rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605167,"byte_end":605233,"line_start":382,"line_end":382,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605238,"byte_end":605241,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605246,"byte_end":605259,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605264,"byte_end":605271,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605276,"byte_end":605315,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605320,"byte_end":605339,"line_start":387,"line_end":387,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605344,"byte_end":605393,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605398,"byte_end":605431,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605436,"byte_end":605475,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605480,"byte_end":605535,"line_start":391,"line_end":391,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605540,"byte_end":605580,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605585,"byte_end":605627,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605632,"byte_end":605687,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605692,"byte_end":605695,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605700,"byte_end":605742,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(rot.angle(), angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605747,"byte_end":605782,"line_start":397,"line_end":397,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605787,"byte_end":605868,"line_start":398,"line_end":398,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605873,"byte_end":605956,"line_start":399,"line_end":399,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605961,"byte_end":605964,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":605969,"byte_end":606009,"line_start":401,"line_end":401,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":606014,"byte_end":606106,"line_start":402,"line_end":402,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":606111,"byte_end":606118,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607822,"byte_end":607839,"line_start":449,"line_end":449,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Rotation3<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607258,"byte_end":607303,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607308,"byte_end":607311,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607316,"byte_end":607395,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607400,"byte_end":607403,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607408,"byte_end":607421,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607426,"byte_end":607433,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607438,"byte_end":607477,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607482,"byte_end":607512,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607517,"byte_end":607575,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607580,"byte_end":607615,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607620,"byte_end":607676,"line_start":445,"line_end":445,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607681,"byte_end":607737,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607742,"byte_end":607798,"line_start":447,"line_end":447,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":607803,"byte_end":607810,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608531,"byte_end":608546,"line_start":471,"line_end":471,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<Rotation3<N>>::to_euler_angles","value":"pub fn to_euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Creates Euler angles from a rotation.","sig":null,"attributes":[{"value":"/ Creates Euler angles from a rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608336,"byte_end":608377,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608382,"byte_end":608385,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608390,"byte_end":608449,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608454,"byte_end":608519,"line_start":470,"line_end":470,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":609207,"byte_end":609219,"line_start":492,"line_end":492,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<Rotation3<N>>::euler_angles","value":"pub fn euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Euler angles corresponding to this rotation from a rotation.","sig":null,"attributes":[{"value":"/ Euler angles corresponding to this rotation from a rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608644,"byte_end":608708,"line_start":478,"line_end":478,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608713,"byte_end":608716,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608721,"byte_end":608780,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608785,"byte_end":608788,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608793,"byte_end":608806,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608811,"byte_end":608818,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608823,"byte_end":608862,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608867,"byte_end":608897,"line_start":485,"line_end":485,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608902,"byte_end":608960,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":608965,"byte_end":609000,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":609005,"byte_end":609061,"line_start":488,"line_end":488,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":609066,"byte_end":609122,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":609127,"byte_end":609183,"line_start":490,"line_end":490,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":609188,"byte_end":609195,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610257,"byte_end":610268,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation3<N>>::renormalize","value":"pub fn renormalize(&mut Self) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610049,"byte_end":610137,"line_start":514,"line_end":514,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610142,"byte_end":610231,"line_start":515,"line_end":515,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610236,"byte_end":610245,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611370,"byte_end":611382,"line_start":549,"line_end":549,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Rotation3<N>>::face_towards","value":"pub fn face_towards<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates a rotation that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610500,"byte_end":610589,"line_start":527,"line_end":527,"column_start":5,"column_end":94}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610594,"byte_end":610630,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610635,"byte_end":610638,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610643,"byte_end":610691,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610696,"byte_end":610699,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610704,"byte_end":610719,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction, that is, direction the matrix `z` axis will be aligned with.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610724,"byte_end":610818,"line_start":533,"line_end":533,"column_start":5,"column_end":99}},{"value":"/   * up - The vertical direction. The only requirement of this parameter is to not be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610823,"byte_end":610911,"line_start":534,"line_end":534,"column_start":5,"column_end":93}},{"value":"/   collinear to `dir`. Non-collinearity is not checked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610916,"byte_end":610974,"line_start":535,"line_end":535,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610979,"byte_end":610982,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":610987,"byte_end":611000,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611005,"byte_end":611012,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611017,"byte_end":611056,"line_start":539,"line_end":539,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611061,"byte_end":611080,"line_start":540,"line_end":540,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611085,"byte_end":611126,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611131,"byte_end":611173,"line_start":542,"line_end":542,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611178,"byte_end":611204,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611209,"byte_end":611212,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::face_towards(&dir, &up);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611217,"byte_end":611266,"line_start":545,"line_end":545,"column_start":5,"column_end":54}},{"value":"/ assert_relative_eq!(rot * Vector3::z(), dir.normalize());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611271,"byte_end":611332,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611337,"byte_end":611344,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611349,"byte_end":611358,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611955,"byte_end":611974,"line_start":565,"line_end":565,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<Rotation3<N>>::new_observer_frames","value":"pub fn new_observer_frames<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Self where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Rotation3::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Rotation3::face_towards] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611835,"byte_end":611889,"line_start":563,"line_end":563,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":611894,"byte_end":611943,"line_start":564,"line_end":564,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613073,"byte_end":613083,"line_start":596,"line_end":596,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Rotation3<N>>::look_at_rh","value":"pub fn look_at_rh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612159,"byte_end":612225,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612230,"byte_end":612233,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612238,"byte_end":612304,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612309,"byte_end":612396,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612401,"byte_end":612424,"line_start":577,"line_end":577,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612429,"byte_end":612432,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612437,"byte_end":612452,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612457,"byte_end":612515,"line_start":580,"line_end":580,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612520,"byte_end":612605,"line_start":581,"line_end":581,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612610,"byte_end":612678,"line_start":582,"line_end":582,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612683,"byte_end":612686,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612691,"byte_end":612704,"line_start":584,"line_end":584,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612709,"byte_end":612716,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612721,"byte_end":612760,"line_start":586,"line_end":586,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612765,"byte_end":612784,"line_start":587,"line_end":587,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612789,"byte_end":612830,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612835,"byte_end":612877,"line_start":589,"line_end":589,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612882,"byte_end":612908,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612913,"byte_end":612916,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_rh(&dir, &up);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612921,"byte_end":612968,"line_start":592,"line_end":592,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":612973,"byte_end":613035,"line_start":593,"line_end":593,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613040,"byte_end":613047,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613052,"byte_end":613061,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614196,"byte_end":614206,"line_start":627,"line_end":627,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Rotation3<N>>::look_at_lh","value":"pub fn look_at_lh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613285,"byte_end":613350,"line_start":604,"line_end":604,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613355,"byte_end":613358,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613363,"byte_end":613429,"line_start":606,"line_end":606,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613434,"byte_end":613520,"line_start":607,"line_end":607,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613525,"byte_end":613548,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613553,"byte_end":613556,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613561,"byte_end":613576,"line_start":610,"line_end":610,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613581,"byte_end":613639,"line_start":611,"line_end":611,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613644,"byte_end":613729,"line_start":612,"line_end":612,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613734,"byte_end":613802,"line_start":613,"line_end":613,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613807,"byte_end":613810,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613815,"byte_end":613828,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613833,"byte_end":613840,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613845,"byte_end":613884,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613889,"byte_end":613908,"line_start":618,"line_end":618,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613913,"byte_end":613954,"line_start":619,"line_end":619,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":613959,"byte_end":614001,"line_start":620,"line_end":620,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614006,"byte_end":614032,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614037,"byte_end":614040,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_lh(&dir, &up);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614045,"byte_end":614092,"line_start":623,"line_end":623,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), Vector3::z());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614097,"byte_end":614158,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614163,"byte_end":614170,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614175,"byte_end":614184,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615030,"byte_end":615046,"line_start":650,"line_end":650,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation3<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614401,"byte_end":614474,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614479,"byte_end":614482,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614487,"byte_end":614582,"line_start":637,"line_end":637,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614587,"byte_end":614590,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614595,"byte_end":614608,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614613,"byte_end":614620,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614625,"byte_end":614664,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614669,"byte_end":614710,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614715,"byte_end":614755,"line_start":643,"line_end":643,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614760,"byte_end":614800,"line_start":644,"line_end":644,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation3::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614805,"byte_end":614864,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(rot * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614869,"byte_end":614923,"line_start":646,"line_end":646,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614928,"byte_end":614992,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":614997,"byte_end":615004,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615009,"byte_end":615018,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615973,"byte_end":615996,"line_start":674,"line_end":674,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation3<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>, N)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615276,"byte_end":615364,"line_start":659,"line_end":659,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615369,"byte_end":615408,"line_start":660,"line_end":660,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615413,"byte_end":615416,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615421,"byte_end":615434,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615439,"byte_end":615446,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615451,"byte_end":615490,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615495,"byte_end":615536,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615541,"byte_end":615581,"line_start":666,"line_end":666,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615586,"byte_end":615626,"line_start":667,"line_end":667,"column_start":5,"column_end":45}},{"value":"/ let rot2 = Rotation3::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615631,"byte_end":615703,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ let rot5 = Rotation3::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615708,"byte_end":615780,"line_start":669,"line_end":669,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615785,"byte_end":615868,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615873,"byte_end":615935,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615940,"byte_end":615947,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":615952,"byte_end":615961,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617263,"byte_end":617268,"line_start":716,"line_end":716,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation3<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi].","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":616881,"byte_end":616915,"line_start":705,"line_end":705,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":616920,"byte_end":616923,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":616928,"byte_end":616941,"line_start":707,"line_end":707,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":616946,"byte_end":616953,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":616958,"byte_end":616997,"line_start":709,"line_end":709,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617002,"byte_end":617049,"line_start":710,"line_end":710,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617054,"byte_end":617118,"line_start":711,"line_end":711,"column_start":5,"column_end":69}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617123,"byte_end":617177,"line_start":712,"line_end":712,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617182,"byte_end":617225,"line_start":713,"line_end":713,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617230,"byte_end":617237,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617242,"byte_end":617251,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4686},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618038,"byte_end":618042,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"axis","qualname":"<Rotation3<N>>::axis","value":"pub fn axis(&Self) -> Option<Unit<Vector3<N>>> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis. Returns `None` if the rotation angle is zero or PI.","sig":null,"attributes":[{"value":"/ The rotation axis. Returns `None` if the rotation angle is zero or PI.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617442,"byte_end":617516,"line_start":722,"line_end":722,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617521,"byte_end":617524,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617529,"byte_end":617542,"line_start":724,"line_end":724,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617547,"byte_end":617554,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617559,"byte_end":617598,"line_start":726,"line_end":726,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617603,"byte_end":617650,"line_start":727,"line_end":727,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617655,"byte_end":617719,"line_start":728,"line_end":728,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617724,"byte_end":617744,"line_start":729,"line_end":729,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617749,"byte_end":617804,"line_start":730,"line_end":730,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617809,"byte_end":617860,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617865,"byte_end":617868,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617873,"byte_end":617903,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617908,"byte_end":617961,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":617966,"byte_end":618000,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618005,"byte_end":618012,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618017,"byte_end":618026,"line_start":737,"line_end":737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618810,"byte_end":618821,"line_start":762,"line_end":762,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation3<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector3<N> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis multiplied by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618408,"byte_end":618463,"line_start":751,"line_end":751,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618468,"byte_end":618471,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618476,"byte_end":618489,"line_start":753,"line_end":753,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618494,"byte_end":618501,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618506,"byte_end":618545,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618550,"byte_end":618597,"line_start":756,"line_end":756,"column_start":5,"column_end":52}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618602,"byte_end":618650,"line_start":757,"line_end":757,"column_start":5,"column_end":53}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618655,"byte_end":618695,"line_start":758,"line_end":758,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618700,"byte_end":618772,"line_start":759,"line_end":759,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618777,"byte_end":618784,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":618789,"byte_end":618798,"line_start":761,"line_end":761,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619776,"byte_end":619786,"line_start":793,"line_end":793,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<Rotation3<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector3<N>>, N)> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619033,"byte_end":619100,"line_start":773,"line_end":773,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619105,"byte_end":619108,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619113,"byte_end":619153,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619158,"byte_end":619161,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619166,"byte_end":619179,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619184,"byte_end":619191,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619196,"byte_end":619235,"line_start":779,"line_end":779,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619240,"byte_end":619287,"line_start":780,"line_end":780,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619292,"byte_end":619356,"line_start":781,"line_end":781,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619361,"byte_end":619381,"line_start":782,"line_end":782,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619386,"byte_end":619441,"line_start":783,"line_end":783,"column_start":5,"column_end":60}},{"value":"/ let axis_angle = rot.axis_angle().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619446,"byte_end":619493,"line_start":784,"line_end":784,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(axis_angle.0, axis);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619498,"byte_end":619542,"line_start":785,"line_end":785,"column_start":5,"column_end":49}},{"value":"/ assert_relative_eq!(axis_angle.1, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619547,"byte_end":619592,"line_start":786,"line_end":786,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619597,"byte_end":619600,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619605,"byte_end":619635,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619640,"byte_end":619693,"line_start":789,"line_end":789,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619698,"byte_end":619738,"line_start":790,"line_end":790,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619743,"byte_end":619750,"line_start":791,"line_end":791,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":619755,"byte_end":619764,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4689},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620457,"byte_end":620465,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation3<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620001,"byte_end":620067,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620072,"byte_end":620075,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620080,"byte_end":620093,"line_start":806,"line_end":806,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620098,"byte_end":620105,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620110,"byte_end":620149,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620154,"byte_end":620195,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620200,"byte_end":620267,"line_start":810,"line_end":810,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620272,"byte_end":620339,"line_start":811,"line_end":811,"column_start":5,"column_end":72}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620344,"byte_end":620419,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620424,"byte_end":620431,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620436,"byte_end":620445,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621120,"byte_end":621131,"line_start":833,"line_end":833,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation3<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620545,"byte_end":620612,"line_start":819,"line_end":819,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620617,"byte_end":620620,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620625,"byte_end":620696,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620701,"byte_end":620704,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620709,"byte_end":620722,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620727,"byte_end":620734,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620739,"byte_end":620778,"line_start":825,"line_end":825,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620783,"byte_end":620824,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620829,"byte_end":620896,"line_start":827,"line_end":827,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620901,"byte_end":620968,"line_start":828,"line_end":828,"column_start":5,"column_end":72}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":620973,"byte_end":621014,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621019,"byte_end":621082,"line_start":830,"line_end":830,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621087,"byte_end":621094,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621099,"byte_end":621108,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621847,"byte_end":621851,"line_start":852,"line_end":852,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation3<N>>::powf","value":"pub fn powf(&Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the same\n axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621205,"byte_end":621297,"line_start":837,"line_end":837,"column_start":5,"column_end":97}},{"value":"/ axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621302,"byte_end":621376,"line_start":838,"line_end":838,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621381,"byte_end":621384,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621389,"byte_end":621402,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621407,"byte_end":621414,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621419,"byte_end":621458,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621463,"byte_end":621510,"line_start":843,"line_end":843,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621515,"byte_end":621579,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621584,"byte_end":621604,"line_start":845,"line_end":845,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621609,"byte_end":621664,"line_start":846,"line_end":846,"column_start":5,"column_end":60}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621669,"byte_end":621697,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621702,"byte_end":621771,"line_start":848,"line_end":848,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621776,"byte_end":621809,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621814,"byte_end":621821,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":621826,"byte_end":621835,"line_start":851,"line_end":851,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624769,"byte_end":624779,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::geometry::quaternion::Quaternion","value":"Quaternion { coords }","parent":null,"children":[{"krate":0,"index":18099}],"decl_id":null,"docs":" A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion\n that may be used as a rotation.\n","sig":null,"attributes":[{"value":"/ A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624604,"byte_end":624693,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/ that may be used as a rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624694,"byte_end":624729,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624730,"byte_end":624740,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18099},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624906,"byte_end":624912,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::quaternion::Quaternion::coords","value":"base::matrix::Matrix<N, base::dimension::U4, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, base::dimension::U4>>::Buffer>","parent":{"krate":0,"index":18097},"children":[],"decl_id":null,"docs":" This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.\n","sig":null,"attributes":[{"value":"/ This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624809,"byte_end":624897,"line_start":32,"line_end":32,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4751},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627207,"byte_end":627217,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Quaternion<N>>::into_owned","value":"pub fn into_owned(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627030,"byte_end":627089,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627094,"byte_end":627103,"line_start":123,"line_end":123,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627108,"byte_end":627195,"line_start":124,"line_end":124,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4752},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627436,"byte_end":627447,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Quaternion<N>>::clone_owned","value":"pub fn clone_owned(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627258,"byte_end":627318,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627323,"byte_end":627332,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627337,"byte_end":627424,"line_start":131,"line_end":131,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4753},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627909,"byte_end":627918,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<N>>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627522,"byte_end":627553,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627558,"byte_end":627561,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627566,"byte_end":627579,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627584,"byte_end":627591,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627596,"byte_end":627635,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627640,"byte_end":627671,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627676,"byte_end":627724,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ let q_normalized = q.normalize();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627729,"byte_end":627766,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ relative_eq!(q_normalized.norm(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627771,"byte_end":627814,"line_start":144,"line_end":144,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627819,"byte_end":627826,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627831,"byte_end":627840,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627845,"byte_end":627897,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628059,"byte_end":628063,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"imag","qualname":"<Quaternion<N>>::imag","value":"pub fn imag(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The imaginary part of this quaternion.\n","sig":null,"attributes":[{"value":"/ The imaginary part of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":627991,"byte_end":628033,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628038,"byte_end":628047,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4755},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628503,"byte_end":628512,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of this quaternion.","sig":null,"attributes":[{"value":"/ The conjugate of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628124,"byte_end":628161,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628166,"byte_end":628169,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628174,"byte_end":628187,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628192,"byte_end":628199,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628204,"byte_end":628235,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628240,"byte_end":628288,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ let conj = q.conjugate();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628293,"byte_end":628322,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ assert!(conj.i == -2.0 && conj.j == -3.0 && conj.k == -4.0 && conj.w == 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628327,"byte_end":628408,"line_start":165,"line_end":165,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628413,"byte_end":628420,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628425,"byte_end":628434,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628439,"byte_end":628491,"line_start":168,"line_end":168,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628999,"byte_end":629003,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Quaternion<N>>::lerp","value":"pub fn lerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two quaternion.","sig":null,"attributes":[{"value":"/ Linear interpolation between two quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628588,"byte_end":628636,"line_start":173,"line_end":173,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628641,"byte_end":628644,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Computes `self * (1 - t) + other * t`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628649,"byte_end":628691,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628696,"byte_end":628699,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628704,"byte_end":628717,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628722,"byte_end":628729,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628734,"byte_end":628765,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628770,"byte_end":628819,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(10.0, 20.0, 30.0, 40.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628824,"byte_end":628877,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628882,"byte_end":628885,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(1.9, 3.8, 5.7, 7.6));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628890,"byte_end":628961,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628966,"byte_end":628973,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":628978,"byte_end":628987,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629430,"byte_end":629436,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"vector","qualname":"<Quaternion<N>>::vector","value":"pub fn vector(&Self)\n-> MatrixSlice<, N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629094,"byte_end":629145,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629150,"byte_end":629153,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629158,"byte_end":629171,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629176,"byte_end":629183,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629188,"byte_end":629219,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629224,"byte_end":629272,"line_start":195,"line_end":195,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.vector()[0], 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629277,"byte_end":629312,"line_start":196,"line_end":196,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[1], 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629317,"byte_end":629352,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[2], 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629357,"byte_end":629392,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629397,"byte_end":629404,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629409,"byte_end":629418,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629808,"byte_end":629814,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Quaternion<N>>::scalar","value":"pub fn scalar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scalar part `w` of this quaternion.","sig":null,"attributes":[{"value":"/ The scalar part `w` of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629563,"byte_end":629606,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629611,"byte_end":629614,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629619,"byte_end":629632,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629637,"byte_end":629644,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629649,"byte_end":629680,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629685,"byte_end":629733,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.scalar(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629738,"byte_end":629770,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629775,"byte_end":629782,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629787,"byte_end":629796,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630313,"byte_end":630322,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"as_vector","qualname":"<Quaternion<N>>::as_vector","value":"pub fn as_vector(&Self) -> &Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Reinterprets this quaternion as a 4D vector.","sig":null,"attributes":[{"value":"/ Reinterprets this quaternion as a 4D vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629863,"byte_end":629911,"line_start":218,"line_end":218,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629916,"byte_end":629919,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629924,"byte_end":629937,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629942,"byte_end":629949,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector4, Quaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":629954,"byte_end":629996,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630001,"byte_end":630049,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/ // Recall that the quaternion is stored internally as (i, j, k, w)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630054,"byte_end":630124,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ // while the crate::new constructor takes the arguments as (w, i, j, k).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630129,"byte_end":630205,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630210,"byte_end":630275,"line_start":226,"line_end":226,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630280,"byte_end":630287,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630292,"byte_end":630301,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4760},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630689,"byte_end":630693,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"norm","qualname":"<Quaternion<N>>::norm","value":"pub fn norm(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The norm of this quaternion.","sig":null,"attributes":[{"value":"/ The norm of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630379,"byte_end":630411,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630416,"byte_end":630419,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630424,"byte_end":630437,"line_start":235,"line_end":235,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630442,"byte_end":630449,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630454,"byte_end":630493,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630498,"byte_end":630529,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630534,"byte_end":630582,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.norm(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630587,"byte_end":630651,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630656,"byte_end":630663,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630668,"byte_end":630677,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631145,"byte_end":631154,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<N>>::magnitude","value":"pub fn magnitude(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630746,"byte_end":630792,"line_start":247,"line_end":247,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630797,"byte_end":630800,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630805,"byte_end":630824,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/ This is the same as `.norm()`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630829,"byte_end":630862,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630867,"byte_end":630870,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630875,"byte_end":630888,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630893,"byte_end":630900,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630905,"byte_end":630944,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630949,"byte_end":630980,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":630985,"byte_end":631033,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.magnitude(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631038,"byte_end":631107,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631112,"byte_end":631119,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631124,"byte_end":631133,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4762},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631454,"byte_end":631466,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Quaternion<N>>::norm_squared","value":"pub fn norm_squared(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ The squared norm of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631200,"byte_end":631240,"line_start":264,"line_end":264,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631245,"byte_end":631248,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631253,"byte_end":631266,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631271,"byte_end":631278,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631283,"byte_end":631314,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631319,"byte_end":631367,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631372,"byte_end":631416,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631421,"byte_end":631428,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631433,"byte_end":631442,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4763},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631881,"byte_end":631898,"line_start":289,"line_end":289,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Quaternion<N>>::magnitude_squared","value":"pub fn magnitude_squared(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631527,"byte_end":631581,"line_start":277,"line_end":277,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631586,"byte_end":631589,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631594,"byte_end":631621,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/ This is the same as `.norm_squared()`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631626,"byte_end":631667,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631672,"byte_end":631675,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631680,"byte_end":631693,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631698,"byte_end":631705,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631710,"byte_end":631741,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631746,"byte_end":631794,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631799,"byte_end":631843,"line_start":286,"line_end":286,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631848,"byte_end":631855,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631860,"byte_end":631869,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4764},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632250,"byte_end":632253,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<N>>::dot","value":"pub fn dot(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product of two quaternions.","sig":null,"attributes":[{"value":"/ The dot product of two quaternions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631952,"byte_end":631991,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":631996,"byte_end":631999,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632004,"byte_end":632017,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632022,"byte_end":632029,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632034,"byte_end":632065,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632070,"byte_end":632119,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632124,"byte_end":632173,"line_start":299,"line_end":299,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q1.dot(&q2), 70.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632178,"byte_end":632212,"line_start":300,"line_end":300,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632217,"byte_end":632224,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632229,"byte_end":632238,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4767},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633145,"byte_end":633156,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Quaternion<N>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632406,"byte_end":632452,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632457,"byte_end":632460,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This method also does not works with SIMD components (see `simd_try_inverse` instead).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632465,"byte_end":632555,"line_start":314,"line_end":314,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632560,"byte_end":632563,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632568,"byte_end":632581,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632586,"byte_end":632593,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632598,"byte_end":632637,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632642,"byte_end":632673,"line_start":319,"line_end":319,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632678,"byte_end":632726,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632731,"byte_end":632763,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632768,"byte_end":632771,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_some());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632776,"byte_end":632805,"line_start":323,"line_end":323,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv_q.unwrap() * q, Quaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632810,"byte_end":632878,"line_start":324,"line_end":324,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632883,"byte_end":632886,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632891,"byte_end":632916,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/ let q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632921,"byte_end":632969,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632974,"byte_end":633006,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633011,"byte_end":633014,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633019,"byte_end":633048,"line_start":330,"line_end":330,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633053,"byte_end":633060,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633065,"byte_end":633074,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633079,"byte_end":633133,"line_start":333,"line_end":333,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4768},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633552,"byte_end":633568,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"simd_try_inverse","qualname":"<Quaternion<N>>::simd_try_inverse","value":"pub fn simd_try_inverse(&Self) -> SimdOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to inverse this quaternion.","sig":null,"attributes":[{"value":"/ Attempt to inverse this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633367,"byte_end":633406,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633411,"byte_end":633414,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This method also works with SIMD components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633419,"byte_end":633467,"line_start":349,"line_end":349,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633472,"byte_end":633481,"line_start":350,"line_end":350,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633486,"byte_end":633540,"line_start":351,"line_end":351,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4769},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634369,"byte_end":634374,"line_start":372,"line_end":372,"column_start":12,"column_end":17},"name":"inner","qualname":"<Quaternion<N>>::inner","value":"pub fn inner(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the inner product (also known as the dot product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the inner product (also known as the dot product).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633784,"byte_end":633849,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633854,"byte_end":633936,"line_start":359,"line_end":359,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633941,"byte_end":633958,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633963,"byte_end":633966,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633971,"byte_end":633984,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":633989,"byte_end":633996,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634001,"byte_end":634040,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634045,"byte_end":634076,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634081,"byte_end":634129,"line_start":366,"line_end":366,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634134,"byte_end":634182,"line_start":367,"line_end":367,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(-20.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634187,"byte_end":634244,"line_start":368,"line_end":368,"column_start":5,"column_end":62}},{"value":"/ let result = a.inner(&b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634249,"byte_end":634278,"line_start":369,"line_end":369,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634283,"byte_end":634343,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634348,"byte_end":634357,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635063,"byte_end":635068,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"outer","qualname":"<Quaternion<N>>::outer","value":"pub fn outer(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the outer product (also known as the wedge product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the outer product (also known as the wedge product).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634462,"byte_end":634529,"line_start":376,"line_end":376,"column_start":5,"column_end":72}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634534,"byte_end":634616,"line_start":377,"line_end":377,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634621,"byte_end":634638,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634643,"byte_end":634646,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634651,"byte_end":634664,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634669,"byte_end":634676,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634681,"byte_end":634720,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634725,"byte_end":634756,"line_start":383,"line_end":383,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634761,"byte_end":634809,"line_start":384,"line_end":384,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634814,"byte_end":634862,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -5.0, 18.0, -11.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634867,"byte_end":634926,"line_start":386,"line_end":386,"column_start":5,"column_end":64}},{"value":"/ let result = a.outer(&b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634931,"byte_end":634960,"line_start":387,"line_end":387,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":634965,"byte_end":635025,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635030,"byte_end":635037,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635042,"byte_end":635051,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4771},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635823,"byte_end":635830,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"project","qualname":"<Quaternion<N>>::project","value":"pub fn project(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the projection of `self` onto `other` (also known as the parallel).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the projection of `self` onto `other` (also known as the parallel).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635156,"byte_end":635238,"line_start":395,"line_end":395,"column_start":5,"column_end":87}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635243,"byte_end":635325,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635330,"byte_end":635347,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635352,"byte_end":635355,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635360,"byte_end":635373,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635378,"byte_end":635385,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635390,"byte_end":635429,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635434,"byte_end":635465,"line_start":402,"line_end":402,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635470,"byte_end":635518,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635523,"byte_end":635571,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, 3.333333333333333, 1.3333333333333333, 0.6666666666666666);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635576,"byte_end":635675,"line_start":405,"line_end":405,"column_start":5,"column_end":104}},{"value":"/ let result = a.project(&b).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635680,"byte_end":635720,"line_start":406,"line_end":406,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635725,"byte_end":635785,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635790,"byte_end":635797,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635802,"byte_end":635811,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4772},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636632,"byte_end":636638,"line_start":432,"line_end":432,"column_start":12,"column_end":18},"name":"reject","qualname":"<Quaternion<N>>::reject","value":"pub fn reject(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the rejection of `self` from `other` (also known as the perpendicular).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the rejection of `self` from `other` (also known as the perpendicular).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":635960,"byte_end":636046,"line_start":417,"line_end":417,"column_start":5,"column_end":91}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636051,"byte_end":636133,"line_start":418,"line_end":418,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636138,"byte_end":636155,"line_start":419,"line_end":419,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636160,"byte_end":636163,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636168,"byte_end":636181,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636186,"byte_end":636193,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636198,"byte_end":636237,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636242,"byte_end":636273,"line_start":424,"line_end":424,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636278,"byte_end":636326,"line_start":425,"line_end":425,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636331,"byte_end":636379,"line_start":426,"line_end":426,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -1.3333333333333333, 1.6666666666666665, 3.3333333333333335);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636384,"byte_end":636485,"line_start":427,"line_end":427,"column_start":5,"column_end":106}},{"value":"/ let result = a.reject(&b).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636490,"byte_end":636529,"line_start":428,"line_end":428,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636534,"byte_end":636594,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636599,"byte_end":636606,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636611,"byte_end":636620,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637384,"byte_end":637403,"line_start":454,"line_end":454,"column_start":12,"column_end":31},"name":"polar_decomposition","qualname":"<Quaternion<N>>::polar_decomposition","value":"pub fn polar_decomposition(&Self) -> (N, N, Option<Unit<Vector3<N>>>) where\nN: RealField","parent":null,"children":[],"decl_id":null,"docs":" The polar decomposition of this quaternion.","sig":null,"attributes":[{"value":"/ The polar decomposition of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636768,"byte_end":636815,"line_start":439,"line_end":439,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636820,"byte_end":636823,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Returns, from left to right: the quaternion norm, the half rotation angle, the rotation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636828,"byte_end":636919,"line_start":441,"line_end":441,"column_start":5,"column_end":96}},{"value":"/ axis. If the rotation angle is zero, the rotation axis is set to `None`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":636924,"byte_end":637000,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637005,"byte_end":637008,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637013,"byte_end":637026,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637031,"byte_end":637038,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637043,"byte_end":637062,"line_start":446,"line_end":446,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Vector3, Quaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637067,"byte_end":637109,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(0.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637114,"byte_end":637162,"line_start":448,"line_end":448,"column_start":5,"column_end":53}},{"value":"/ let (norm, half_ang, axis) = q.polar_decomposition();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637167,"byte_end":637224,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(norm, 5.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637229,"byte_end":637255,"line_start":450,"line_end":450,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(half_ang, f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637260,"byte_end":637309,"line_start":451,"line_end":451,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(axis, Some(Vector3::x_axis()));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637314,"byte_end":637360,"line_start":452,"line_end":452,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637365,"byte_end":637372,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4774},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638260,"byte_end":638262,"line_start":481,"line_end":481,"column_start":12,"column_end":14},"name":"ln","qualname":"<Quaternion<N>>::ln","value":"pub fn ln(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637900,"byte_end":637950,"line_start":471,"line_end":471,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637955,"byte_end":637958,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637963,"byte_end":637976,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637981,"byte_end":637988,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":637993,"byte_end":638032,"line_start":475,"line_end":475,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638037,"byte_end":638068,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(2.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638073,"byte_end":638121,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.ln(), Quaternion::new(1.683647, 1.190289, 0.0, 0.0), epsilon = 1.0e-6)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638126,"byte_end":638222,"line_start":478,"line_end":478,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638227,"byte_end":638234,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638239,"byte_end":638248,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638813,"byte_end":638816,"line_start":499,"line_end":499,"column_start":12,"column_end":15},"name":"exp","qualname":"<Quaternion<N>>::exp","value":"pub fn exp(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638458,"byte_end":638502,"line_start":489,"line_end":489,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638507,"byte_end":638510,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638515,"byte_end":638528,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638533,"byte_end":638540,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638545,"byte_end":638584,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638589,"byte_end":638620,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638625,"byte_end":638683,"line_start":495,"line_end":495,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp(), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638688,"byte_end":638775,"line_start":496,"line_end":496,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638780,"byte_end":638787,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638792,"byte_end":638801,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639513,"byte_end":639520,"line_start":518,"line_end":518,"column_start":12,"column_end":19},"name":"exp_eps","qualname":"<Quaternion<N>>::exp_eps","value":"pub fn exp_eps(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion\n has a norm smaller than `eps`.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":638893,"byte_end":638996,"line_start":503,"line_end":503,"column_start":5,"column_end":108}},{"value":"/ has a norm smaller than `eps`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639001,"byte_end":639035,"line_start":504,"line_end":504,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639040,"byte_end":639043,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639048,"byte_end":639061,"line_start":506,"line_end":506,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639066,"byte_end":639073,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639078,"byte_end":639117,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639122,"byte_end":639153,"line_start":509,"line_end":509,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639158,"byte_end":639216,"line_start":510,"line_end":510,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp_eps(1.0e-6), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639221,"byte_end":639319,"line_start":511,"line_end":511,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639324,"byte_end":639327,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ // Singular case.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639332,"byte_end":639353,"line_start":513,"line_end":513,"column_start":5,"column_end":26}},{"value":"/ let q = Quaternion::new(0.0000001, 0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639358,"byte_end":639412,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(q.exp_eps(1.0e-6), Quaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639417,"byte_end":639475,"line_start":515,"line_end":515,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639480,"byte_end":639487,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639492,"byte_end":639501,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4779},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640352,"byte_end":640356,"line_start":544,"line_end":544,"column_start":12,"column_end":16},"name":"powf","qualname":"<Quaternion<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":639969,"byte_end":640020,"line_start":534,"line_end":534,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640025,"byte_end":640028,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640033,"byte_end":640046,"line_start":536,"line_end":536,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640051,"byte_end":640058,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640063,"byte_end":640102,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640107,"byte_end":640138,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640143,"byte_end":640191,"line_start":540,"line_end":540,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.powf(1.5), Quaternion::new( -6.2576659, 4.1549037, 6.2323556, 8.3098075), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640196,"byte_end":640314,"line_start":541,"line_end":541,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640319,"byte_end":640326,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640331,"byte_end":640340,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640804,"byte_end":640817,"line_start":558,"line_end":558,"column_start":12,"column_end":25},"name":"as_vector_mut","qualname":"<Quaternion<N>>::as_vector_mut","value":"pub fn as_vector_mut(&mut Self) -> &mut Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","sig":null,"attributes":[{"value":"/ Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640421,"byte_end":640503,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640508,"byte_end":640511,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640516,"byte_end":640529,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640534,"byte_end":640541,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640546,"byte_end":640588,"line_start":552,"line_end":552,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640593,"byte_end":640632,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/ *q.as_vector_mut() = Vector4::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640637,"byte_end":640695,"line_start":554,"line_end":554,"column_start":5,"column_end":63}},{"value":"/ assert!(q.i == 1.0 && q.j == 2.0 && q.k == 3.0 && q.w == 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640700,"byte_end":640766,"line_start":555,"line_end":555,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640771,"byte_end":640778,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640783,"byte_end":640792,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4781},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641315,"byte_end":641325,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"vector_mut","qualname":"<Quaternion<N>>::vector_mut","value":"pub fn vector_mut(&mut Self)\n-> MatrixSliceMut<, N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The mutable vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The mutable vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640886,"byte_end":640945,"line_start":562,"line_end":562,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640950,"byte_end":640953,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640958,"byte_end":640971,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640976,"byte_end":640983,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":640988,"byte_end":641030,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641035,"byte_end":641074,"line_start":567,"line_end":567,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641079,"byte_end":641084,"line_start":568,"line_end":568,"column_start":5,"column_end":10}},{"value":"/     let mut v = q.vector_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641089,"byte_end":641124,"line_start":569,"line_end":569,"column_start":5,"column_end":40}},{"value":"/     v[0] = 2.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641129,"byte_end":641148,"line_start":570,"line_end":570,"column_start":5,"column_end":24}},{"value":"/     v[1] = 3.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641153,"byte_end":641172,"line_start":571,"line_end":571,"column_start":5,"column_end":24}},{"value":"/     v[2] = 4.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641177,"byte_end":641196,"line_start":572,"line_end":572,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641201,"byte_end":641206,"line_start":573,"line_end":573,"column_start":5,"column_end":10}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641211,"byte_end":641277,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641282,"byte_end":641289,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641294,"byte_end":641303,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641794,"byte_end":641807,"line_start":593,"line_end":593,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Quaternion<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces this quaternion by its conjugate.","sig":null,"attributes":[{"value":"/ Replaces this quaternion by its conjugate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641478,"byte_end":641524,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641529,"byte_end":641532,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641537,"byte_end":641550,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641555,"byte_end":641562,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641567,"byte_end":641598,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641603,"byte_end":641655,"line_start":588,"line_end":588,"column_start":5,"column_end":57}},{"value":"/ q.conjugate_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641660,"byte_end":641682,"line_start":589,"line_end":589,"column_start":5,"column_end":27}},{"value":"/ assert!(q.i == -2.0 && q.j == -3.0 && q.k == -4.0 && q.w == 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641687,"byte_end":641756,"line_start":590,"line_end":590,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641761,"byte_end":641768,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641773,"byte_end":641782,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642506,"byte_end":642521,"line_start":615,"line_end":615,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Quaternion<N>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> N::SimdBool","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion in-place if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion in-place if it is not zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":641958,"byte_end":642013,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642018,"byte_end":642021,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642026,"byte_end":642039,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642044,"byte_end":642051,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642056,"byte_end":642095,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642100,"byte_end":642131,"line_start":604,"line_end":604,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0f32, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642136,"byte_end":642191,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642196,"byte_end":642199,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ assert!(q.try_inverse_mut());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642204,"byte_end":642237,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * Quaternion::new(1.0, 2.0, 3.0, 4.0), Quaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642242,"byte_end":642331,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642336,"byte_end":642339,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642344,"byte_end":642369,"line_start":610,"line_end":610,"column_start":5,"column_end":30}},{"value":"/ let mut q = Quaternion::new(0.0f32, 0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642374,"byte_end":642429,"line_start":611,"line_end":611,"column_start":5,"column_end":60}},{"value":"/ assert!(!q.try_inverse_mut());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642434,"byte_end":642468,"line_start":612,"line_end":612,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642473,"byte_end":642480,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642485,"byte_end":642494,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4786},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643075,"byte_end":643088,"line_start":633,"line_end":633,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Quaternion<N>>::normalize_mut","value":"pub fn normalize_mut(&mut Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642760,"byte_end":642791,"line_start":622,"line_end":622,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642796,"byte_end":642799,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642804,"byte_end":642817,"line_start":624,"line_end":624,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642822,"byte_end":642829,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642834,"byte_end":642873,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642878,"byte_end":642909,"line_start":627,"line_end":627,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642914,"byte_end":642966,"line_start":628,"line_end":628,"column_start":5,"column_end":57}},{"value":"/ q.normalize_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642971,"byte_end":642993,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(q.norm(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":642998,"byte_end":643037,"line_start":630,"line_end":630,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643042,"byte_end":643049,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643054,"byte_end":643063,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4787},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643218,"byte_end":643225,"line_start":639,"line_end":639,"column_start":12,"column_end":19},"name":"squared","qualname":"<Quaternion<N>>::squared","value":"pub fn squared(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square of a quaternion.\n","sig":null,"attributes":[{"value":"/ Calculates square of a quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643154,"byte_end":643192,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643197,"byte_end":643206,"line_start":638,"line_end":638,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643332,"byte_end":643336,"line_start":645,"line_end":645,"column_start":12,"column_end":16},"name":"half","qualname":"<Quaternion<N>>::half","value":"pub fn half(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides quaternion into two.\n","sig":null,"attributes":[{"value":"/ Divides quaternion into two.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643274,"byte_end":643306,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643311,"byte_end":643320,"line_start":644,"line_end":644,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4789},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643456,"byte_end":643460,"line_start":651,"line_end":651,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Quaternion<N>>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square root.\n","sig":null,"attributes":[{"value":"/ Calculates square root.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643403,"byte_end":643430,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643435,"byte_end":643444,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4790},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643669,"byte_end":643676,"line_start":659,"line_end":659,"column_start":12,"column_end":19},"name":"is_pure","qualname":"<Quaternion<N>>::is_pure","value":"pub fn is_pure(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the quaternion is pure.","sig":null,"attributes":[{"value":"/ Check if the quaternion is pure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643528,"byte_end":643564,"line_start":655,"line_end":655,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643569,"byte_end":643572,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ A quaternion is pure if it has no real part (`self.w == 0.0`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643577,"byte_end":643643,"line_start":657,"line_end":657,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643648,"byte_end":643657,"line_start":658,"line_end":658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4791},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643798,"byte_end":643802,"line_start":665,"line_end":665,"column_start":12,"column_end":16},"name":"pure","qualname":"<Quaternion<N>>::pure","value":"pub fn pure(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert quaternion to pure quaternion.\n","sig":null,"attributes":[{"value":"/ Convert quaternion to pure quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643730,"byte_end":643772,"line_start":663,"line_end":663,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643777,"byte_end":643786,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643998,"byte_end":644006,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"left_div","qualname":"<Quaternion<N>>::left_div","value":"pub fn left_div(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Left quaternionic division.","sig":null,"attributes":[{"value":"/ Left quaternionic division.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643868,"byte_end":643899,"line_start":669,"line_end":669,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643904,"byte_end":643907,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ Calculates B<sup>-1</sup> * A where A = self, B = other.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643912,"byte_end":643972,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":643977,"byte_end":643986,"line_start":672,"line_end":672,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4794},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644730,"byte_end":644739,"line_start":695,"line_end":695,"column_start":12,"column_end":21},"name":"right_div","qualname":"<Quaternion<N>>::right_div","value":"pub fn right_div(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Right quaternionic division.","sig":null,"attributes":[{"value":"/ Right quaternionic division.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644143,"byte_end":644175,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644180,"byte_end":644183,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Calculates A * B<sup>-1</sup> where A = self, B = other.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644188,"byte_end":644248,"line_start":682,"line_end":682,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644253,"byte_end":644256,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644261,"byte_end":644274,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644279,"byte_end":644286,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644291,"byte_end":644330,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644335,"byte_end":644366,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644371,"byte_end":644419,"line_start":688,"line_end":688,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644424,"byte_end":644472,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/ let result = a.right_div(&b).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644477,"byte_end":644519,"line_start":690,"line_end":690,"column_start":5,"column_end":47}},{"value":"/ let expected = Quaternion::new(0.4, 0.13333333333333336, -0.4666666666666667, 0.26666666666666666);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644524,"byte_end":644627,"line_start":691,"line_end":691,"column_start":5,"column_end":108}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644632,"byte_end":644692,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644697,"byte_end":644704,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644709,"byte_end":644718,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4796},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645347,"byte_end":645350,"line_start":714,"line_end":714,"column_start":12,"column_end":15},"name":"cos","qualname":"<Quaternion<N>>::cos","value":"pub fn cos(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic cosinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644876,"byte_end":644916,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644921,"byte_end":644924,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644929,"byte_end":644942,"line_start":704,"line_end":704,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644947,"byte_end":644954,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":644959,"byte_end":644998,"line_start":706,"line_end":706,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645003,"byte_end":645034,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645039,"byte_end":645091,"line_start":708,"line_end":708,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(58.93364616794395, -34.086183690465596, -51.1292755356984, -68.17236738093119);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645096,"byte_end":645210,"line_start":709,"line_end":709,"column_start":5,"column_end":119}},{"value":"/ let result = input.cos();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645215,"byte_end":645244,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645249,"byte_end":645309,"line_start":711,"line_end":711,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645314,"byte_end":645321,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645326,"byte_end":645335,"line_start":713,"line_end":713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4797},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645909,"byte_end":645913,"line_start":731,"line_end":731,"column_start":12,"column_end":16},"name":"acos","qualname":"<Quaternion<N>>::acos","value":"pub fn acos(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arccosinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645550,"byte_end":645593,"line_start":720,"line_end":720,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645598,"byte_end":645601,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645606,"byte_end":645619,"line_start":722,"line_end":722,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645624,"byte_end":645631,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645636,"byte_end":645675,"line_start":724,"line_end":724,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645680,"byte_end":645711,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645716,"byte_end":645768,"line_start":726,"line_end":726,"column_start":5,"column_end":57}},{"value":"/ let result = input.cos().acos();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645773,"byte_end":645809,"line_start":727,"line_end":727,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645814,"byte_end":645871,"line_start":728,"line_end":728,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645876,"byte_end":645883,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":645888,"byte_end":645897,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646593,"byte_end":646596,"line_start":752,"line_end":752,"column_start":12,"column_end":15},"name":"sin","qualname":"<Quaternion<N>>::sin","value":"pub fn sin(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic sinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646126,"byte_end":646164,"line_start":740,"line_end":740,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646169,"byte_end":646172,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646177,"byte_end":646190,"line_start":742,"line_end":742,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646195,"byte_end":646202,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646207,"byte_end":646246,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646251,"byte_end":646282,"line_start":745,"line_end":745,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646287,"byte_end":646339,"line_start":746,"line_end":746,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(91.78371578403467, 21.886486853029176, 32.82973027954377, 43.77297370605835);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646344,"byte_end":646456,"line_start":747,"line_end":747,"column_start":5,"column_end":117}},{"value":"/ let result = input.sin();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646461,"byte_end":646490,"line_start":748,"line_end":748,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646495,"byte_end":646555,"line_start":749,"line_end":749,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646560,"byte_end":646567,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646572,"byte_end":646581,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4799},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647152,"byte_end":647156,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"asin","qualname":"<Quaternion<N>>::asin","value":"pub fn asin(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arcsinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646795,"byte_end":646836,"line_start":758,"line_end":758,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646841,"byte_end":646844,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646849,"byte_end":646862,"line_start":760,"line_end":760,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646867,"byte_end":646874,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646879,"byte_end":646918,"line_start":762,"line_end":762,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646923,"byte_end":646954,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":646959,"byte_end":647011,"line_start":764,"line_end":764,"column_start":5,"column_end":57}},{"value":"/ let result = input.sin().asin();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647016,"byte_end":647052,"line_start":765,"line_end":765,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647057,"byte_end":647114,"line_start":766,"line_end":766,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647119,"byte_end":647126,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647131,"byte_end":647140,"line_start":768,"line_end":768,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647851,"byte_end":647854,"line_start":790,"line_end":790,"column_start":12,"column_end":15},"name":"tan","qualname":"<Quaternion<N>>::tan","value":"pub fn tan(&Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic tangent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647375,"byte_end":647415,"line_start":778,"line_end":778,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647420,"byte_end":647423,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647428,"byte_end":647441,"line_start":780,"line_end":780,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647446,"byte_end":647453,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647458,"byte_end":647497,"line_start":782,"line_end":782,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647502,"byte_end":647533,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647538,"byte_end":647590,"line_start":784,"line_end":784,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.00003821631725009489, 0.3713971716439371, 0.5570957574659058, 0.7427943432878743);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647595,"byte_end":647714,"line_start":785,"line_end":785,"column_start":5,"column_end":124}},{"value":"/ let result = input.tan();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647719,"byte_end":647748,"line_start":786,"line_end":786,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647753,"byte_end":647813,"line_start":787,"line_end":787,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647818,"byte_end":647825,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647830,"byte_end":647839,"line_start":789,"line_end":789,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4801},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648329,"byte_end":648333,"line_start":808,"line_end":808,"column_start":12,"column_end":16},"name":"atan","qualname":"<Quaternion<N>>::atan","value":"pub fn atan(&Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arctangent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":647970,"byte_end":648013,"line_start":797,"line_end":797,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648018,"byte_end":648021,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648026,"byte_end":648039,"line_start":799,"line_end":799,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648044,"byte_end":648051,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648056,"byte_end":648095,"line_start":801,"line_end":801,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648100,"byte_end":648131,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648136,"byte_end":648188,"line_start":803,"line_end":803,"column_start":5,"column_end":57}},{"value":"/ let result = input.tan().atan();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648193,"byte_end":648229,"line_start":804,"line_end":804,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648234,"byte_end":648291,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648296,"byte_end":648303,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648308,"byte_end":648317,"line_start":807,"line_end":807,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649094,"byte_end":649098,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Quaternion<N>>::sinh","value":"pub fn sinh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic sinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648609,"byte_end":648658,"line_start":820,"line_end":820,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648663,"byte_end":648666,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648671,"byte_end":648684,"line_start":822,"line_end":822,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648689,"byte_end":648696,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648701,"byte_end":648740,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648745,"byte_end":648776,"line_start":825,"line_end":825,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648781,"byte_end":648833,"line_start":826,"line_end":826,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.7323376060463428, -0.4482074499805421, -0.6723111749708133, -0.8964148999610843);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648838,"byte_end":648956,"line_start":827,"line_end":827,"column_start":5,"column_end":123}},{"value":"/ let result = input.sinh();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648961,"byte_end":648991,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":648996,"byte_end":649056,"line_start":829,"line_end":829,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649061,"byte_end":649068,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649073,"byte_end":649082,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649654,"byte_end":649659,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Quaternion<N>>::asinh","value":"pub fn asinh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arcsinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649171,"byte_end":649223,"line_start":836,"line_end":836,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649228,"byte_end":649231,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649236,"byte_end":649249,"line_start":838,"line_end":838,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649254,"byte_end":649261,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649266,"byte_end":649305,"line_start":840,"line_end":840,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649310,"byte_end":649341,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649346,"byte_end":649398,"line_start":842,"line_end":842,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.385889902585242, 0.514052600662788, 0.7710789009941821, 1.028105201325576);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649403,"byte_end":649515,"line_start":843,"line_end":843,"column_start":5,"column_end":117}},{"value":"/ let result = input.asinh();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649520,"byte_end":649551,"line_start":844,"line_end":844,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649556,"byte_end":649616,"line_start":845,"line_end":845,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649621,"byte_end":649628,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649633,"byte_end":649642,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650273,"byte_end":650277,"line_start":865,"line_end":865,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Quaternion<N>>::cosh","value":"pub fn cosh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic cosinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649786,"byte_end":649837,"line_start":853,"line_end":853,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649842,"byte_end":649845,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649850,"byte_end":649863,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649868,"byte_end":649875,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649880,"byte_end":649919,"line_start":857,"line_end":857,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649924,"byte_end":649955,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":649960,"byte_end":650012,"line_start":859,"line_end":859,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.9615851176369566, -0.3413521745610167, -0.5120282618415251, -0.6827043491220334);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650017,"byte_end":650135,"line_start":860,"line_end":860,"column_start":5,"column_end":123}},{"value":"/ let result = input.cosh();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650140,"byte_end":650170,"line_start":861,"line_end":861,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650175,"byte_end":650235,"line_start":862,"line_end":862,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650240,"byte_end":650247,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650252,"byte_end":650261,"line_start":864,"line_end":864,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650838,"byte_end":650843,"line_start":881,"line_end":881,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Quaternion<N>>::acosh","value":"pub fn acosh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arccosinus.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650350,"byte_end":650404,"line_start":869,"line_end":869,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650409,"byte_end":650412,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650417,"byte_end":650430,"line_start":871,"line_end":871,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650435,"byte_end":650442,"line_start":872,"line_end":872,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650447,"byte_end":650486,"line_start":873,"line_end":873,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650491,"byte_end":650522,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650527,"byte_end":650579,"line_start":875,"line_end":875,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.4014472020074007, 0.5162761016176176, 0.7744141524264264, 1.0325522032352352);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650584,"byte_end":650699,"line_start":876,"line_end":876,"column_start":5,"column_end":120}},{"value":"/ let result = input.acosh();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650704,"byte_end":650735,"line_start":877,"line_end":877,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650740,"byte_end":650800,"line_start":878,"line_end":878,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650805,"byte_end":650812,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650817,"byte_end":650826,"line_start":880,"line_end":880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651476,"byte_end":651480,"line_start":898,"line_end":898,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Quaternion<N>>::tanh","value":"pub fn tanh(&Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic tangent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":650987,"byte_end":651038,"line_start":886,"line_end":886,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651043,"byte_end":651046,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651051,"byte_end":651064,"line_start":888,"line_end":888,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651069,"byte_end":651076,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651081,"byte_end":651120,"line_start":890,"line_end":890,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651125,"byte_end":651156,"line_start":891,"line_end":891,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651161,"byte_end":651213,"line_start":892,"line_end":892,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(1.0248695360556623, -0.10229568178876419, -0.1534435226831464, -0.20459136357752844);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651218,"byte_end":651338,"line_start":893,"line_end":893,"column_start":5,"column_end":125}},{"value":"/ let result = input.tanh();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651343,"byte_end":651373,"line_start":894,"line_end":894,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651378,"byte_end":651438,"line_start":895,"line_end":895,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651443,"byte_end":651450,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651455,"byte_end":651464,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4807},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652087,"byte_end":652092,"line_start":917,"line_end":917,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Quaternion<N>>::atanh","value":"pub fn atanh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arctangent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651598,"byte_end":651652,"line_start":905,"line_end":905,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651657,"byte_end":651660,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651665,"byte_end":651678,"line_start":907,"line_end":907,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651683,"byte_end":651690,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651695,"byte_end":651734,"line_start":909,"line_end":909,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651739,"byte_end":651770,"line_start":910,"line_end":910,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651775,"byte_end":651827,"line_start":911,"line_end":911,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.03230293287000163, 0.5173453683196951, 0.7760180524795426, 1.0346907366393903);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651832,"byte_end":651948,"line_start":912,"line_end":912,"column_start":5,"column_end":121}},{"value":"/ let result = input.atanh();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651953,"byte_end":651984,"line_start":913,"line_end":913,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":651989,"byte_end":652049,"line_start":914,"line_end":914,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652054,"byte_end":652061,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652066,"byte_end":652075,"line_start":916,"line_end":916,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4827},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654208,"byte_end":654222,"line_start":983,"line_end":983,"column_start":10,"column_end":24},"name":"UnitQuaternion","qualname":"::geometry::quaternion::UnitQuaternion","value":"Unit<Quaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A unit quaternions. May be used to represent a rotation.\n","sig":null,"attributes":[{"value":"/ A unit quaternions. May be used to represent a rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654138,"byte_end":654198,"line_start":982,"line_end":982,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655180,"byte_end":655185,"line_start":1023,"line_end":1023,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitQuaternion<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi] of this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654817,"byte_end":654875,"line_start":1013,"line_end":1013,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654880,"byte_end":654883,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654888,"byte_end":654901,"line_start":1015,"line_end":1015,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654906,"byte_end":654913,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654918,"byte_end":654970,"line_start":1017,"line_end":1017,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654975,"byte_end":655039,"line_start":1018,"line_end":1018,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655044,"byte_end":655103,"line_start":1019,"line_end":1019,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655108,"byte_end":655142,"line_start":1020,"line_end":1020,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655147,"byte_end":655154,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655159,"byte_end":655168,"line_start":1022,"line_end":1022,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655670,"byte_end":655680,"line_start":1039,"line_end":1039,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<UnitQuaternion<N>>::quaternion","value":"pub fn quaternion(&Self) -> &Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying quaternion.","sig":null,"attributes":[{"value":"/ The underlying quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655345,"byte_end":655375,"line_start":1028,"line_end":1028,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655380,"byte_end":655383,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655388,"byte_end":655416,"line_start":1030,"line_end":1030,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655421,"byte_end":655424,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655429,"byte_end":655442,"line_start":1032,"line_end":1032,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655447,"byte_end":655454,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655459,"byte_end":655508,"line_start":1034,"line_end":1034,"column_start":5,"column_end":54}},{"value":"/ let axis = UnitQuaternion::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655513,"byte_end":655555,"line_start":1035,"line_end":1035,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*axis.quaternion(), Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655560,"byte_end":655632,"line_start":1036,"line_end":1036,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655637,"byte_end":655644,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655649,"byte_end":655658,"line_start":1038,"line_end":1038,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656223,"byte_end":656232,"line_start":1055,"line_end":1055,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitQuaternion<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655741,"byte_end":655791,"line_start":1043,"line_end":1043,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655796,"byte_end":655799,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655804,"byte_end":655817,"line_start":1045,"line_end":1045,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655822,"byte_end":655829,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655834,"byte_end":655886,"line_start":1047,"line_end":1047,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655891,"byte_end":655955,"line_start":1048,"line_end":1048,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":655960,"byte_end":656019,"line_start":1049,"line_end":1049,"column_start":5,"column_end":64}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656024,"byte_end":656055,"line_start":1050,"line_end":1050,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(conj, UnitQuaternion::from_axis_angle(&-axis, 1.78));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656060,"byte_end":656128,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656133,"byte_end":656140,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656145,"byte_end":656154,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656159,"byte_end":656211,"line_start":1054,"line_end":1054,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656834,"byte_end":656841,"line_start":1072,"line_end":1072,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitQuaternion<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656316,"byte_end":656362,"line_start":1059,"line_end":1059,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656367,"byte_end":656370,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656375,"byte_end":656388,"line_start":1061,"line_end":1061,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656393,"byte_end":656400,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656405,"byte_end":656457,"line_start":1063,"line_end":1063,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656462,"byte_end":656526,"line_start":1064,"line_end":1064,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656531,"byte_end":656590,"line_start":1065,"line_end":1065,"column_start":5,"column_end":64}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656595,"byte_end":656623,"line_start":1066,"line_end":1066,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(rot * inv, UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656628,"byte_end":656682,"line_start":1067,"line_end":1067,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(inv * rot, UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656687,"byte_end":656741,"line_start":1068,"line_end":1068,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656746,"byte_end":656753,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656758,"byte_end":656767,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656772,"byte_end":656822,"line_start":1071,"line_end":1071,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657366,"byte_end":657374,"line_start":1087,"line_end":1087,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitQuaternion<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656895,"byte_end":656961,"line_start":1076,"line_end":1076,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656966,"byte_end":656969,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656974,"byte_end":656987,"line_start":1078,"line_end":1078,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":656992,"byte_end":656999,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657004,"byte_end":657043,"line_start":1080,"line_end":1080,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657048,"byte_end":657094,"line_start":1081,"line_end":1081,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657099,"byte_end":657171,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657176,"byte_end":657248,"line_start":1083,"line_end":1083,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657253,"byte_end":657328,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657333,"byte_end":657340,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657345,"byte_end":657354,"line_start":1086,"line_end":1086,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658071,"byte_end":658082,"line_start":1106,"line_end":1106,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitQuaternion<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657481,"byte_end":657548,"line_start":1092,"line_end":1092,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657553,"byte_end":657556,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657561,"byte_end":657632,"line_start":1094,"line_end":1094,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657637,"byte_end":657640,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657645,"byte_end":657658,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657663,"byte_end":657670,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657675,"byte_end":657714,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657719,"byte_end":657765,"line_start":1099,"line_end":1099,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657770,"byte_end":657842,"line_start":1100,"line_end":1100,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657847,"byte_end":657919,"line_start":1101,"line_end":1101,"column_start":5,"column_end":77}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657924,"byte_end":657965,"line_start":1102,"line_end":1102,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":657970,"byte_end":658033,"line_start":1103,"line_end":1103,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658038,"byte_end":658045,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658050,"byte_end":658059,"line_start":1105,"line_end":1105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658622,"byte_end":658626,"line_start":1122,"line_end":1122,"column_start":12,"column_end":16},"name":"lerp","qualname":"<UnitQuaternion<N>>::lerp","value":"pub fn lerp(&Self, &Self, N) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Linear interpolation between two unit quaternions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658146,"byte_end":658200,"line_start":1110,"line_end":1110,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658205,"byte_end":658208,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ The result is not normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658213,"byte_end":658246,"line_start":1112,"line_end":1112,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658251,"byte_end":658254,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658259,"byte_end":658272,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658277,"byte_end":658284,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658289,"byte_end":658338,"line_start":1116,"line_end":1116,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658343,"byte_end":658423,"line_start":1117,"line_end":1117,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658428,"byte_end":658508,"line_start":1118,"line_end":1118,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(0.9, 0.1, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658513,"byte_end":658584,"line_start":1119,"line_end":1119,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658589,"byte_end":658596,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658601,"byte_end":658610,"line_start":1121,"line_end":1121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4845},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659289,"byte_end":659294,"line_start":1138,"line_end":1138,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<UnitQuaternion<N>>::nlerp","value":"pub fn nlerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalized linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Normalized linear interpolation between two unit quaternions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658730,"byte_end":658795,"line_start":1126,"line_end":1126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658800,"byte_end":658803,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.lerp` except that the result is normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658808,"byte_end":658881,"line_start":1128,"line_end":1128,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658886,"byte_end":658889,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658894,"byte_end":658907,"line_start":1130,"line_end":1130,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658912,"byte_end":658919,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658924,"byte_end":658973,"line_start":1132,"line_end":1132,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":658978,"byte_end":659058,"line_start":1133,"line_end":1133,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659063,"byte_end":659143,"line_start":1134,"line_end":1134,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.nlerp(&q2, 0.1), UnitQuaternion::new_normalize(Quaternion::new(0.9, 0.1, 0.0, 0.0)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659148,"byte_end":659251,"line_start":1135,"line_end":1135,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659256,"byte_end":659263,"line_start":1136,"line_end":1136,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659268,"byte_end":659277,"line_start":1137,"line_end":1137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660161,"byte_end":660166,"line_start":1163,"line_end":1163,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitQuaternion<N>>::slerp","value":"pub fn slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two unit quaternions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659457,"byte_end":659521,"line_start":1145,"line_end":1145,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659526,"byte_end":659529,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both quaternion is 180 degrees (in which case the interpolation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659534,"byte_end":659629,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659634,"byte_end":659704,"line_start":1148,"line_end":1148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659709,"byte_end":659712,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659717,"byte_end":659732,"line_start":1150,"line_end":1150,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659737,"byte_end":659740,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659745,"byte_end":659752,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::UnitQuaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659757,"byte_end":659802,"line_start":1153,"line_end":1153,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659807,"byte_end":659810,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659815,"byte_end":659901,"line_start":1155,"line_end":1155,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659906,"byte_end":659986,"line_start":1156,"line_end":1156,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659991,"byte_end":659994,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":659999,"byte_end":660036,"line_start":1158,"line_end":1158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660041,"byte_end":660044,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660049,"byte_end":660123,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660128,"byte_end":660135,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660140,"byte_end":660149,"line_start":1162,"line_end":1162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660969,"byte_end":660978,"line_start":1182,"line_end":1182,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<UnitQuaternion<N>>::try_slerp","value":"pub fn try_slerp(&Self, &Self, N, N) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit quaternions or returns `None`\n if both quaternions are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit quaternions or returns `None`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660372,"byte_end":660466,"line_start":1171,"line_end":1171,"column_start":5,"column_end":99}},{"value":"/ if both quaternions are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660471,"byte_end":660566,"line_start":1172,"line_end":1172,"column_start":5,"column_end":100}},{"value":"/ not well-defined).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660571,"byte_end":660593,"line_start":1173,"line_end":1173,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660598,"byte_end":660601,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660606,"byte_end":660621,"line_start":1175,"line_end":1175,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first quaternion to interpolate from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660626,"byte_end":660681,"line_start":1176,"line_end":1176,"column_start":5,"column_end":60}},{"value":"/ * `other`: the second quaternion to interpolate toward.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660686,"byte_end":660745,"line_start":1177,"line_end":1177,"column_start":5,"column_end":64}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660750,"byte_end":660816,"line_start":1178,"line_end":1178,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both quaternion","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660821,"byte_end":660909,"line_start":1179,"line_end":1179,"column_start":5,"column_end":93}},{"value":"/ must be to return `None`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660914,"byte_end":660943,"line_start":1180,"line_end":1180,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":660948,"byte_end":660957,"line_start":1181,"line_end":1181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661677,"byte_end":661690,"line_start":1205,"line_end":1205,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitQuaternion<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion in-place.\n","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661592,"byte_end":661651,"line_start":1203,"line_end":1203,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661656,"byte_end":661665,"line_start":1204,"line_end":1204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662310,"byte_end":662321,"line_start":1222,"line_end":1222,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitQuaternion<N>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661763,"byte_end":661809,"line_start":1209,"line_end":1209,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661814,"byte_end":661817,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661822,"byte_end":661835,"line_start":1211,"line_end":1211,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661840,"byte_end":661847,"line_start":1212,"line_end":1212,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661852,"byte_end":661891,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661896,"byte_end":661948,"line_start":1214,"line_end":1214,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":661953,"byte_end":662001,"line_start":1215,"line_end":1215,"column_start":5,"column_end":53}},{"value":"/ let mut rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662006,"byte_end":662055,"line_start":1216,"line_end":1216,"column_start":5,"column_end":54}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662060,"byte_end":662082,"line_start":1217,"line_end":1217,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662087,"byte_end":662177,"line_start":1218,"line_end":1218,"column_start":5,"column_end":95}},{"value":"/ assert_relative_eq!(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662182,"byte_end":662272,"line_start":1219,"line_end":1219,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662277,"byte_end":662284,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662289,"byte_end":662298,"line_start":1221,"line_end":1221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662955,"byte_end":662959,"line_start":1241,"line_end":1241,"column_start":12,"column_end":16},"name":"axis","qualname":"<UnitQuaternion<N>>::axis","value":"pub fn axis(&Self) -> Option<Unit<Vector3<N>>> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion or `None` if the rotation is zero.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion or `None` if the rotation is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662394,"byte_end":662474,"line_start":1226,"line_end":1226,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662479,"byte_end":662482,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662487,"byte_end":662500,"line_start":1228,"line_end":1228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662505,"byte_end":662512,"line_start":1229,"line_end":1229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662517,"byte_end":662569,"line_start":1230,"line_end":1230,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662574,"byte_end":662638,"line_start":1231,"line_end":1231,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662643,"byte_end":662663,"line_start":1232,"line_end":1232,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662668,"byte_end":662728,"line_start":1233,"line_end":1233,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis(), Some(axis));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662733,"byte_end":662772,"line_start":1234,"line_end":1234,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662777,"byte_end":662780,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662785,"byte_end":662815,"line_start":1236,"line_end":1236,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662820,"byte_end":662878,"line_start":1237,"line_end":1237,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662883,"byte_end":662917,"line_start":1238,"line_end":1238,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662922,"byte_end":662929,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":662934,"byte_end":662943,"line_start":1240,"line_end":1240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663691,"byte_end":663702,"line_start":1265,"line_end":1265,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitQuaternion<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector3<N> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion multiplied by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663255,"byte_end":663334,"line_start":1254,"line_end":1254,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663339,"byte_end":663342,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663347,"byte_end":663360,"line_start":1256,"line_end":1256,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663365,"byte_end":663372,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663377,"byte_end":663416,"line_start":1258,"line_end":1258,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663421,"byte_end":663473,"line_start":1259,"line_end":1259,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663478,"byte_end":663526,"line_start":1260,"line_end":1260,"column_start":5,"column_end":53}},{"value":"/ let rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663531,"byte_end":663576,"line_start":1261,"line_end":1261,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663581,"byte_end":663653,"line_start":1262,"line_end":1262,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663658,"byte_end":663665,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663670,"byte_end":663679,"line_start":1264,"line_end":1264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664537,"byte_end":664547,"line_start":1293,"line_end":1293,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitQuaternion<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector3<N>>, N)> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663915,"byte_end":663982,"line_start":1276,"line_end":1276,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663987,"byte_end":663990,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":663995,"byte_end":664035,"line_start":1278,"line_end":1278,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664040,"byte_end":664043,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664048,"byte_end":664061,"line_start":1280,"line_end":1280,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664066,"byte_end":664073,"line_start":1281,"line_end":1281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664078,"byte_end":664130,"line_start":1282,"line_end":1282,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664135,"byte_end":664199,"line_start":1283,"line_end":1283,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664204,"byte_end":664224,"line_start":1284,"line_end":1284,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664229,"byte_end":664289,"line_start":1285,"line_end":1285,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis_angle(), Some((axis, angle)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664294,"byte_end":664348,"line_start":1286,"line_end":1286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664353,"byte_end":664356,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664361,"byte_end":664391,"line_start":1288,"line_end":1288,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664396,"byte_end":664454,"line_start":1289,"line_end":1289,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664459,"byte_end":664499,"line_start":1290,"line_end":1290,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664504,"byte_end":664511,"line_start":1291,"line_end":1291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664516,"byte_end":664525,"line_start":1292,"line_end":1292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664861,"byte_end":664864,"line_start":1304,"line_end":1304,"column_start":12,"column_end":15},"name":"exp","qualname":"<UnitQuaternion<N>>::exp","value":"pub fn exp(&Self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664690,"byte_end":664734,"line_start":1300,"line_end":1300,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664739,"byte_end":664742,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664747,"byte_end":664835,"line_start":1302,"line_end":1302,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664840,"byte_end":664849,"line_start":1303,"line_end":1303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665580,"byte_end":665582,"line_start":1323,"line_end":1323,"column_start":12,"column_end":14},"name":"ln","qualname":"<UnitQuaternion<N>>::ln","value":"pub fn ln(&Self) -> Quaternion<N> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664930,"byte_end":664980,"line_start":1308,"line_end":1308,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664985,"byte_end":664988,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":664993,"byte_end":665081,"line_start":1310,"line_end":1310,"column_start":5,"column_end":93}},{"value":"/ The vector part of the return value corresponds to the axis-angle representation (divided","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665086,"byte_end":665179,"line_start":1311,"line_end":1311,"column_start":5,"column_end":98}},{"value":"/ by 2.0) of this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665184,"byte_end":665220,"line_start":1312,"line_end":1312,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665225,"byte_end":665228,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665233,"byte_end":665246,"line_start":1314,"line_end":1314,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665251,"byte_end":665258,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665263,"byte_end":665302,"line_start":1316,"line_end":1316,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665307,"byte_end":665353,"line_start":1317,"line_end":1317,"column_start":5,"column_end":51}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665358,"byte_end":665406,"line_start":1318,"line_end":1318,"column_start":5,"column_end":53}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665411,"byte_end":665454,"line_start":1319,"line_end":1319,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(q.ln().vector().into_owned(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665459,"byte_end":665542,"line_start":1320,"line_end":1320,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665547,"byte_end":665554,"line_start":1321,"line_end":1321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665559,"byte_end":665568,"line_start":1322,"line_end":1322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666489,"byte_end":666493,"line_start":1351,"line_end":1351,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitQuaternion<N>>::powf","value":"pub fn powf(&Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665818,"byte_end":665869,"line_start":1334,"line_end":1334,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665874,"byte_end":665877,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ This returns the unit quaternion that identifies a rotation with axis `self.axis()` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665882,"byte_end":665973,"line_start":1336,"line_end":1336,"column_start":5,"column_end":96}},{"value":"/ angle `self.angle() × n`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":665978,"byte_end":666008,"line_start":1337,"line_end":1337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666013,"byte_end":666016,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666021,"byte_end":666034,"line_start":1339,"line_end":1339,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666039,"byte_end":666046,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666051,"byte_end":666090,"line_start":1341,"line_end":1341,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666095,"byte_end":666147,"line_start":1342,"line_end":1342,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666152,"byte_end":666216,"line_start":1343,"line_end":1343,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666221,"byte_end":666241,"line_start":1344,"line_end":1344,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666246,"byte_end":666306,"line_start":1345,"line_end":1345,"column_start":5,"column_end":65}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666311,"byte_end":666339,"line_start":1346,"line_end":1346,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666344,"byte_end":666413,"line_start":1347,"line_end":1347,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666418,"byte_end":666451,"line_start":1348,"line_end":1348,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666456,"byte_end":666463,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666468,"byte_end":666477,"line_start":1350,"line_end":1350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667387,"byte_end":667405,"line_start":1379,"line_end":1379,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitQuaternion<N>>::to_rotation_matrix","value":"pub fn to_rotation_matrix(&Self) -> Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix from this unit quaternion.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix from this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666715,"byte_end":666770,"line_start":1362,"line_end":1362,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666775,"byte_end":666778,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666783,"byte_end":666796,"line_start":1364,"line_end":1364,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666801,"byte_end":666804,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666809,"byte_end":666816,"line_start":1366,"line_end":1366,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666821,"byte_end":666860,"line_start":1367,"line_end":1367,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666865,"byte_end":666884,"line_start":1368,"line_end":1368,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666889,"byte_end":666944,"line_start":1369,"line_end":1369,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":666949,"byte_end":667037,"line_start":1370,"line_end":1370,"column_start":5,"column_end":93}},{"value":"/ let rot = q.to_rotation_matrix();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667042,"byte_end":667079,"line_start":1371,"line_end":1371,"column_start":5,"column_end":42}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667084,"byte_end":667142,"line_start":1372,"line_end":1372,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667147,"byte_end":667205,"line_start":1373,"line_end":1373,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667210,"byte_end":667269,"line_start":1374,"line_end":1374,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667274,"byte_end":667277,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(*rot.matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667282,"byte_end":667349,"line_start":1376,"line_end":1376,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667354,"byte_end":667361,"line_start":1377,"line_end":1377,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":667366,"byte_end":667375,"line_start":1378,"line_end":1378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668492,"byte_end":668507,"line_start":1414,"line_end":1414,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<UnitQuaternion<N>>::to_euler_angles","value":"pub fn to_euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent Euler angles.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent Euler angles.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668257,"byte_end":668324,"line_start":1409,"line_end":1409,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668329,"byte_end":668332,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668337,"byte_end":668396,"line_start":1411,"line_end":1411,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668401,"byte_end":668410,"line_start":1412,"line_end":1412,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668415,"byte_end":668480,"line_start":1413,"line_end":1413,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4860},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669197,"byte_end":669209,"line_start":1436,"line_end":1436,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<UnitQuaternion<N>>::euler_angles","value":"pub fn euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the euler angles corresponding to this unit quaternion.","sig":null,"attributes":[{"value":"/ Retrieves the euler angles corresponding to this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668605,"byte_end":668674,"line_start":1421,"line_end":1421,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668679,"byte_end":668682,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668687,"byte_end":668746,"line_start":1423,"line_end":1423,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668751,"byte_end":668754,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668759,"byte_end":668772,"line_start":1425,"line_end":1425,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668777,"byte_end":668784,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668789,"byte_end":668828,"line_start":1427,"line_end":1427,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668833,"byte_end":668868,"line_start":1428,"line_end":1428,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668873,"byte_end":668936,"line_start":1429,"line_end":1429,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668941,"byte_end":668976,"line_start":1430,"line_end":1430,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":668981,"byte_end":669037,"line_start":1431,"line_end":1431,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669042,"byte_end":669098,"line_start":1432,"line_end":1432,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669103,"byte_end":669159,"line_start":1433,"line_end":1433,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669164,"byte_end":669171,"line_start":1434,"line_end":1434,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669176,"byte_end":669185,"line_start":1435,"line_end":1435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4861},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670083,"byte_end":670097,"line_start":1460,"line_end":1460,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitQuaternion<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669328,"byte_end":669416,"line_start":1443,"line_end":1443,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669421,"byte_end":669424,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669429,"byte_end":669442,"line_start":1445,"line_end":1445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669447,"byte_end":669450,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669455,"byte_end":669462,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669467,"byte_end":669506,"line_start":1448,"line_end":1448,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669511,"byte_end":669530,"line_start":1449,"line_end":1449,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669535,"byte_end":669590,"line_start":1450,"line_end":1450,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669595,"byte_end":669685,"line_start":1451,"line_end":1451,"column_start":5,"column_end":95}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669690,"byte_end":669753,"line_start":1452,"line_end":1452,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669758,"byte_end":669821,"line_start":1453,"line_end":1453,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669826,"byte_end":669889,"line_start":1454,"line_end":1454,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669894,"byte_end":669958,"line_start":1455,"line_end":1455,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669963,"byte_end":669966,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":669971,"byte_end":670045,"line_start":1457,"line_end":1457,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670050,"byte_end":670057,"line_start":1458,"line_end":1458,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670062,"byte_end":670071,"line_start":1459,"line_end":1459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670785,"byte_end":670800,"line_start":1480,"line_end":1480,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitQuaternion<N>>::transform_point","value":"pub fn transform_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a point by this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670183,"byte_end":670226,"line_start":1464,"line_end":1464,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670231,"byte_end":670234,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670239,"byte_end":670294,"line_start":1466,"line_end":1466,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670299,"byte_end":670302,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670307,"byte_end":670320,"line_start":1468,"line_end":1468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670325,"byte_end":670328,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670333,"byte_end":670340,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670345,"byte_end":670384,"line_start":1471,"line_end":1471,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670389,"byte_end":670408,"line_start":1472,"line_end":1472,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670413,"byte_end":670467,"line_start":1473,"line_end":1473,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670472,"byte_end":670562,"line_start":1474,"line_end":1474,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670567,"byte_end":670644,"line_start":1475,"line_end":1475,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670649,"byte_end":670652,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670657,"byte_end":670747,"line_start":1477,"line_end":1477,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670752,"byte_end":670759,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670764,"byte_end":670773,"line_start":1479,"line_end":1479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4863},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671467,"byte_end":671483,"line_start":1500,"line_end":1500,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitQuaternion<N>>::transform_vector","value":"pub fn transform_vector(&Self, &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a vector by this unit quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670868,"byte_end":670912,"line_start":1484,"line_end":1484,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670917,"byte_end":670920,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670925,"byte_end":670979,"line_start":1486,"line_end":1486,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670984,"byte_end":670987,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":670992,"byte_end":671005,"line_start":1488,"line_end":1488,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671010,"byte_end":671013,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671018,"byte_end":671025,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671030,"byte_end":671069,"line_start":1491,"line_end":1491,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671074,"byte_end":671093,"line_start":1492,"line_end":1492,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671098,"byte_end":671144,"line_start":1493,"line_end":1493,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671149,"byte_end":671239,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671244,"byte_end":671324,"line_start":1495,"line_end":1495,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671329,"byte_end":671332,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671337,"byte_end":671429,"line_start":1497,"line_end":1497,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671434,"byte_end":671441,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671446,"byte_end":671455,"line_start":1499,"line_end":1499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4864},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672207,"byte_end":672230,"line_start":1520,"line_end":1520,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitQuaternion<N>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n point.","sig":null,"attributes":[{"value":"/ Rotate a point by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671551,"byte_end":671621,"line_start":1504,"line_end":1504,"column_start":5,"column_end":75}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671626,"byte_end":671693,"line_start":1505,"line_end":1505,"column_start":5,"column_end":72}},{"value":"/ point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671698,"byte_end":671708,"line_start":1506,"line_end":1506,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671713,"byte_end":671716,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671721,"byte_end":671734,"line_start":1508,"line_end":1508,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671739,"byte_end":671742,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671747,"byte_end":671754,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671759,"byte_end":671798,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671803,"byte_end":671822,"line_start":1512,"line_end":1512,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671827,"byte_end":671881,"line_start":1513,"line_end":1513,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671886,"byte_end":671976,"line_start":1514,"line_end":1514,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":671981,"byte_end":672066,"line_start":1515,"line_end":1515,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672071,"byte_end":672074,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672079,"byte_end":672169,"line_start":1517,"line_end":1517,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672174,"byte_end":672181,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672186,"byte_end":672195,"line_start":1519,"line_end":1519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673120,"byte_end":673144,"line_start":1542,"line_end":1542,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672465,"byte_end":672536,"line_start":1526,"line_end":1526,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672541,"byte_end":672608,"line_start":1527,"line_end":1527,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672613,"byte_end":672624,"line_start":1528,"line_end":1528,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672629,"byte_end":672632,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672637,"byte_end":672650,"line_start":1530,"line_end":1530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672655,"byte_end":672658,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672663,"byte_end":672670,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672675,"byte_end":672714,"line_start":1533,"line_end":1533,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672719,"byte_end":672738,"line_start":1534,"line_end":1534,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672743,"byte_end":672789,"line_start":1535,"line_end":1535,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672794,"byte_end":672884,"line_start":1536,"line_end":1536,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672889,"byte_end":672977,"line_start":1537,"line_end":1537,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672982,"byte_end":672985,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":672990,"byte_end":673082,"line_start":1539,"line_end":1539,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673087,"byte_end":673094,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673099,"byte_end":673108,"line_start":1541,"line_end":1541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4916},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675913,"byte_end":675924,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Quaternion<N>>::from_vector","value":"pub fn from_vector(Vector4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`\n vector component.\n","sig":null,"attributes":[{"value":"/ Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675719,"byte_end":675811,"line_start":23,"line_end":23,"column_start":5,"column_end":97}},{"value":"/ vector component.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675816,"byte_end":675837,"line_start":24,"line_end":24,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675842,"byte_end":675851,"line_start":25,"line_end":25,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675856,"byte_end":675901,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4917},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676586,"byte_end":676589,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<N>>::new","value":"pub fn new(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its individual components. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its individual components. Note that the arguments order does","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675998,"byte_end":676093,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676098,"byte_end":676135,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676140,"byte_end":676143,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The storage order is `[ i, j, k, w ]` while the arguments for this functions are in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676148,"byte_end":676239,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ order `(w, i, j, k)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676244,"byte_end":676269,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676274,"byte_end":676277,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676282,"byte_end":676295,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676300,"byte_end":676307,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676312,"byte_end":676354,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676359,"byte_end":676407,"line_start":40,"line_end":40,"column_start":5,"column_end":53}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676412,"byte_end":676478,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676483,"byte_end":676548,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676553,"byte_end":676560,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676565,"byte_end":676574,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4920},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676780,"byte_end":676789,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"from_imag","qualname":"<Quaternion<N>>::from_imag","value":"pub fn from_imag(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a pure quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a pure quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676721,"byte_end":676754,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676759,"byte_end":676768,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4921},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677504,"byte_end":677514,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Quaternion<N>>::from_parts","value":"pub fn from_parts<SB>(N, Vector<N, U3, SB>) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its scalar and vector parts. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its scalar and vector parts. Note that the arguments order does","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676875,"byte_end":676972,"line_start":57,"line_end":57,"column_start":5,"column_end":102}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676977,"byte_end":677014,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677019,"byte_end":677022,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The storage order is [ vector, scalar ].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677027,"byte_end":677071,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677076,"byte_end":677079,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677084,"byte_end":677097,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677102,"byte_end":677109,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector3, Vector4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677114,"byte_end":677165,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/ let w = 1.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677170,"byte_end":677186,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/ let ijk = Vector3::new(2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677191,"byte_end":677233,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::from_parts(w, ijk);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677238,"byte_end":677281,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677286,"byte_end":677352,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677357,"byte_end":677422,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677427,"byte_end":677434,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677439,"byte_end":677448,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677738,"byte_end":677747,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"from_real","qualname":"<Quaternion<N>>::from_real","value":"pub fn from_real(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a real quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a real quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677679,"byte_end":677712,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677717,"byte_end":677726,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678141,"byte_end":678149,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"identity","qualname":"<Quaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The quaternion multiplicative identity.","sig":null,"attributes":[{"value":"/ The quaternion multiplicative identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677820,"byte_end":677863,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677868,"byte_end":677871,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677876,"byte_end":677889,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677894,"byte_end":677901,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677906,"byte_end":677937,"line_start":90,"line_end":90,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677942,"byte_end":677977,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/ let q2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":677982,"byte_end":678031,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678036,"byte_end":678039,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678044,"byte_end":678071,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678076,"byte_end":678103,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678108,"byte_end":678115,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678120,"byte_end":678129,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678503,"byte_end":678527,"line_start":112,"line_end":112,"column_start":12,"column_end":36},"name":"from_polar_decomposition","qualname":"<Quaternion<N>>::from_polar_decomposition","value":"pub fn from_polar_decomposition<SB>(N, N, Unit<Vector<N, U3, SB>>) -> Self\nwhere SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its polar decomposition.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its polar decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678326,"byte_end":678384,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678389,"byte_end":678392,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that `axis` is assumed to be a unit vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678397,"byte_end":678449,"line_start":110,"line_end":110,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680349,"byte_end":680357,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitQuaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation identity.","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679873,"byte_end":679899,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679904,"byte_end":679907,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679912,"byte_end":679925,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679930,"byte_end":679937,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679942,"byte_end":679996,"line_start":181,"line_end":181,"column_start":5,"column_end":59}},{"value":"/ let q = UnitQuaternion::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680001,"byte_end":680040,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let q2 = UnitQuaternion::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680045,"byte_end":680107,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"/ let v = Vector3::new_random();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680112,"byte_end":680146,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ let p = Point3::from(v);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680151,"byte_end":680179,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680184,"byte_end":680187,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680192,"byte_end":680219,"line_start":187,"line_end":187,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680224,"byte_end":680251,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q * v, v);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680256,"byte_end":680281,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(q * p, p);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680286,"byte_end":680311,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680316,"byte_end":680323,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680328,"byte_end":680337,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681464,"byte_end":681479,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<UnitQuaternion<N>>::from_axis_angle","value":"pub fn from_axis_angle<SB>(&Unit<Vector<N, U3, SB>>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from a unit vector (the rotation axis) and an angle\n (the rotation angle).","sig":null,"attributes":[{"value":"/ Creates a new quaternion from a unit vector (the rotation axis) and an angle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680433,"byte_end":680513,"line_start":197,"line_end":197,"column_start":5,"column_end":85}},{"value":"/ (the rotation angle).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680518,"byte_end":680543,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680548,"byte_end":680551,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680556,"byte_end":680569,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680574,"byte_end":680581,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680586,"byte_end":680625,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680630,"byte_end":680649,"line_start":203,"line_end":203,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680654,"byte_end":680708,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680713,"byte_end":680746,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680751,"byte_end":680790,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680795,"byte_end":680850,"line_start":207,"line_end":207,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680855,"byte_end":680895,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680900,"byte_end":680942,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":680947,"byte_end":681005,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681010,"byte_end":681013,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.axis().unwrap(), axis);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681018,"byte_end":681058,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.angle(), angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681063,"byte_end":681096,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681101,"byte_end":681180,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681185,"byte_end":681266,"line_start":215,"line_end":215,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681271,"byte_end":681274,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681279,"byte_end":681319,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681324,"byte_end":681426,"line_start":218,"line_end":218,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681431,"byte_end":681438,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681443,"byte_end":681452,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4946},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681900,"byte_end":681915,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<UnitQuaternion<N>>::from_quaternion","value":"pub fn from_quaternion(Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from a quaternion.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from a quaternion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681765,"byte_end":681817,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681822,"byte_end":681825,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The input quaternion will be normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681830,"byte_end":681874,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681879,"byte_end":681888,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682581,"byte_end":682598,"line_start":254,"line_end":254,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<UnitQuaternion<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from Euler angles.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":681986,"byte_end":682038,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682043,"byte_end":682046,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682051,"byte_end":682130,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682135,"byte_end":682138,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682143,"byte_end":682156,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682161,"byte_end":682168,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682173,"byte_end":682212,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682217,"byte_end":682252,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682257,"byte_end":682320,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682325,"byte_end":682360,"line_start":248,"line_end":248,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682365,"byte_end":682421,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682426,"byte_end":682482,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682487,"byte_end":682543,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682548,"byte_end":682555,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":682560,"byte_end":682569,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4948},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683753,"byte_end":683773,"line_start":284,"line_end":284,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitQuaternion<N>>::from_rotation_matrix","value":"pub fn from_rotation_matrix(&Rotation3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion from a rotation matrix.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion from a rotation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683101,"byte_end":683154,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683159,"byte_end":683162,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683167,"byte_end":683180,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683185,"byte_end":683192,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683197,"byte_end":683236,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683241,"byte_end":683298,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683303,"byte_end":683336,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ let angle = 0.1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683341,"byte_end":683361,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683366,"byte_end":683421,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_rotation_matrix(&rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683426,"byte_end":683481,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(q.to_rotation_matrix(), rot, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683486,"byte_end":683557,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(q.axis().unwrap(), rot.axis().unwrap(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683562,"byte_end":683644,"line_start":280,"line_end":280,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(q.angle(), rot.angle(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683649,"byte_end":683715,"line_start":281,"line_end":281,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683720,"byte_end":683727,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":683732,"byte_end":683741,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4955},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686645,"byte_end":686656,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitQuaternion<N>>::from_matrix","value":"pub fn from_matrix(&Matrix3<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686293,"byte_end":686387,"line_start":344,"line_end":344,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686392,"byte_end":686395,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686400,"byte_end":686472,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686477,"byte_end":686526,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686531,"byte_end":686633,"line_start":348,"line_end":348,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687577,"byte_end":687592,"line_start":368,"line_end":368,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitQuaternion<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix3<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686771,"byte_end":686865,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686870,"byte_end":686873,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686878,"byte_end":686980,"line_start":358,"line_end":358,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686985,"byte_end":686988,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":686993,"byte_end":687009,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687014,"byte_end":687017,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687022,"byte_end":687094,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687099,"byte_end":687190,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687195,"byte_end":687298,"line_start":364,"line_end":364,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687303,"byte_end":687416,"line_start":365,"line_end":365,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687421,"byte_end":687525,"line_start":366,"line_end":366,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687530,"byte_end":687565,"line_start":367,"line_end":367,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4957},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688474,"byte_end":688490,"line_start":391,"line_end":391,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitQuaternion<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction. Returns `None` if both `a` and `b` are collinear and point to opposite directions, as then the\n rotation desired is not unique.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687815,"byte_end":687904,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ direction. Returns `None` if both `a` and `b` are collinear and point to opposite directions, as then the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":687909,"byte_end":688018,"line_start":377,"line_end":377,"column_start":5,"column_end":114}},{"value":"/ rotation desired is not unique.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688023,"byte_end":688058,"line_start":378,"line_end":378,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688063,"byte_end":688066,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688071,"byte_end":688084,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688089,"byte_end":688096,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688101,"byte_end":688140,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688145,"byte_end":688191,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688196,"byte_end":688236,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688241,"byte_end":688281,"line_start":385,"line_end":385,"column_start":5,"column_end":45}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688286,"byte_end":688348,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688353,"byte_end":688387,"line_start":387,"line_end":387,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688392,"byte_end":688436,"line_start":388,"line_end":388,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688441,"byte_end":688448,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688453,"byte_end":688462,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4960},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689414,"byte_end":689437,"line_start":415,"line_end":415,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitQuaternion<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>, N)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688720,"byte_end":688808,"line_start":400,"line_end":400,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688813,"byte_end":688852,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688857,"byte_end":688860,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688865,"byte_end":688878,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688883,"byte_end":688890,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688895,"byte_end":688934,"line_start":405,"line_end":405,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688939,"byte_end":688985,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":688990,"byte_end":689030,"line_start":407,"line_end":407,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689035,"byte_end":689075,"line_start":408,"line_end":408,"column_start":5,"column_end":45}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689080,"byte_end":689155,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689160,"byte_end":689235,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689240,"byte_end":689313,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689318,"byte_end":689376,"line_start":412,"line_end":412,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689381,"byte_end":689388,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689393,"byte_end":689402,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4963},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690556,"byte_end":690577,"line_start":450,"line_end":450,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitQuaternion<N>>::rotation_between_axis","value":"pub fn rotation_between_axis<SB,\n                             SC>(&Unit<Vector<N, U3, SB>>,\n                                 &Unit<Vector<N, U3, SC>>) -> Option<Self>\nwhere N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":689984,"byte_end":690073,"line_start":436,"line_end":436,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690078,"byte_end":690092,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690097,"byte_end":690100,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690105,"byte_end":690118,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690123,"byte_end":690130,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690135,"byte_end":690174,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690179,"byte_end":690231,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690236,"byte_end":690297,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690302,"byte_end":690363,"line_start":444,"line_end":444,"column_start":5,"column_end":66}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690368,"byte_end":690430,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690435,"byte_end":690469,"line_start":446,"line_end":446,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690474,"byte_end":690518,"line_start":447,"line_end":447,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690523,"byte_end":690530,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690535,"byte_end":690544,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4966},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691589,"byte_end":691617,"line_start":477,"line_end":477,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitQuaternion<N>>::scaled_rotation_between_axis","value":"pub fn scaled_rotation_between_axis<SB,\n                                    SC>(&Unit<Vector<N, U3, SB>>,\n                                        &Unit<Vector<N, U3, SC>>, N)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690847,"byte_end":690935,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690940,"byte_end":690979,"line_start":463,"line_end":463,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690984,"byte_end":690987,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":690992,"byte_end":691005,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691010,"byte_end":691017,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691022,"byte_end":691061,"line_start":467,"line_end":467,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691066,"byte_end":691118,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691123,"byte_end":691184,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691189,"byte_end":691250,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691255,"byte_end":691330,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691335,"byte_end":691410,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691415,"byte_end":691488,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691493,"byte_end":691551,"line_start":474,"line_end":474,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691556,"byte_end":691563,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":691568,"byte_end":691577,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693536,"byte_end":693548,"line_start":536,"line_end":536,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<UnitQuaternion<N>>::face_towards","value":"pub fn face_towards<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unit quaternion that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates an unit quaternion that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692633,"byte_end":692730,"line_start":513,"line_end":513,"column_start":5,"column_end":102}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692735,"byte_end":692771,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692776,"byte_end":692779,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692784,"byte_end":692832,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692837,"byte_end":692840,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692845,"byte_end":692860,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction. It does not need to be normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692865,"byte_end":692933,"line_start":519,"line_end":519,"column_start":5,"column_end":73}},{"value":"/   * up - The vertical direction. It does not need to be normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":692938,"byte_end":693009,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/   The only requirement of this parameter is to not be collinear to `dir`. Non-collinearity","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693014,"byte_end":693108,"line_start":521,"line_end":521,"column_start":5,"column_end":99}},{"value":"/   is not checked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693113,"byte_end":693134,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693139,"byte_end":693142,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693147,"byte_end":693160,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693165,"byte_end":693172,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693177,"byte_end":693216,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693221,"byte_end":693240,"line_start":527,"line_end":527,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693245,"byte_end":693291,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693296,"byte_end":693338,"line_start":529,"line_end":529,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693343,"byte_end":693369,"line_start":530,"line_end":530,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693374,"byte_end":693377,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::face_towards(&dir, &up);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693382,"byte_end":693434,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(q * Vector3::z(), dir.normalize());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693439,"byte_end":693498,"line_start":533,"line_end":533,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693503,"byte_end":693510,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693515,"byte_end":693524,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693892,"byte_end":693911,"line_start":546,"line_end":546,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<UnitQuaternion<N>>::new_observer_frames","value":"pub fn new_observer_frames<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Self where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [UnitQuaternion::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [UnitQuaternion::face_towards] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693767,"byte_end":693826,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":693831,"byte_end":693880,"line_start":545,"line_end":545,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695063,"byte_end":695073,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<UnitQuaternion<N>>::look_at_rh","value":"pub fn look_at_rh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694096,"byte_end":694162,"line_start":554,"line_end":554,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694167,"byte_end":694170,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694175,"byte_end":694241,"line_start":556,"line_end":556,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694246,"byte_end":694333,"line_start":557,"line_end":557,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694338,"byte_end":694361,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694366,"byte_end":694369,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694374,"byte_end":694389,"line_start":560,"line_end":560,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694394,"byte_end":694464,"line_start":561,"line_end":561,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. It does not need","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694469,"byte_end":694562,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/   to be normalized. The only requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694567,"byte_end":694662,"line_start":563,"line_end":563,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694667,"byte_end":694670,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694675,"byte_end":694688,"line_start":565,"line_end":565,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694693,"byte_end":694700,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694705,"byte_end":694744,"line_start":567,"line_end":567,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694749,"byte_end":694768,"line_start":568,"line_end":568,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694773,"byte_end":694819,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694824,"byte_end":694866,"line_start":570,"line_end":570,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694871,"byte_end":694897,"line_start":571,"line_end":571,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694902,"byte_end":694905,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_rh(&dir, &up);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694910,"byte_end":694960,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":694965,"byte_end":695025,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695030,"byte_end":695037,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695042,"byte_end":695051,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4978},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696199,"byte_end":696209,"line_start":608,"line_end":608,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<UnitQuaternion<N>>::look_at_lh","value":"pub fn look_at_lh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695270,"byte_end":695335,"line_start":585,"line_end":585,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695340,"byte_end":695343,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695348,"byte_end":695414,"line_start":587,"line_end":587,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695419,"byte_end":695505,"line_start":588,"line_end":588,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695510,"byte_end":695533,"line_start":589,"line_end":589,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695538,"byte_end":695541,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695546,"byte_end":695561,"line_start":591,"line_end":591,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695566,"byte_end":695636,"line_start":592,"line_end":592,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695641,"byte_end":695726,"line_start":593,"line_end":593,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695731,"byte_end":695799,"line_start":594,"line_end":594,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695804,"byte_end":695807,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695812,"byte_end":695825,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695830,"byte_end":695837,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695842,"byte_end":695881,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695886,"byte_end":695905,"line_start":599,"line_end":599,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695910,"byte_end":695956,"line_start":600,"line_end":600,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":695961,"byte_end":696003,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696008,"byte_end":696034,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696039,"byte_end":696042,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_lh(&dir, &up);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696047,"byte_end":696097,"line_start":604,"line_end":604,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), Vector3::z());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696102,"byte_end":696161,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696166,"byte_end":696173,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696178,"byte_end":696187,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4981},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697408,"byte_end":697411,"line_start":638,"line_end":638,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitQuaternion<N>>::new","value":"pub fn new<SB>(Vector<N, U3, SB>) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696404,"byte_end":696497,"line_start":616,"line_end":616,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696502,"byte_end":696505,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696510,"byte_end":696617,"line_start":618,"line_end":618,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696622,"byte_end":696625,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696630,"byte_end":696643,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696648,"byte_end":696655,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696660,"byte_end":696699,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696704,"byte_end":696723,"line_start":623,"line_end":623,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696728,"byte_end":696782,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696787,"byte_end":696845,"line_start":625,"line_end":625,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696850,"byte_end":696905,"line_start":626,"line_end":626,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696910,"byte_end":696950,"line_start":627,"line_end":627,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":696955,"byte_end":696997,"line_start":628,"line_end":628,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697002,"byte_end":697045,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697050,"byte_end":697053,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697058,"byte_end":697137,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697142,"byte_end":697223,"line_start":632,"line_end":632,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697228,"byte_end":697231,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697236,"byte_end":697276,"line_start":634,"line_end":634,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::new(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697281,"byte_end":697370,"line_start":635,"line_end":635,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697375,"byte_end":697382,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697387,"byte_end":697396,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4983},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698684,"byte_end":698691,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"new_eps","qualname":"<UnitQuaternion<N>>::new_eps","value":"pub fn new_eps<SB>(Vector<N, U3, SB>, N) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697652,"byte_end":697745,"line_start":647,"line_end":647,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697750,"byte_end":697753,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697758,"byte_end":697848,"line_start":649,"line_end":649,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697853,"byte_end":697856,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697861,"byte_end":697874,"line_start":651,"line_end":651,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697879,"byte_end":697886,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697891,"byte_end":697930,"line_start":653,"line_end":653,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697935,"byte_end":697954,"line_start":654,"line_end":654,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":697959,"byte_end":698013,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698018,"byte_end":698076,"line_start":656,"line_end":656,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698081,"byte_end":698136,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698141,"byte_end":698181,"line_start":658,"line_end":658,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698186,"byte_end":698228,"line_start":659,"line_end":659,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698233,"byte_end":698288,"line_start":660,"line_end":660,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698293,"byte_end":698296,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698301,"byte_end":698380,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698385,"byte_end":698466,"line_start":663,"line_end":663,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698471,"byte_end":698474,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698479,"byte_end":698527,"line_start":665,"line_end":665,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::new_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698532,"byte_end":698646,"line_start":666,"line_end":666,"column_start":5,"column_end":119}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698651,"byte_end":698658,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698663,"byte_end":698672,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4985},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700017,"byte_end":700033,"line_start":701,"line_end":701,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitQuaternion<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB>(Vector<N, U3, SB>) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":698947,"byte_end":699040,"line_start":678,"line_end":678,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699045,"byte_end":699048,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699053,"byte_end":699160,"line_start":680,"line_end":680,"column_start":5,"column_end":112}},{"value":"/ Same as `Self::new(axisangle)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699165,"byte_end":699200,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699205,"byte_end":699208,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699213,"byte_end":699226,"line_start":683,"line_end":683,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699231,"byte_end":699238,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699243,"byte_end":699282,"line_start":685,"line_end":685,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699287,"byte_end":699306,"line_start":686,"line_end":686,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699311,"byte_end":699365,"line_start":687,"line_end":687,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699370,"byte_end":699428,"line_start":688,"line_end":688,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699433,"byte_end":699488,"line_start":689,"line_end":689,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699493,"byte_end":699533,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699538,"byte_end":699580,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis(axisangle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699585,"byte_end":699641,"line_start":692,"line_end":692,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699646,"byte_end":699649,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699654,"byte_end":699733,"line_start":694,"line_end":694,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699738,"byte_end":699819,"line_start":695,"line_end":695,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699824,"byte_end":699827,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699832,"byte_end":699872,"line_start":697,"line_end":697,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699877,"byte_end":699979,"line_start":698,"line_end":698,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699984,"byte_end":699991,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":699996,"byte_end":700005,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4987},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701267,"byte_end":701287,"line_start":731,"line_end":731,"column_start":12,"column_end":32},"name":"from_scaled_axis_eps","qualname":"<UnitQuaternion<N>>::from_scaled_axis_eps","value":"pub fn from_scaled_axis_eps<SB>(Vector<N, U3, SB>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700160,"byte_end":700253,"line_start":708,"line_end":708,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700258,"byte_end":700261,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700266,"byte_end":700356,"line_start":710,"line_end":710,"column_start":5,"column_end":95}},{"value":"/ Same as `Self::new_eps(axisangle, eps)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700361,"byte_end":700405,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700410,"byte_end":700413,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700418,"byte_end":700431,"line_start":713,"line_end":713,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700436,"byte_end":700443,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700448,"byte_end":700487,"line_start":715,"line_end":715,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700492,"byte_end":700511,"line_start":716,"line_end":716,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700516,"byte_end":700570,"line_start":717,"line_end":717,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700575,"byte_end":700633,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700638,"byte_end":700693,"line_start":719,"line_end":719,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700698,"byte_end":700738,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700743,"byte_end":700785,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700790,"byte_end":700858,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700863,"byte_end":700866,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700871,"byte_end":700950,"line_start":724,"line_end":724,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":700955,"byte_end":701036,"line_start":725,"line_end":725,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701041,"byte_end":701044,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701049,"byte_end":701097,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701102,"byte_end":701229,"line_start":728,"line_end":728,"column_start":5,"column_end":132}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701234,"byte_end":701241,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701246,"byte_end":701255,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4989},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702522,"byte_end":702529,"line_start":763,"line_end":763,"column_start":12,"column_end":19},"name":"mean_of","qualname":"<UnitQuaternion<N>>::mean_of","value":"pub fn mean_of<impl IntoIterator<Item = Self>: IntoIterator<Item =\n               Self>>(impl IntoIterator<Item = Self>) -> Self where\nN: RealField","parent":null,"children":[],"decl_id":null,"docs":" Create the mean unit quaternion from a data structure implementing IntoIterator\n returning unit quaternions.","sig":null,"attributes":[{"value":"/ Create the mean unit quaternion from a data structure implementing IntoIterator","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701431,"byte_end":701514,"line_start":738,"line_end":738,"column_start":5,"column_end":88}},{"value":"/ returning unit quaternions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701519,"byte_end":701550,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701555,"byte_end":701558,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ The method will panic if the iterator does not return any quaternions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701563,"byte_end":701637,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701642,"byte_end":701645,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Algorithm from: Oshman, Yaakov, and Avishy Carmi. \"Attitude estimation from vector","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701650,"byte_end":701736,"line_start":743,"line_end":743,"column_start":5,"column_end":91}},{"value":"/ observations using a genetic-algorithm-embedded quaternion particle filter.\" Journal of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701741,"byte_end":701832,"line_start":744,"line_end":744,"column_start":5,"column_end":96}},{"value":"/ Guidance, Control, and Dynamics 29.4 (2006): 879-891.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701837,"byte_end":701894,"line_start":745,"line_end":745,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701899,"byte_end":701902,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701907,"byte_end":701920,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701925,"byte_end":701932,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701937,"byte_end":701976,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":701981,"byte_end":702000,"line_start":750,"line_end":750,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702005,"byte_end":702042,"line_start":751,"line_end":751,"column_start":5,"column_end":42}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702047,"byte_end":702109,"line_start":752,"line_end":752,"column_start":5,"column_end":67}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-0.1, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702114,"byte_end":702177,"line_start":753,"line_end":753,"column_start":5,"column_end":68}},{"value":"/ let q3 = UnitQuaternion::from_euler_angles(0.1, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702182,"byte_end":702244,"line_start":754,"line_end":754,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702249,"byte_end":702252,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let quat_vec = vec![q1, q2, q3];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702257,"byte_end":702293,"line_start":756,"line_end":756,"column_start":5,"column_end":41}},{"value":"/ let q_mean = UnitQuaternion::mean_of(quat_vec);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702298,"byte_end":702349,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702354,"byte_end":702357,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ let euler_angles_mean = q_mean.euler_angles();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702362,"byte_end":702412,"line_start":759,"line_end":759,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(euler_angles_mean.0, 0.0, epsilon = 1.0e-7)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702417,"byte_end":702484,"line_start":760,"line_end":760,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702489,"byte_end":702496,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":702501,"byte_end":702510,"line_start":762,"line_end":762,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5251},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":738756,"byte_end":738767,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"UnitComplex","qualname":"::geometry::unit_complex::UnitComplex","value":"Unit<Complex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A complex number with a norm equal to 1.\n","sig":null,"attributes":[{"value":"/ A complex number with a norm equal to 1.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":738702,"byte_end":738746,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5262},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739897,"byte_end":739902,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitComplex<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in `]-pi; pi]` of this unit complex number.","sig":null,"attributes":[{"value":"/ The rotation angle in `]-pi; pi]` of this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739637,"byte_end":739703,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739708,"byte_end":739711,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739716,"byte_end":739729,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739734,"byte_end":739741,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739746,"byte_end":739778,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739783,"byte_end":739820,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739825,"byte_end":739859,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739864,"byte_end":739871,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739876,"byte_end":739885,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5263},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740234,"byte_end":740243,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"sin_angle","qualname":"<UnitComplex<N>>::sin_angle","value":"pub fn sin_angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of the rotation angle.","sig":null,"attributes":[{"value":"/ The sine of the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739964,"byte_end":739999,"line_start":60,"line_end":60,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740004,"byte_end":740007,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740012,"byte_end":740025,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740030,"byte_end":740037,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740042,"byte_end":740074,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740079,"byte_end":740103,"line_start":65,"line_end":65,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740108,"byte_end":740146,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.sin_angle(), angle.sin());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740151,"byte_end":740196,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740201,"byte_end":740208,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740213,"byte_end":740222,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5264},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740556,"byte_end":740565,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"cos_angle","qualname":"<UnitComplex<N>>::cos_angle","value":"pub fn cos_angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of the rotation angle.","sig":null,"attributes":[{"value":"/ The cosine of the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740285,"byte_end":740322,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740327,"byte_end":740330,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740335,"byte_end":740348,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740353,"byte_end":740360,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740365,"byte_end":740397,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740402,"byte_end":740426,"line_start":79,"line_end":79,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740431,"byte_end":740469,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.cos_angle(),angle.cos());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740474,"byte_end":740518,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740523,"byte_end":740530,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740535,"byte_end":740544,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740829,"byte_end":740840,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitComplex<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector1<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740607,"byte_end":740665,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740670,"byte_end":740673,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740678,"byte_end":740749,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740754,"byte_end":740803,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740808,"byte_end":740817,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5266},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741185,"byte_end":741195,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitComplex<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector1<N>>, N)> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this complex number.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740910,"byte_end":740976,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740981,"byte_end":740984,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":740989,"byte_end":741060,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741065,"byte_end":741114,"line_start":100,"line_end":100,"column_start":5,"column_end":54}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741119,"byte_end":741159,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741164,"byte_end":741173,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5267},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741965,"byte_end":741972,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"complex","qualname":"<UnitComplex<N>>::complex","value":"pub fn complex(&Self) -> &Complex<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying complex number.","sig":null,"attributes":[{"value":"/ The underlying complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741557,"byte_end":741591,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741596,"byte_end":741599,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741604,"byte_end":741632,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741637,"byte_end":741640,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741645,"byte_end":741658,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741663,"byte_end":741670,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741675,"byte_end":741706,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741711,"byte_end":741742,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741747,"byte_end":741779,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741784,"byte_end":741808,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741813,"byte_end":741851,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(*rot.complex(), Complex::new(angle.cos(), angle.sin()));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741856,"byte_end":741927,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741932,"byte_end":741939,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":741944,"byte_end":741953,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5268},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742447,"byte_end":742456,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitComplex<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742030,"byte_end":742084,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742089,"byte_end":742092,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742097,"byte_end":742110,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742115,"byte_end":742122,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742127,"byte_end":742159,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742164,"byte_end":742201,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742206,"byte_end":742237,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742242,"byte_end":742295,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742300,"byte_end":742352,"line_start":144,"line_end":144,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742357,"byte_end":742364,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742369,"byte_end":742378,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742383,"byte_end":742435,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5269},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743028,"byte_end":743035,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitComplex<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this complex number if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this complex number if it is not zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742526,"byte_end":742576,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742581,"byte_end":742584,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742589,"byte_end":742602,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742607,"byte_end":742614,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742619,"byte_end":742658,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742663,"byte_end":742695,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742700,"byte_end":742736,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742741,"byte_end":742769,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742774,"byte_end":742852,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/ assert_relative_eq!(inv * rot, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742857,"byte_end":742935,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742940,"byte_end":742947,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742952,"byte_end":742961,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":742966,"byte_end":743016,"line_start":164,"line_end":164,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743452,"byte_end":743460,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitComplex<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743089,"byte_end":743155,"line_start":169,"line_end":169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743160,"byte_end":743163,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743168,"byte_end":743181,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743186,"byte_end":743193,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743198,"byte_end":743237,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743242,"byte_end":743274,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743279,"byte_end":743316,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743321,"byte_end":743358,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743363,"byte_end":743414,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743419,"byte_end":743426,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743431,"byte_end":743440,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744127,"byte_end":744138,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitComplex<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit complex number needed to make `self` and `other` coincide.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743567,"byte_end":743638,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743643,"byte_end":743646,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743651,"byte_end":743722,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743727,"byte_end":743730,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743735,"byte_end":743748,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743753,"byte_end":743760,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743765,"byte_end":743804,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743809,"byte_end":743841,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743846,"byte_end":743883,"line_start":193,"line_end":193,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743888,"byte_end":743925,"line_start":194,"line_end":194,"column_start":5,"column_end":42}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743930,"byte_end":743971,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743976,"byte_end":743979,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":743984,"byte_end":744029,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744034,"byte_end":744089,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744094,"byte_end":744101,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744106,"byte_end":744115,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5272},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744683,"byte_end":744696,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitComplex<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Compute in-place the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute in-place the conjugate of this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744202,"byte_end":744265,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744270,"byte_end":744273,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744278,"byte_end":744291,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744296,"byte_end":744303,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744308,"byte_end":744347,"line_start":209,"line_end":209,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744352,"byte_end":744384,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744389,"byte_end":744409,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744414,"byte_end":744452,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ let mut conj = UnitComplex::new(angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744457,"byte_end":744500,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ conj.conjugate_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744505,"byte_end":744530,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744535,"byte_end":744588,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744593,"byte_end":744645,"line_start":216,"line_end":216,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744650,"byte_end":744657,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744662,"byte_end":744671,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5273},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745259,"byte_end":745270,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitComplex<N>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts in-place this unit complex number.","sig":null,"attributes":[{"value":"/ Inverts in-place this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744787,"byte_end":744833,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744838,"byte_end":744841,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744846,"byte_end":744859,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744864,"byte_end":744871,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744876,"byte_end":744915,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744920,"byte_end":744952,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744957,"byte_end":744977,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ let mut rot = UnitComplex::new(angle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":744982,"byte_end":745024,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745029,"byte_end":745051,"line_start":232,"line_end":232,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitComplex::new(angle), UnitComplex::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745056,"byte_end":745136,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(UnitComplex::new(angle) * rot, UnitComplex::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745141,"byte_end":745221,"line_start":234,"line_end":234,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745226,"byte_end":745233,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745238,"byte_end":745247,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5274},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745795,"byte_end":745799,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitComplex<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise this unit complex number to a given floating power.","sig":null,"attributes":[{"value":"/ Raise this unit complex number to a given floating power.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745324,"byte_end":745385,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745390,"byte_end":745393,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This returns the unit complex number that identifies a rotation angle equal to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745398,"byte_end":745480,"line_start":243,"line_end":243,"column_start":5,"column_end":87}},{"value":"/ `self.angle() × n`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745485,"byte_end":745509,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745514,"byte_end":745517,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745522,"byte_end":745535,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745540,"byte_end":745547,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745552,"byte_end":745591,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745596,"byte_end":745628,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(0.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745633,"byte_end":745670,"line_start":250,"line_end":250,"column_start":5,"column_end":42}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745675,"byte_end":745703,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745708,"byte_end":745757,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745762,"byte_end":745769,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745774,"byte_end":745783,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746279,"byte_end":746297,"line_start":270,"line_end":270,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitComplex<N>>::to_rotation_matrix","value":"pub fn to_rotation_matrix(&Self) -> Rotation2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds the rotation matrix corresponding to this unit complex number.","sig":null,"attributes":[{"value":"/ Builds the rotation matrix corresponding to this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745877,"byte_end":745950,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745955,"byte_end":745958,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745963,"byte_end":745976,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745981,"byte_end":745988,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Rotation2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":745993,"byte_end":746038,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746043,"byte_end":746062,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746067,"byte_end":746122,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/ let expected = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746127,"byte_end":746185,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rot.to_rotation_matrix(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746190,"byte_end":746241,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746246,"byte_end":746253,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746258,"byte_end":746267,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746995,"byte_end":747009,"line_start":290,"line_end":290,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitComplex<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit complex number into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit complex number into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746453,"byte_end":746545,"line_start":277,"line_end":277,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746550,"byte_end":746553,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746558,"byte_end":746571,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746576,"byte_end":746583,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746588,"byte_end":746631,"line_start":281,"line_end":281,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746636,"byte_end":746655,"line_start":282,"line_end":282,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746660,"byte_end":746715,"line_start":283,"line_end":283,"column_start":5,"column_end":60}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746720,"byte_end":746778,"line_start":284,"line_end":284,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746783,"byte_end":746841,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746846,"byte_end":746905,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746910,"byte_end":746957,"line_start":287,"line_end":287,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746962,"byte_end":746969,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":746974,"byte_end":746983,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5277},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747636,"byte_end":747651,"line_start":308,"line_end":308,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitComplex<N>>::transform_point","value":"pub fn transform_point(&Self, &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747095,"byte_end":747150,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747155,"byte_end":747158,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747163,"byte_end":747218,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747223,"byte_end":747226,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747231,"byte_end":747244,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747249,"byte_end":747256,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747261,"byte_end":747300,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747305,"byte_end":747347,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747352,"byte_end":747371,"line_start":302,"line_end":302,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747376,"byte_end":747431,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747436,"byte_end":747508,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747513,"byte_end":747598,"line_start":305,"line_end":305,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747603,"byte_end":747610,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747615,"byte_end":747624,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748266,"byte_end":748282,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitComplex<N>>::transform_vector","value":"pub fn transform_vector(&Self, &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747719,"byte_end":747775,"line_start":312,"line_end":312,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747780,"byte_end":747783,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747788,"byte_end":747842,"line_start":314,"line_end":314,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747847,"byte_end":747850,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747855,"byte_end":747868,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747873,"byte_end":747880,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747885,"byte_end":747924,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747929,"byte_end":747972,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":747977,"byte_end":747996,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748001,"byte_end":748056,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748061,"byte_end":748136,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748141,"byte_end":748228,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748233,"byte_end":748240,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748245,"byte_end":748254,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5279},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748846,"byte_end":748869,"line_start":342,"line_end":342,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitComplex<N>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748350,"byte_end":748420,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748425,"byte_end":748428,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748433,"byte_end":748446,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748451,"byte_end":748458,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748463,"byte_end":748502,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748507,"byte_end":748549,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748554,"byte_end":748573,"line_start":336,"line_end":336,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748578,"byte_end":748633,"line_start":337,"line_end":337,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748638,"byte_end":748718,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748723,"byte_end":748808,"line_start":339,"line_end":339,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748813,"byte_end":748820,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":748825,"byte_end":748834,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5280},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749607,"byte_end":749631,"line_start":360,"line_end":360,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitComplex<N>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749104,"byte_end":749175,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749180,"byte_end":749183,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749188,"byte_end":749201,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749206,"byte_end":749213,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749218,"byte_end":749257,"line_start":352,"line_end":352,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749262,"byte_end":749305,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749310,"byte_end":749329,"line_start":354,"line_end":354,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749334,"byte_end":749389,"line_start":355,"line_end":355,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749394,"byte_end":749477,"line_start":356,"line_end":356,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749482,"byte_end":749569,"line_start":357,"line_end":357,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749574,"byte_end":749581,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749586,"byte_end":749595,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5320},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751891,"byte_end":751899,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitComplex<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number multiplicative identity.","sig":null,"attributes":[{"value":"/ The unit complex number multiplicative identity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751554,"byte_end":751606,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751611,"byte_end":751614,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751619,"byte_end":751632,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751637,"byte_end":751644,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751649,"byte_end":751681,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751686,"byte_end":751725,"line_start":25,"line_end":25,"column_start":5,"column_end":44}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751730,"byte_end":751767,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751772,"byte_end":751775,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751780,"byte_end":751814,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751819,"byte_end":751853,"line_start":29,"line_end":29,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751858,"byte_end":751865,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751870,"byte_end":751879,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752421,"byte_end":752424,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitComplex<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the given angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the given angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751986,"byte_end":752072,"line_start":36,"line_end":36,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752077,"byte_end":752080,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752085,"byte_end":752098,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752103,"byte_end":752106,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752111,"byte_end":752118,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752123,"byte_end":752162,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752167,"byte_end":752186,"line_start":42,"line_end":42,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752191,"byte_end":752233,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752238,"byte_end":752293,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752298,"byte_end":752301,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752306,"byte_end":752383,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752388,"byte_end":752395,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752400,"byte_end":752409,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753060,"byte_end":753070,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<UnitComplex<N>>::from_angle","value":"pub fn from_angle(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752550,"byte_end":752630,"line_start":54,"line_end":54,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752635,"byte_end":752638,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Same as `Self::new(angle)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752643,"byte_end":752674,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752679,"byte_end":752682,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752687,"byte_end":752700,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752705,"byte_end":752708,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752713,"byte_end":752720,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752725,"byte_end":752764,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752769,"byte_end":752788,"line_start":62,"line_end":62,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752793,"byte_end":752835,"line_start":63,"line_end":63,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::from_angle(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752840,"byte_end":752902,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752907,"byte_end":752910,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752915,"byte_end":752992,"line_start":66,"line_end":66,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":752997,"byte_end":753004,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753039,"byte_end":753048,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5323},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753816,"byte_end":753838,"line_start":91,"line_end":91,"column_start":12,"column_end":34},"name":"from_cos_sin_unchecked","qualname":"<UnitComplex<N>>::from_cos_sin_unchecked","value":"pub fn from_cos_sin_unchecked(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the sinus and cosinus of the rotation angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the sinus and cosinus of the rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753127,"byte_end":753211,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753216,"byte_end":753219,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The input values are not checked to actually be cosines and sine of the same value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753224,"byte_end":753311,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ Is is generally preferable to use the `::new(angle)` constructor instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753316,"byte_end":753393,"line_start":77,"line_end":77,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753398,"byte_end":753401,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753406,"byte_end":753419,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753424,"byte_end":753427,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753432,"byte_end":753439,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753444,"byte_end":753483,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753488,"byte_end":753507,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Vector2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753512,"byte_end":753563,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753568,"byte_end":753607,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/ let rot = UnitComplex::from_cos_sin_unchecked(angle.cos(), angle.sin());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753612,"byte_end":753688,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753693,"byte_end":753696,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753701,"byte_end":753778,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753783,"byte_end":753790,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753795,"byte_end":753804,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754189,"byte_end":754205,"line_start":100,"line_end":100,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitComplex<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U1>>(Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":753928,"byte_end":754021,"line_start":95,"line_end":95,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754026,"byte_end":754029,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754034,"byte_end":754105,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754110,"byte_end":754163,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754168,"byte_end":754177,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754463,"byte_end":754475,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"from_complex","qualname":"<UnitComplex<N>>::from_complex","value":"pub fn from_complex(Complex<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754316,"byte_end":754376,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754381,"byte_end":754384,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754389,"byte_end":754437,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754442,"byte_end":754451,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5327},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754747,"byte_end":754767,"line_start":116,"line_end":116,"column_start":12,"column_end":32},"name":"from_complex_and_get","qualname":"<UnitComplex<N>>::from_complex_and_get","value":"pub fn from_complex_and_get(Complex<N>) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754552,"byte_end":754612,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754617,"byte_end":754620,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized. Returns the norm of the complex number as well.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754625,"byte_end":754721,"line_start":114,"line_end":114,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754726,"byte_end":754735,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5328},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755322,"byte_end":755342,"line_start":132,"line_end":132,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitComplex<N>>::from_rotation_matrix","value":"pub fn from_rotation_matrix(&Rotation2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the corresponding 2D rotation matrix.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the corresponding 2D rotation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754915,"byte_end":754992,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":754997,"byte_end":755000,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755005,"byte_end":755018,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755023,"byte_end":755030,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755035,"byte_end":755080,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"/ let rot = Rotation2::new(1.7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755085,"byte_end":755119,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ let complex = UnitComplex::from_rotation_matrix(&rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755124,"byte_end":755182,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(complex, UnitComplex::new(1.7));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755187,"byte_end":755234,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755239,"byte_end":755246,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755301,"byte_end":755310,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755810,"byte_end":755821,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitComplex<N>>::from_matrix","value":"pub fn from_matrix(&Matrix2<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755461,"byte_end":755552,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755557,"byte_end":755560,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755565,"byte_end":755637,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755642,"byte_end":755691,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755696,"byte_end":755798,"line_start":140,"line_end":140,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":5330},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756739,"byte_end":756754,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitComplex<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix2<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":755936,"byte_end":756027,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756032,"byte_end":756035,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756040,"byte_end":756142,"line_start":150,"line_end":150,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756147,"byte_end":756150,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756155,"byte_end":756171,"line_start":152,"line_end":152,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756176,"byte_end":756179,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756184,"byte_end":756256,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756261,"byte_end":756352,"line_start":155,"line_end":155,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756357,"byte_end":756460,"line_start":156,"line_end":156,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756465,"byte_end":756578,"line_start":157,"line_end":157,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756583,"byte_end":756687,"line_start":158,"line_end":158,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756692,"byte_end":756727,"line_start":159,"line_end":159,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757479,"byte_end":757495,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitComplex<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":756977,"byte_end":757063,"line_start":168,"line_end":168,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757068,"byte_end":757082,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757087,"byte_end":757090,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757095,"byte_end":757108,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757113,"byte_end":757120,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757125,"byte_end":757164,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757169,"byte_end":757212,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757217,"byte_end":757252,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757257,"byte_end":757292,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitComplex::rotation_between(&a, &b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757297,"byte_end":757349,"line_start":177,"line_end":177,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757354,"byte_end":757390,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757395,"byte_end":757441,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757446,"byte_end":757453,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757458,"byte_end":757467,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5334},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758392,"byte_end":758415,"line_start":206,"line_end":206,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitComplex<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>, N)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757717,"byte_end":757805,"line_start":191,"line_end":191,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757810,"byte_end":757849,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757854,"byte_end":757857,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757862,"byte_end":757875,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757880,"byte_end":757887,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757892,"byte_end":757931,"line_start":196,"line_end":196,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757936,"byte_end":757979,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":757984,"byte_end":758019,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758024,"byte_end":758059,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758064,"byte_end":758129,"line_start":200,"line_end":200,"column_start":5,"column_end":70}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758134,"byte_end":758199,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758204,"byte_end":758287,"line_start":202,"line_end":202,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758292,"byte_end":758354,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758359,"byte_end":758366,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758371,"byte_end":758380,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759503,"byte_end":759524,"line_start":241,"line_end":241,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitComplex<N>>::rotation_between_axis","value":"pub fn rotation_between_axis<SB,\n                             SC>(&Unit<Vector<N, U2, SB>>,\n                                 &Unit<Vector<N, U2, SC>>) -> Self where\nSB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":758948,"byte_end":759034,"line_start":227,"line_end":227,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759039,"byte_end":759053,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759058,"byte_end":759061,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759066,"byte_end":759079,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759084,"byte_end":759091,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759096,"byte_end":759135,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759140,"byte_end":759189,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759194,"byte_end":759250,"line_start":234,"line_end":234,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759255,"byte_end":759311,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/ let rot = UnitComplex::rotation_between_axis(&a, &b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759316,"byte_end":759373,"line_start":236,"line_end":236,"column_start":5,"column_end":62}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759378,"byte_end":759414,"line_start":237,"line_end":237,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759419,"byte_end":759465,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759470,"byte_end":759477,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759482,"byte_end":759491,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5340},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760497,"byte_end":760525,"line_start":267,"line_end":267,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitComplex<N>>::scaled_rotation_between_axis","value":"pub fn scaled_rotation_between_axis<SB,\n                                    SC>(&Unit<Vector<N, U2, SB>>,\n                                        &Unit<Vector<N, U2, SC>>, N) -> Self\nwhere SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759764,"byte_end":759852,"line_start":252,"line_end":252,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759857,"byte_end":759896,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759901,"byte_end":759904,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759909,"byte_end":759922,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759927,"byte_end":759934,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759939,"byte_end":759978,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":759983,"byte_end":760032,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760037,"byte_end":760093,"line_start":259,"line_end":259,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760098,"byte_end":760154,"line_start":260,"line_end":260,"column_start":5,"column_end":61}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760159,"byte_end":760229,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760234,"byte_end":760304,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760309,"byte_end":760392,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760397,"byte_end":760459,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760464,"byte_end":760471,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760476,"byte_end":760485,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18666},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":783806,"byte_end":783817,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"Translation","qualname":"::geometry::translation::Translation","value":"Translation { vector }","parent":null,"children":[{"krate":0,"index":18669}],"decl_id":null,"docs":" A translation.\n","sig":null,"attributes":[{"value":"/ A translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":783748,"byte_end":783766,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":783767,"byte_end":783777,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18669},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784013,"byte_end":784019,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"vector","qualname":"::geometry::translation::Translation::vector","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":18666},"children":[],"decl_id":null,"docs":" The translation coordinates, i.e., how much is added to a point's coordinates when it is\n translated.\n","sig":null,"attributes":[{"value":"/ The translation coordinates, i.e., how much is added to a point's coordinates when it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":783892,"byte_end":783984,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"/ translated.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":783989,"byte_end":784004,"line_start":31,"line_end":31,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786144,"byte_end":786155,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Translation<N, D>>::from_vector","value":"pub fn from_vector(VectorN<N, D>) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new translation from the given vector.\n","sig":null,"attributes":[{"value":"/ Creates a new translation from the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786016,"byte_end":786068,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786073,"byte_end":786082,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786087,"byte_end":786132,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786838,"byte_end":786845,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation<N, D>>::inverse","value":"pub fn inverse(&Self) -> Translation<N, D> where N: ClosedNeg","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786244,"byte_end":786263,"line_start":125,"line_end":125,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786268,"byte_end":786271,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786276,"byte_end":786289,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786294,"byte_end":786301,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786306,"byte_end":786355,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786360,"byte_end":786405,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(t * t.inverse(), Translation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786410,"byte_end":786468,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786473,"byte_end":786531,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786536,"byte_end":786539,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786544,"byte_end":786574,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786579,"byte_end":786619,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(t * t.inverse(), Translation2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786624,"byte_end":786682,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786687,"byte_end":786745,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786750,"byte_end":786757,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786762,"byte_end":786771,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786776,"byte_end":786826,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787788,"byte_end":787802,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Translation<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where N: Zero +\nOne, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this translation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this translation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":786964,"byte_end":787048,"line_start":148,"line_end":148,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787053,"byte_end":787056,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787061,"byte_end":787074,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787079,"byte_end":787086,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3, Matrix3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787091,"byte_end":787158,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/ let t = Translation3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787163,"byte_end":787211,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ let expected = Matrix4::new(1.0, 0.0, 0.0, 10.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787216,"byte_end":787268,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/                             0.0, 1.0, 0.0, 20.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787273,"byte_end":787325,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 1.0, 30.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787330,"byte_end":787382,"line_start":156,"line_end":156,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787387,"byte_end":787439,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787444,"byte_end":787489,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787494,"byte_end":787497,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let t = Translation2::new(10.0, 20.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787502,"byte_end":787544,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ let expected = Matrix3::new(1.0, 0.0, 10.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787549,"byte_end":787596,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/                             0.0, 1.0, 20.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787601,"byte_end":787648,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/                             0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787653,"byte_end":787700,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787705,"byte_end":787750,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787755,"byte_end":787762,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":787767,"byte_end":787776,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788859,"byte_end":788870,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Translation<N, D>>::inverse_mut","value":"pub fn inverse_mut(&mut Self) where N: ClosedNeg","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788166,"byte_end":788194,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788199,"byte_end":788202,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788207,"byte_end":788220,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788225,"byte_end":788232,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788237,"byte_end":788286,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788291,"byte_end":788336,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ let mut inv_t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788341,"byte_end":788394,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788399,"byte_end":788423,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788428,"byte_end":788480,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation3::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788485,"byte_end":788537,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788542,"byte_end":788545,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788550,"byte_end":788580,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788585,"byte_end":788625,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ let mut inv_t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788630,"byte_end":788678,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788683,"byte_end":788707,"line_start":194,"line_end":194,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788712,"byte_end":788764,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788769,"byte_end":788821,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788826,"byte_end":788833,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788838,"byte_end":788847,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5626},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789475,"byte_end":789490,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation<N, D>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point.","sig":null,"attributes":[{"value":"/ Translate the given point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789068,"byte_end":789098,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789103,"byte_end":789106,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789111,"byte_end":789166,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789171,"byte_end":789174,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789179,"byte_end":789192,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789197,"byte_end":789204,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789209,"byte_end":789252,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789257,"byte_end":789302,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789307,"byte_end":789382,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(transformed_point, Point3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789387,"byte_end":789449,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789454,"byte_end":789463,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5630},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790059,"byte_end":790082,"line_start":240,"line_end":240,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Translation<N, D>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point by the inverse of this translation.","sig":null,"attributes":[{"value":"/ Translate the given point by the inverse of this translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789677,"byte_end":789742,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789747,"byte_end":789750,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789755,"byte_end":789768,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789773,"byte_end":789780,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789785,"byte_end":789828,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789833,"byte_end":789878,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789883,"byte_end":789966,"line_start":237,"line_end":237,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(transformed_point, Point3::new(3.0, 3.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789971,"byte_end":790033,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790038,"byte_end":790047,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5667},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792343,"byte_end":792355,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"Translation1","qualname":"::geometry::translation_alias::Translation1","value":"Translation<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A 1-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 1-dimensional translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792301,"byte_end":792333,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5669},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792424,"byte_end":792436,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"Translation2","qualname":"::geometry::translation_alias::Translation2","value":"Translation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792382,"byte_end":792414,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5671},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792505,"byte_end":792517,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"Translation3","qualname":"::geometry::translation_alias::Translation3","value":"Translation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792463,"byte_end":792495,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5673},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792586,"byte_end":792598,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"Translation4","qualname":"::geometry::translation_alias::Translation4","value":"Translation<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792544,"byte_end":792576,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5675},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792667,"byte_end":792679,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"Translation5","qualname":"::geometry::translation_alias::Translation5","value":"Translation<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A 5-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 5-dimensional translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792625,"byte_end":792657,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5677},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792748,"byte_end":792760,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"Translation6","qualname":"::geometry::translation_alias::Translation6","value":"Translation<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A 6-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 6-dimensional translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_alias.rs","byte_start":792706,"byte_end":792738,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5705},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793787,"byte_end":793795,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation<N, D>>::identity","value":"pub fn identity() -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity translation.","sig":null,"attributes":[{"value":"/ Creates a new identity translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793331,"byte_end":793370,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793375,"byte_end":793378,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793383,"byte_end":793396,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793401,"byte_end":793408,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Translation2, Translation3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793413,"byte_end":793478,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/ let t = Translation2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793483,"byte_end":793520,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793525,"byte_end":793559,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793564,"byte_end":793589,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793594,"byte_end":793597,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // Works in all dimensions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793602,"byte_end":793633,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ let t = Translation3::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793638,"byte_end":793675,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793680,"byte_end":793719,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793724,"byte_end":793749,"line_start":34,"line_end":34,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793754,"byte_end":793761,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793766,"byte_end":793775,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18824},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":814582,"byte_end":814590,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"Isometry","qualname":"::geometry::isometry::Isometry","value":"Isometry { rotation, translation }","parent":null,"children":[{"krate":0,"index":18828},{"krate":0,"index":18829}],"decl_id":null,"docs":" A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.\n","sig":null,"attributes":[{"value":"/ A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":813918,"byte_end":814061,"line_start":22,"line_end":22,"column_start":1,"column_end":144}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":814062,"byte_end":814072,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18828},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":814723,"byte_end":814731,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"rotation","qualname":"::geometry::isometry::Isometry::rotation","value":"R","parent":{"krate":0,"index":18824},"children":[],"decl_id":null,"docs":" The pure rotational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure rotational part of this isometry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":814668,"byte_end":814714,"line_start":42,"line_end":42,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":18829},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":814798,"byte_end":814809,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"translation","qualname":"::geometry::isometry::Isometry::translation","value":"geometry::translation::Translation<N, D>","parent":{"krate":0,"index":18824},"children":[],"decl_id":null,"docs":" The pure translational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure translational part of this isometry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":814740,"byte_end":814789,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817021,"byte_end":817031,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Isometry<N, D, R>>::from_parts","value":"pub fn from_parts(Translation<N, D>, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from its rotational and translational parts.","sig":null,"attributes":[{"value":"/ Creates a new isometry from its rotational and translational parts.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816409,"byte_end":816480,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816485,"byte_end":816488,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816493,"byte_end":816506,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816511,"byte_end":816514,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816519,"byte_end":816526,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816531,"byte_end":816570,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816575,"byte_end":816594,"line_start":115,"line_end":115,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816599,"byte_end":816678,"line_start":116,"line_end":116,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816683,"byte_end":816730,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816735,"byte_end":816814,"line_start":118,"line_end":118,"column_start":5,"column_end":84}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816819,"byte_end":816865,"line_start":119,"line_end":119,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816870,"byte_end":816873,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * Point3::new(1.0, 2.0, 3.0), Point3::new(-1.0, 2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816878,"byte_end":816983,"line_start":121,"line_end":121,"column_start":5,"column_end":110}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816988,"byte_end":816995,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817000,"byte_end":817009,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817771,"byte_end":817778,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Isometry<N, D, R>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817330,"byte_end":817349,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817354,"byte_end":817357,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817362,"byte_end":817375,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817380,"byte_end":817383,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817388,"byte_end":817395,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817400,"byte_end":817419,"line_start":142,"line_end":142,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817424,"byte_end":817473,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817478,"byte_end":817555,"line_start":144,"line_end":144,"column_start":5,"column_end":82}},{"value":"/ let inv = iso.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817560,"byte_end":817588,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817593,"byte_end":817628,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817633,"byte_end":817636,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(inv * (iso * pt), pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817641,"byte_end":817678,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817683,"byte_end":817690,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817695,"byte_end":817704,"line_start":150,"line_end":150,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817709,"byte_end":817759,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5943},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818318,"byte_end":818329,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Isometry<N, D, R>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817882,"byte_end":817910,"line_start":158,"line_end":158,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817915,"byte_end":817918,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817923,"byte_end":817936,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817941,"byte_end":817944,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817949,"byte_end":817956,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817961,"byte_end":817980,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817985,"byte_end":818034,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818039,"byte_end":818120,"line_start":165,"line_end":165,"column_start":5,"column_end":86}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818125,"byte_end":818160,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let transformed_pt = iso * pt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818165,"byte_end":818199,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ iso.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818204,"byte_end":818226,"line_start":168,"line_end":168,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818231,"byte_end":818234,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * transformed_pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818239,"byte_end":818280,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818285,"byte_end":818292,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818297,"byte_end":818306,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819031,"byte_end":819053,"line_start":194,"line_end":194,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Isometry<N, D, R>>::append_translation_mut","value":"pub fn append_translation_mut(&mut Self, &Translation<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818523,"byte_end":818576,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818581,"byte_end":818584,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818589,"byte_end":818602,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818607,"byte_end":818610,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818615,"byte_end":818622,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818627,"byte_end":818646,"line_start":184,"line_end":184,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818651,"byte_end":818706,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818711,"byte_end":818792,"line_start":186,"line_end":186,"column_start":5,"column_end":86}},{"value":"/ let tra = Translation2::new(3.0, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818797,"byte_end":818839,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ // Same as `iso = tra * iso`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818844,"byte_end":818877,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/ iso.append_translation_mut(&tra);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818882,"byte_end":818919,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818924,"byte_end":818927,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso.translation, Translation2::new(4.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818932,"byte_end":818993,"line_start":191,"line_end":191,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":818998,"byte_end":819005,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819010,"byte_end":819019,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819772,"byte_end":819791,"line_start":214,"line_end":214,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Isometry<N, D, R>>::append_rotation_mut","value":"pub fn append_rotation_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819146,"byte_end":819196,"line_start":198,"line_end":198,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819201,"byte_end":819204,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819209,"byte_end":819222,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819227,"byte_end":819230,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819235,"byte_end":819242,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819247,"byte_end":819286,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819291,"byte_end":819310,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819315,"byte_end":819383,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::PI / 6.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819388,"byte_end":819468,"line_start":206,"line_end":206,"column_start":5,"column_end":85}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI / 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819473,"byte_end":819527,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/ // Same as `iso = rot * iso`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819532,"byte_end":819565,"line_start":208,"line_end":208,"column_start":5,"column_end":38}},{"value":"/ iso.append_rotation_mut(&rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819570,"byte_end":819604,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819609,"byte_end":819612,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso, Isometry2::new(Vector2::new(-2.0, 1.0), f32::consts::PI * 2.0 / 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819617,"byte_end":819734,"line_start":211,"line_end":211,"column_start":5,"column_end":122}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819739,"byte_end":819746,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819751,"byte_end":819760,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5946},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820644,"byte_end":820673,"line_start":236,"line_end":236,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_point_mut","value":"pub fn append_rotation_wrt_point_mut(&mut Self, &R, &Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":819962,"byte_end":820054,"line_start":219,"line_end":219,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820059,"byte_end":820082,"line_start":220,"line_end":220,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820087,"byte_end":820090,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820095,"byte_end":820108,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820113,"byte_end":820116,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820121,"byte_end":820128,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820133,"byte_end":820172,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820177,"byte_end":820196,"line_start":226,"line_end":226,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820201,"byte_end":820277,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820282,"byte_end":820363,"line_start":228,"line_end":228,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820368,"byte_end":820423,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820428,"byte_end":820463,"line_start":230,"line_end":230,"column_start":5,"column_end":40}},{"value":"/ iso.append_rotation_wrt_point_mut(&rot, &pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820468,"byte_end":820517,"line_start":231,"line_end":231,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820522,"byte_end":820525,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * pt, Point2::new(-2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820530,"byte_end":820606,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820611,"byte_end":820618,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820623,"byte_end":820632,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821546,"byte_end":821576,"line_start":259,"line_end":259,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_center_mut","value":"pub fn append_rotation_wrt_center_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820851,"byte_end":820931,"line_start":242,"line_end":242,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820936,"byte_end":820959,"line_start":243,"line_end":243,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820964,"byte_end":820967,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820972,"byte_end":820985,"line_start":245,"line_end":245,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820990,"byte_end":820993,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":820998,"byte_end":821005,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821010,"byte_end":821029,"line_start":248,"line_end":248,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821034,"byte_end":821110,"line_start":249,"line_end":249,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821115,"byte_end":821196,"line_start":250,"line_end":250,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821201,"byte_end":821256,"line_start":251,"line_end":251,"column_start":5,"column_end":60}},{"value":"/ iso.append_rotation_wrt_center_mut(&rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821261,"byte_end":821306,"line_start":252,"line_end":252,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821311,"byte_end":821314,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ // The translation part should not have changed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821319,"byte_end":821371,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(iso.translation.vector, Vector2::new(1.0, 2.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821376,"byte_end":821439,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(iso.rotation, UnitComplex::new(f32::consts::PI));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821444,"byte_end":821508,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821513,"byte_end":821520,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821525,"byte_end":821534,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822396,"byte_end":822411,"line_start":281,"line_end":281,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Isometry<N, D, R>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this isometry.","sig":null,"attributes":[{"value":"/ Transform the given point by this isometry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821667,"byte_end":821714,"line_start":263,"line_end":263,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821719,"byte_end":821722,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821727,"byte_end":821782,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821787,"byte_end":821790,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821795,"byte_end":821808,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821813,"byte_end":821816,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821821,"byte_end":821828,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821833,"byte_end":821872,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821877,"byte_end":821896,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821901,"byte_end":821980,"line_start":272,"line_end":272,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":821985,"byte_end":822032,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822037,"byte_end":822123,"line_start":274,"line_end":274,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822128,"byte_end":822174,"line_start":275,"line_end":275,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822179,"byte_end":822182,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822187,"byte_end":822264,"line_start":277,"line_end":277,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, 2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822269,"byte_end":822358,"line_start":278,"line_end":278,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822363,"byte_end":822370,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822375,"byte_end":822384,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5949},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823268,"byte_end":823284,"line_start":304,"line_end":304,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Isometry<N, D, R>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this isometry, ignoring the translation\n component of the isometry.","sig":null,"attributes":[{"value":"/ Transform the given vector by this isometry, ignoring the translation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822483,"byte_end":822556,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ component of the isometry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822561,"byte_end":822591,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822596,"byte_end":822599,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822604,"byte_end":822658,"line_start":288,"line_end":288,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822663,"byte_end":822666,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822671,"byte_end":822684,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822689,"byte_end":822692,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822697,"byte_end":822704,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822709,"byte_end":822748,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822753,"byte_end":822772,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822777,"byte_end":822848,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822853,"byte_end":822900,"line_start":296,"line_end":296,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822905,"byte_end":822991,"line_start":297,"line_end":297,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":822996,"byte_end":823042,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823047,"byte_end":823050,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823055,"byte_end":823134,"line_start":300,"line_end":300,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823139,"byte_end":823230,"line_start":301,"line_end":301,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823235,"byte_end":823242,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823247,"byte_end":823256,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5950},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824161,"byte_end":824184,"line_start":326,"line_end":326,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Isometry<N, D, R>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this isometry. This may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823358,"byte_end":823432,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823437,"byte_end":823507,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823512,"byte_end":823539,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823544,"byte_end":823547,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823552,"byte_end":823565,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823570,"byte_end":823573,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823578,"byte_end":823585,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823590,"byte_end":823629,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823634,"byte_end":823653,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823658,"byte_end":823737,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823742,"byte_end":823789,"line_start":318,"line_end":318,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823794,"byte_end":823880,"line_start":319,"line_end":319,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823885,"byte_end":823931,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823936,"byte_end":823939,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":823944,"byte_end":824029,"line_start":322,"line_end":322,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(0.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824034,"byte_end":824123,"line_start":323,"line_end":323,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824128,"byte_end":824135,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824140,"byte_end":824149,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5951},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825191,"byte_end":825215,"line_start":350,"line_end":350,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this isometry, ignoring the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824331,"byte_end":824407,"line_start":331,"line_end":331,"column_start":5,"column_end":81}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824412,"byte_end":824466,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824471,"byte_end":824541,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824546,"byte_end":824573,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824578,"byte_end":824581,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824586,"byte_end":824599,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824604,"byte_end":824607,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824612,"byte_end":824619,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824624,"byte_end":824663,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824668,"byte_end":824687,"line_start":340,"line_end":340,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824692,"byte_end":824763,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824768,"byte_end":824815,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824820,"byte_end":824906,"line_start":343,"line_end":343,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824911,"byte_end":824957,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824962,"byte_end":824965,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":824970,"byte_end":825057,"line_start":346,"line_end":346,"column_start":5,"column_end":92}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825062,"byte_end":825153,"line_start":347,"line_end":347,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825158,"byte_end":825165,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825170,"byte_end":825179,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826421,"byte_end":826435,"line_start":379,"line_end":379,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Isometry<N, D, R>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825770,"byte_end":825851,"line_start":363,"line_end":363,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825856,"byte_end":825859,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825864,"byte_end":825877,"line_start":365,"line_end":365,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825882,"byte_end":825885,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825890,"byte_end":825897,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825902,"byte_end":825941,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825946,"byte_end":825965,"line_start":369,"line_end":369,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825970,"byte_end":826020,"line_start":370,"line_end":370,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826025,"byte_end":826104,"line_start":371,"line_end":371,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826109,"byte_end":826168,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826173,"byte_end":826232,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826237,"byte_end":826296,"line_start":374,"line_end":374,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826301,"byte_end":826304,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826309,"byte_end":826383,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826388,"byte_end":826395,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826400,"byte_end":826409,"line_start":378,"line_end":378,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":829858,"byte_end":829867,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Isometry2","qualname":"::geometry::isometry_alias::Isometry2","value":"Isometry<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":829698,"byte_end":829848,"line_start":5,"line_end":5,"column_start":1,"column_end":151}}]},{"kind":"Type","id":{"krate":0,"index":6002},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":830063,"byte_end":830072,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Isometry3","qualname":"::geometry::isometry_alias::Isometry3","value":"Isometry<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":829907,"byte_end":830053,"line_start":8,"line_end":8,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":6004},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":830271,"byte_end":830286,"line_start":12,"line_end":12,"column_start":10,"column_end":25},"name":"IsometryMatrix2","qualname":"::geometry::isometry_alias::IsometryMatrix2","value":"Isometry<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":830115,"byte_end":830261,"line_start":11,"line_end":11,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":6006},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":830480,"byte_end":830495,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"IsometryMatrix3","qualname":"::geometry::isometry_alias::IsometryMatrix3","value":"Isometry<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_alias.rs","byte_start":830324,"byte_end":830470,"line_start":14,"line_end":14,"column_start":1,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832065,"byte_end":832073,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Isometry<N, D, R>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity isometry.","sig":null,"attributes":[{"value":"/ Creates a new identity isometry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831630,"byte_end":831666,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831671,"byte_end":831674,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831679,"byte_end":831692,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831697,"byte_end":831700,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831705,"byte_end":831712,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Isometry2, Point2, Isometry3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831717,"byte_end":831776,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831781,"byte_end":831784,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831789,"byte_end":831825,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831830,"byte_end":831865,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831870,"byte_end":831899,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831904,"byte_end":831907,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry3::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831912,"byte_end":831948,"line_start":38,"line_end":38,"column_start":5,"column_end":41}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831953,"byte_end":831993,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831998,"byte_end":832027,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832032,"byte_end":832039,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832044,"byte_end":832053,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6046},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832841,"byte_end":832859,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Isometry<N, D, R>>::rotation_wrt_point","value":"pub fn rotation_wrt_point(R, Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The isometry that applies the rotation `r` with its axis passing through the point `p`.\n This effectively lets `p` invariant.","sig":null,"attributes":[{"value":"/ The isometry that applies the rotation `r` with its axis passing through the point `p`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832162,"byte_end":832253,"line_start":47,"line_end":47,"column_start":5,"column_end":96}},{"value":"/ This effectively lets `p` invariant.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832258,"byte_end":832298,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832303,"byte_end":832306,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832311,"byte_end":832324,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832329,"byte_end":832332,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832337,"byte_end":832344,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832349,"byte_end":832388,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832393,"byte_end":832412,"line_start":54,"line_end":54,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832417,"byte_end":832470,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832475,"byte_end":832523,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832528,"byte_end":832563,"line_start":57,"line_end":57,"column_start":5,"column_end":40}},{"value":"/ let iso = Isometry2::rotation_wrt_point(rot, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832568,"byte_end":832621,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832626,"byte_end":832629,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * pt, pt); // The rotation center is not affected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832634,"byte_end":832703,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(iso * Point2::new(1.0, 2.0), Point2::new(1.0, -2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832708,"byte_end":832803,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832808,"byte_end":832815,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":832820,"byte_end":832829,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6061},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834730,"byte_end":834733,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, Rotation2<N>>>::new","value":"pub fn new(Vector2<N>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834258,"byte_end":834328,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834333,"byte_end":834336,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as a 2x2 rotation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834341,"byte_end":834405,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834410,"byte_end":834413,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834418,"byte_end":834431,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834436,"byte_end":834439,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834444,"byte_end":834451,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834456,"byte_end":834475,"line_start":127,"line_end":127,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834480,"byte_end":834529,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834534,"byte_end":834611,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834616,"byte_end":834619,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834624,"byte_end":834692,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834697,"byte_end":834704,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834709,"byte_end":834718,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6062},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835005,"byte_end":835016,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, Rotation2<N>>>::translation","value":"pub fn translation(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834913,"byte_end":834979,"line_start":141,"line_end":141,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834984,"byte_end":834993,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6063},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835182,"byte_end":835190,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, Rotation2<N>>>::rotation","value":"pub fn rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835099,"byte_end":835156,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835161,"byte_end":835170,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6066},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835846,"byte_end":835849,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, UnitComplex<N>>>::new","value":"pub fn new(Vector2<N>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835361,"byte_end":835431,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835436,"byte_end":835439,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as an unit complex number.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835444,"byte_end":835509,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835514,"byte_end":835517,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835522,"byte_end":835535,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835540,"byte_end":835543,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835548,"byte_end":835555,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835560,"byte_end":835579,"line_start":165,"line_end":165,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{IsometryMatrix2, Point2, Vector2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835584,"byte_end":835639,"line_start":166,"line_end":166,"column_start":5,"column_end":60}},{"value":"/ let iso = IsometryMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835644,"byte_end":835727,"line_start":167,"line_end":167,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835732,"byte_end":835735,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835740,"byte_end":835808,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835813,"byte_end":835820,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835825,"byte_end":835834,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6067},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":836122,"byte_end":836133,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::translation","value":"pub fn translation(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":836030,"byte_end":836096,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":836101,"byte_end":836110,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6068},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":836325,"byte_end":836333,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::rotation","value":"pub fn rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":836242,"byte_end":836299,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":836304,"byte_end":836313,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":19432},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":878959,"byte_end":878969,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"Similarity","qualname":"::geometry::similarity::Similarity","value":"Similarity { isometry }","parent":null,"children":[{"krate":0,"index":19436},{"krate":0,"index":19437}],"decl_id":null,"docs":" A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.\n","sig":null,"attributes":[{"value":"/ A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":878265,"byte_end":878359,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":878360,"byte_end":878370,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":19436},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":879129,"byte_end":879137,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"isometry","qualname":"::geometry::similarity::Similarity::isometry","value":"geometry::isometry::Isometry<N, D, R>","parent":{"krate":0,"index":19432},"children":[],"decl_id":null,"docs":" The part of this similarity that does not include the scaling factor.\n","sig":null,"attributes":[{"value":"/ The part of this similarity that does not include the scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":879047,"byte_end":879120,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880712,"byte_end":880722,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Similarity<N, D, R>>::from_parts","value":"pub fn from_parts(Translation<N, D>, R, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880613,"byte_end":880686,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880691,"byte_end":880700,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6286},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880982,"byte_end":880995,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"from_isometry","qualname":"<Similarity<N, D, R>>::from_isometry","value":"pub fn from_isometry(Isometry<N, D, R>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880883,"byte_end":880956,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880961,"byte_end":880970,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6287},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881254,"byte_end":881265,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"set_scaling","qualname":"<Similarity<N, D, R>>::set_scaling","value":"pub fn set_scaling(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881171,"byte_end":881228,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881233,"byte_end":881242,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6292},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881640,"byte_end":881647,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"scaling","qualname":"<Similarity<N, D, R>>::scaling","value":"pub fn scaling(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881557,"byte_end":881614,"line_start":135,"line_end":135,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881619,"byte_end":881628,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6297},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881969,"byte_end":881981,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"from_scaling","qualname":"<Similarity<N, D, R>>::from_scaling","value":"pub fn from_scaling(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity that applies only a scaling factor.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity that applies only a scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881879,"byte_end":881943,"line_start":148,"line_end":148,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881948,"byte_end":881957,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6298},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882174,"byte_end":882181,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Similarity<N, D, R>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.\n","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882074,"byte_end":882093,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882098,"byte_end":882107,"line_start":155,"line_end":155,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882112,"byte_end":882162,"line_start":156,"line_end":156,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6299},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882339,"byte_end":882350,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Similarity<N, D, R>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.\n","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882285,"byte_end":882313,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882318,"byte_end":882327,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6300},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882695,"byte_end":882710,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<Similarity<N, D, R>>::prepend_scaling","value":"pub fn prepend_scaling(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882518,"byte_end":882606,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882611,"byte_end":882620,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882625,"byte_end":882683,"line_start":173,"line_end":173,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6301},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883124,"byte_end":883138,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<Similarity<N, D, R>>::append_scaling","value":"pub fn append_scaling(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":882949,"byte_end":883036,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883041,"byte_end":883050,"line_start":184,"line_end":184,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883055,"byte_end":883112,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6302},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883623,"byte_end":883642,"line_start":201,"line_end":201,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<Similarity<N, D, R>>::prepend_scaling_mut","value":"pub fn prepend_scaling_mut(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883494,"byte_end":883597,"line_start":199,"line_end":199,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883602,"byte_end":883611,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6303},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883962,"byte_end":883980,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<Similarity<N, D, R>>::append_scaling_mut","value":"pub fn append_scaling_mut(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883834,"byte_end":883936,"line_start":210,"line_end":210,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":883941,"byte_end":883950,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6304},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884305,"byte_end":884327,"line_start":224,"line_end":224,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Similarity<N, D, R>>::append_translation_mut","value":"pub fn append_translation_mut(&mut Self, &Translation<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884226,"byte_end":884279,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884284,"byte_end":884293,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6305},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884499,"byte_end":884518,"line_start":230,"line_end":230,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Similarity<N, D, R>>::append_rotation_mut","value":"pub fn append_rotation_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884423,"byte_end":884473,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884478,"byte_end":884487,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6306},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884741,"byte_end":884770,"line_start":237,"line_end":237,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_point_mut","value":"pub fn append_rotation_wrt_point_mut(&mut Self, &R, &Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884595,"byte_end":884687,"line_start":234,"line_end":234,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884692,"byte_end":884715,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884720,"byte_end":884729,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6307},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885011,"byte_end":885041,"line_start":244,"line_end":244,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_center_mut","value":"pub fn append_rotation_wrt_center_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884877,"byte_end":884957,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884962,"byte_end":884985,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":884990,"byte_end":884999,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6308},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885808,"byte_end":885823,"line_start":264,"line_end":264,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Similarity<N, D, R>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this similarity.","sig":null,"attributes":[{"value":"/ Transform the given point by this similarity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885129,"byte_end":885178,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885183,"byte_end":885186,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885191,"byte_end":885246,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885251,"byte_end":885254,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885259,"byte_end":885272,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885277,"byte_end":885284,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885289,"byte_end":885328,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885333,"byte_end":885352,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885357,"byte_end":885408,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885413,"byte_end":885471,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885476,"byte_end":885526,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885531,"byte_end":885591,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885596,"byte_end":885673,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(19.0, 17.0, -9.0), epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885678,"byte_end":885770,"line_start":261,"line_end":261,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885775,"byte_end":885782,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885787,"byte_end":885796,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6309},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886618,"byte_end":886634,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Similarity<N, D, R>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this similarity, ignoring the translational\n component.","sig":null,"attributes":[{"value":"/ Transform the given vector by this similarity, ignoring the translational","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885895,"byte_end":885972,"line_start":268,"line_end":268,"column_start":5,"column_end":82}},{"value":"/ component.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885977,"byte_end":885991,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":885996,"byte_end":885999,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * t`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886004,"byte_end":886058,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886063,"byte_end":886066,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886071,"byte_end":886084,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886089,"byte_end":886096,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886101,"byte_end":886140,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886145,"byte_end":886164,"line_start":276,"line_end":276,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886169,"byte_end":886212,"line_start":277,"line_end":277,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886217,"byte_end":886275,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886280,"byte_end":886330,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886335,"byte_end":886395,"line_start":280,"line_end":280,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886400,"byte_end":886480,"line_start":281,"line_end":281,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(18.0, 15.0, -12.0), epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886485,"byte_end":886580,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886585,"byte_end":886592,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886597,"byte_end":886606,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887445,"byte_end":887468,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Similarity<N, D, R>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this similarity. This may\n be cheaper than inverting the similarity and then transforming the\n given point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this similarity. This may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886708,"byte_end":886781,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ be cheaper than inverting the similarity and then transforming the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886786,"byte_end":886856,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ given point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886861,"byte_end":886877,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886882,"byte_end":886885,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886890,"byte_end":886903,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886908,"byte_end":886915,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886920,"byte_end":886959,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886964,"byte_end":886983,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":886988,"byte_end":887039,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887044,"byte_end":887102,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887107,"byte_end":887157,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887162,"byte_end":887222,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887227,"byte_end":887312,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-1.5, 1.5, 1.5), epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887317,"byte_end":887407,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887412,"byte_end":887419,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887424,"byte_end":887433,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6311},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888363,"byte_end":888387,"line_start":325,"line_end":325,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Similarity<N, D, R>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this similarity,\n ignoring the translational component. This may be cheaper than\n inverting the similarity and then transforming the given vector.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this similarity,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887589,"byte_end":887654,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ ignoring the translational component. This may be cheaper than","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887659,"byte_end":887725,"line_start":310,"line_end":310,"column_start":5,"column_end":71}},{"value":"/ inverting the similarity and then transforming the given vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887730,"byte_end":887798,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887803,"byte_end":887806,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887811,"byte_end":887824,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887829,"byte_end":887836,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887841,"byte_end":887880,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887885,"byte_end":887904,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887909,"byte_end":887952,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":887957,"byte_end":888015,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888020,"byte_end":888070,"line_start":319,"line_end":319,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888075,"byte_end":888135,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.inverse_transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888140,"byte_end":888228,"line_start":321,"line_end":321,"column_start":5,"column_end":93}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.5, 2.0), epsilon = 1.0e-5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888233,"byte_end":888325,"line_start":322,"line_end":322,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888330,"byte_end":888337,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888342,"byte_end":888351,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6316},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889079,"byte_end":889093,"line_start":340,"line_end":340,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Similarity<N, D, R>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this similarity into its equivalent homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ Converts this similarity into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888970,"byte_end":889053,"line_start":338,"line_end":338,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889058,"byte_end":889067,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6360},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892392,"byte_end":892403,"line_start":6,"line_end":6,"column_start":10,"column_end":21},"name":"Similarity2","qualname":"::geometry::similarity_alias::Similarity2","value":"Similarity<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892351,"byte_end":892382,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6362},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892486,"byte_end":892497,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Similarity3","qualname":"::geometry::similarity_alias::Similarity3","value":"Similarity<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892445,"byte_end":892476,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892629,"byte_end":892646,"line_start":12,"line_end":12,"column_start":10,"column_end":27},"name":"SimilarityMatrix2","qualname":"::geometry::similarity_alias::SimilarityMatrix2","value":"Similarity<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892542,"byte_end":892619,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":6366},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892773,"byte_end":892790,"line_start":15,"line_end":15,"column_start":10,"column_end":27},"name":"SimilarityMatrix3","qualname":"::geometry::similarity_alias::SimilarityMatrix3","value":"Similarity<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_alias.rs","byte_start":892686,"byte_end":892763,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6400},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894014,"byte_end":894022,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Similarity<N, D, R>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity similarity.","sig":null,"attributes":[{"value":"/ Creates a new identity similarity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893569,"byte_end":893607,"line_start":28,"line_end":28,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893612,"byte_end":893615,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893620,"byte_end":893633,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893638,"byte_end":893641,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893646,"byte_end":893653,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Similarity2, Point2, Similarity3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893658,"byte_end":893721,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893726,"byte_end":893729,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893734,"byte_end":893772,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893777,"byte_end":893812,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893817,"byte_end":893846,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893851,"byte_end":893854,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity3::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893859,"byte_end":893897,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893902,"byte_end":893942,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893947,"byte_end":893976,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893981,"byte_end":893988,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893993,"byte_end":894002,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6417},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895662,"byte_end":895680,"line_start":101,"line_end":101,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Similarity<N, D, R>>::rotation_wrt_point","value":"pub fn rotation_wrt_point(R, Point<N, D>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with\n its axis passing through the point `p`.","sig":null,"attributes":[{"value":"/ The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895034,"byte_end":895129,"line_start":85,"line_end":85,"column_start":5,"column_end":100}},{"value":"/ its axis passing through the point `p`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895134,"byte_end":895177,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895182,"byte_end":895185,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895190,"byte_end":895203,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895208,"byte_end":895211,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895216,"byte_end":895223,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895228,"byte_end":895267,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895272,"byte_end":895291,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Point2, UnitComplex};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895296,"byte_end":895351,"line_start":93,"line_end":93,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895356,"byte_end":895411,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(3.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895416,"byte_end":895451,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/ let sim = Similarity2::rotation_wrt_point(rot, pt, 4.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895456,"byte_end":895516,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895521,"byte_end":895524,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(1.0, 2.0), Point2::new(-3.0, 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895529,"byte_end":895624,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895629,"byte_end":895636,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":895641,"byte_end":895650,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6420},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897078,"byte_end":897081,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, Rotation2<N>>>::new","value":"pub fn new(Vector2<N>, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896569,"byte_end":896660,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896665,"byte_end":896668,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896673,"byte_end":896686,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896691,"byte_end":896694,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896699,"byte_end":896706,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896711,"byte_end":896750,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896755,"byte_end":896774,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{SimilarityMatrix2, Vector2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896779,"byte_end":896836,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ let sim = SimilarityMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896841,"byte_end":896931,"line_start":146,"line_end":146,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896936,"byte_end":896939,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896944,"byte_end":897040,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897045,"byte_end":897052,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897057,"byte_end":897066,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6423},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897859,"byte_end":897862,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, UnitComplex<N>>>::new","value":"pub fn new(Vector2<N>, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation and a rotation angle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897384,"byte_end":897453,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897458,"byte_end":897461,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897466,"byte_end":897479,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897484,"byte_end":897487,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897492,"byte_end":897499,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897504,"byte_end":897543,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897548,"byte_end":897567,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Vector2, Point2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897572,"byte_end":897623,"line_start":171,"line_end":171,"column_start":5,"column_end":56}},{"value":"/ let sim = Similarity2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897628,"byte_end":897712,"line_start":172,"line_end":172,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897717,"byte_end":897720,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897725,"byte_end":897821,"line_start":174,"line_end":174,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897826,"byte_end":897833,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897838,"byte_end":897847,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20057},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940553,"byte_end":940555,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xx","qualname":"<Point<N, D>>::xx","value":"pub fn xx(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20058},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940590,"byte_end":940593,"line_start":28,"line_end":28,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Point<N, D>>::xxx","value":"pub fn xxx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20062},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940631,"byte_end":940633,"line_start":30,"line_end":30,"column_start":15,"column_end":17},"name":"xy","qualname":"<Point<N, D>>::xy","value":"pub fn xy(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20063},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940668,"byte_end":940670,"line_start":31,"line_end":31,"column_start":15,"column_end":17},"name":"yx","qualname":"<Point<N, D>>::yx","value":"pub fn yx(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20064},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940705,"byte_end":940707,"line_start":32,"line_end":32,"column_start":15,"column_end":17},"name":"yy","qualname":"<Point<N, D>>::yy","value":"pub fn yy(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20065},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940742,"byte_end":940745,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Point<N, D>>::xxy","value":"pub fn xxy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20066},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940782,"byte_end":940785,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Point<N, D>>::xyx","value":"pub fn xyx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20067},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940822,"byte_end":940825,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Point<N, D>>::xyy","value":"pub fn xyy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20068},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940862,"byte_end":940865,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Point<N, D>>::yxx","value":"pub fn yxx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20069},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940902,"byte_end":940905,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Point<N, D>>::yxy","value":"pub fn yxy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20070},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940942,"byte_end":940945,"line_start":38,"line_end":38,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Point<N, D>>::yyx","value":"pub fn yyx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20071},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940982,"byte_end":940985,"line_start":39,"line_end":39,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Point<N, D>>::yyy","value":"pub fn yyy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20075},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941023,"byte_end":941025,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"xz","qualname":"<Point<N, D>>::xz","value":"pub fn xz(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20076},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941060,"byte_end":941062,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"yz","qualname":"<Point<N, D>>::yz","value":"pub fn yz(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20077},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941097,"byte_end":941099,"line_start":43,"line_end":43,"column_start":15,"column_end":17},"name":"zx","qualname":"<Point<N, D>>::zx","value":"pub fn zx(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20078},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941134,"byte_end":941136,"line_start":44,"line_end":44,"column_start":15,"column_end":17},"name":"zy","qualname":"<Point<N, D>>::zy","value":"pub fn zy(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20079},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941171,"byte_end":941173,"line_start":45,"line_end":45,"column_start":15,"column_end":17},"name":"zz","qualname":"<Point<N, D>>::zz","value":"pub fn zz(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20080},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941208,"byte_end":941211,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Point<N, D>>::xxz","value":"pub fn xxz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20081},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941248,"byte_end":941251,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Point<N, D>>::xyz","value":"pub fn xyz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20082},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941288,"byte_end":941291,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Point<N, D>>::xzx","value":"pub fn xzx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20083},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941328,"byte_end":941331,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Point<N, D>>::xzy","value":"pub fn xzy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20084},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941368,"byte_end":941371,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Point<N, D>>::xzz","value":"pub fn xzz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941408,"byte_end":941411,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Point<N, D>>::yxz","value":"pub fn yxz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20086},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941448,"byte_end":941451,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Point<N, D>>::yyz","value":"pub fn yyz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20087},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941488,"byte_end":941491,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Point<N, D>>::yzx","value":"pub fn yzx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20088},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941528,"byte_end":941531,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Point<N, D>>::yzy","value":"pub fn yzy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20089},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941568,"byte_end":941571,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Point<N, D>>::yzz","value":"pub fn yzz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20090},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941608,"byte_end":941611,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Point<N, D>>::zxx","value":"pub fn zxx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20091},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941648,"byte_end":941651,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Point<N, D>>::zxy","value":"pub fn zxy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20092},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941688,"byte_end":941691,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Point<N, D>>::zxz","value":"pub fn zxz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20093},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941728,"byte_end":941731,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Point<N, D>>::zyx","value":"pub fn zyx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20094},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941768,"byte_end":941771,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Point<N, D>>::zyy","value":"pub fn zyy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20095},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941808,"byte_end":941811,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Point<N, D>>::zyz","value":"pub fn zyz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20096},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941848,"byte_end":941851,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Point<N, D>>::zzx","value":"pub fn zzx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941888,"byte_end":941891,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Point<N, D>>::zzy","value":"pub fn zzy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20098},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":941928,"byte_end":941931,"line_start":64,"line_end":64,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Point<N, D>>::zzz","value":"pub fn zzz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940245,"byte_end":940294,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/swizzle.rs","byte_start":940315,"byte_end":940324,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6621},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942618,"byte_end":942627,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"TCategory","qualname":"::geometry::transform::TCategory","value":"TCategory: Any + Debug + Copy + PartialEq + Send","parent":null,"children":[{"krate":0,"index":6622},{"krate":0,"index":6623}],"decl_id":null,"docs":" Trait implemented by phantom types identifying the projective transformation type.","sig":null,"attributes":[{"value":"/ Trait implemented by phantom types identifying the projective transformation type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942429,"byte_end":942515,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942516,"byte_end":942519,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: this trait is not intended to be implemented outside of the `nalgebra` crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942520,"byte_end":942607,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942807,"byte_end":942821,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"has_normalizer","qualname":"::geometry::transform::TCategory::has_normalizer","value":"pub fn has_normalizer() -> bool","parent":{"krate":0,"index":6621},"children":[],"decl_id":null,"docs":" Indicates whether a `Transform` with the category `Self` has a bottom-row different from\n `0 0 .. 1`.\n","sig":null,"attributes":[{"value":"/ Indicates whether a `Transform` with the category `Self` has a bottom-row different from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942673,"byte_end":942765,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ `0 0 .. 1`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942770,"byte_end":942785,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942790,"byte_end":942799,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6623},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942982,"byte_end":943010,"line_start":31,"line_end":31,"column_start":8,"column_end":36},"name":"check_homogeneous_invariants","qualname":"::geometry::transform::TCategory::check_homogeneous_invariants","value":"pub fn check_homogeneous_invariants<N: RealField, D: DimName>(&MatrixN<N, D>)\n-> bool where N::Epsilon: Copy, DefaultAllocator: Allocator<N, D, D>","parent":{"krate":0,"index":6621},"children":[],"decl_id":null,"docs":" Checks that the given matrix is a valid homogeneous representation of an element of the\n category `Self`.\n","sig":null,"attributes":[{"value":"/ Checks that the given matrix is a valid homogeneous representation of an element of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942858,"byte_end":942949,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ category `Self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942954,"byte_end":942974,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":6626},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943324,"byte_end":943336,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TCategoryMul","qualname":"::geometry::transform::TCategoryMul","value":"TCategoryMul<Other: TCategory>: TCategory","parent":null,"children":[{"krate":0,"index":6628}],"decl_id":null,"docs":" Traits that gives the `Transform` category that is compatible with the result of the\n multiplication of transformations with categories `Self` and `Other`.\n","sig":null,"attributes":[{"value":"/ Traits that gives the `Transform` category that is compatible with the result of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943151,"byte_end":943239,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ multiplication of transformations with categories `Self` and `Other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943240,"byte_end":943313,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":6628},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943593,"byte_end":943607,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"Representative","qualname":"::geometry::transform::TCategoryMul::Representative","value":"type Representative: TCategory;","parent":{"krate":0,"index":6626},"children":[],"decl_id":null,"docs":" The transform category that results from the multiplication of a `Transform<Self>` to a\n `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most\n general category.\n","sig":null,"attributes":[{"value":"/ The transform category that results from the multiplication of a `Transform<Self>` to a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943372,"byte_end":943463,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943468,"byte_end":943557,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ general category.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943562,"byte_end":943583,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":6629},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943712,"byte_end":943728,"line_start":47,"line_end":47,"column_start":11,"column_end":27},"name":"SuperTCategoryOf","qualname":"::geometry::transform::SuperTCategoryOf","value":"SuperTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more general `Transform` category than `Other`.\n","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more general `Transform` category than `Other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943623,"byte_end":943701,"line_start":46,"line_end":46,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":6631},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943915,"byte_end":943929,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"SubTCategoryOf","qualname":"::geometry::transform::SubTCategoryOf","value":"SubTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more specific `Transform` category than `Other`.","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more specific `Transform` category than `Other`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943762,"byte_end":943841,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943842,"byte_end":943845,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Automatically implemented based on `SuperTCategoryOf`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943846,"byte_end":943904,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":20099},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944206,"byte_end":944214,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TGeneral","qualname":"::geometry::transform::TGeneral","value":"pub enum TGeneral { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general (not necessarily inversible) `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general (not necessarily inversible) `Transform` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944061,"byte_end":944145,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":20114},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944346,"byte_end":944357,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"name":"TProjective","qualname":"::geometry::transform::TProjective","value":"pub enum TProjective { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general inversible `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general inversible `Transform` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944219,"byte_end":944285,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":20129},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944512,"byte_end":944519,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"TAffine","qualname":"::geometry::transform::TAffine","value":"pub enum TAffine { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.\n","sig":null,"attributes":[{"value":"/ Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944362,"byte_end":944451,"line_start":68,"line_end":68,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":20159},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946726,"byte_end":946735,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"Transform","qualname":"::geometry::transform::Transform","value":"Transform {  }","parent":null,"children":[{"krate":0,"index":20163},{"krate":0,"index":20164}],"decl_id":null,"docs":" A transformation matrix in homogeneous coordinates.","sig":null,"attributes":[{"value":"/ A transformation matrix in homogeneous coordinates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946506,"byte_end":946561,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946562,"byte_end":946565,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ It is stored as a matrix with dimensions `(D + 1, D + 1)`, e.g., it stores a 4x4 matrix for a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946566,"byte_end":946663,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ 3D transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946664,"byte_end":946686,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946687,"byte_end":946697,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":6679},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949588,"byte_end":949609,"line_start":246,"line_end":246,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Transform<N, D, C>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(MatrixN<N, DimNameSum<D, U1>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transformation from the given homogeneous matrix. The transformation category\n of `Self` is not checked to be verified by the given matrix.\n","sig":null,"attributes":[{"value":"/ Creates a new transformation from the given homogeneous matrix. The transformation category","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949398,"byte_end":949493,"line_start":243,"line_end":243,"column_start":5,"column_end":100}},{"value":"/ of `Self` is not checked to be verified by the given matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949498,"byte_end":949562,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949567,"byte_end":949576,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6680},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950149,"byte_end":950159,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Transform<N, D, C>>::into_inner","value":"pub fn into_inner(Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949755,"byte_end":949791,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949796,"byte_end":949799,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949804,"byte_end":949818,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949823,"byte_end":949830,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949835,"byte_end":949877,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949882,"byte_end":949885,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949890,"byte_end":949929,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949934,"byte_end":949973,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949978,"byte_end":950018,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950023,"byte_end":950072,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950077,"byte_end":950111,"line_start":263,"line_end":263,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950116,"byte_end":950123,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950128,"byte_end":950137,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6681},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950407,"byte_end":950413,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Transform<N, D, C>>::unwrap","value":"pub fn unwrap(Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.\n Deprecated: Use [Transform::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950232,"byte_end":950268,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ Deprecated: Use [Transform::into_inner] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950273,"byte_end":950325,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950330,"byte_end":950381,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950386,"byte_end":950395,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6682},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950882,"byte_end":950888,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Transform<N, D, C>>::matrix","value":"pub fn matrix(&Self) -> &MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950486,"byte_end":950527,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950532,"byte_end":950535,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950540,"byte_end":950554,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950559,"byte_end":950566,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950571,"byte_end":950613,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950618,"byte_end":950621,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950626,"byte_end":950665,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950670,"byte_end":950709,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950714,"byte_end":950754,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950759,"byte_end":950808,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(*t.matrix(), m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950813,"byte_end":950844,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950849,"byte_end":950856,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950861,"byte_end":950870,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6683},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951795,"byte_end":951815,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Transform<N, D, C>>::matrix_mut_unchecked","value":"pub fn matrix_mut_unchecked(&mut Self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":950964,"byte_end":951013,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951018,"byte_end":951021,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ It is `_unchecked` because direct modifications of this matrix may break invariants","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951026,"byte_end":951113,"line_start":297,"line_end":297,"column_start":5,"column_end":92}},{"value":"/ identified by this transformation category.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951118,"byte_end":951165,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951170,"byte_end":951173,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951178,"byte_end":951192,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951197,"byte_end":951204,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951209,"byte_end":951251,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951256,"byte_end":951259,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951264,"byte_end":951303,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951308,"byte_end":951347,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951352,"byte_end":951392,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951397,"byte_end":951450,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ t.matrix_mut_unchecked().m12 = 42.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951455,"byte_end":951495,"line_start":308,"line_end":308,"column_start":5,"column_end":45}},{"value":"/ t.matrix_mut_unchecked().m23 = 90.0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951500,"byte_end":951540,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951545,"byte_end":951548,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951553,"byte_end":951556,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix3::new(1.0, 42.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951561,"byte_end":951608,"line_start":312,"line_end":312,"column_start":5,"column_end":52}},{"value":"/                             3.0, 4.0,  90.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951613,"byte_end":951661,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/                             0.0, 0.0,  1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951666,"byte_end":951714,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(*t.matrix(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951719,"byte_end":951757,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951762,"byte_end":951769,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951774,"byte_end":951783,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6684},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952287,"byte_end":952299,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"set_category","qualname":"<Transform<N, D, C>>::set_category","value":"pub fn set_category<CNew: SuperTCategoryOf<C>>(Self) -> Transform<N, D, CNew>","parent":null,"children":[],"decl_id":null,"docs":" Sets the category of this transform.","sig":null,"attributes":[{"value":"/ Sets the category of this transform.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951903,"byte_end":951943,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951948,"byte_end":951951,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This can be done only if the new category is more general than the current one, e.g., a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":951956,"byte_end":952047,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ transform with category `TProjective` cannot be converted to a transform with category","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952052,"byte_end":952142,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ `TAffine` because not all projective transformations are affine (the other way-round is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952147,"byte_end":952238,"line_start":326,"line_end":326,"column_start":5,"column_end":96}},{"value":"/ valid though).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952243,"byte_end":952261,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952266,"byte_end":952275,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6686},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952661,"byte_end":952672,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Transform<N, D, C>>::clone_owned","value":"pub fn clone_owned(&Self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this transform into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this transform into one that owns its data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952425,"byte_end":952479,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952484,"byte_end":952493,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is redundant with automatic `Copy` and the `.clone()` method and will be removed in a future release.\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952498,"byte_end":952649,"line_start":335,"line_end":337,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6687},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953223,"byte_end":953237,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Transform<N, D, C>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this transform into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this transform into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952783,"byte_end":952865,"line_start":342,"line_end":342,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952870,"byte_end":952873,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952878,"byte_end":952892,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952897,"byte_end":952904,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952909,"byte_end":952951,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952956,"byte_end":952959,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":952964,"byte_end":953003,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953008,"byte_end":953047,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953052,"byte_end":953092,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953097,"byte_end":953146,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953151,"byte_end":953185,"line_start":352,"line_end":352,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953190,"byte_end":953197,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953202,"byte_end":953211,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6688},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954389,"byte_end":954400,"line_start":384,"line_end":384,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Transform<N, D, C>>::try_inverse","value":"pub fn try_inverse(Self) -> Option<Transform<N, D, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation. You may use `.inverse` instead of this\n transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation. You may use `.inverse` instead of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953327,"byte_end":953409,"line_start":359,"line_end":359,"column_start":5,"column_end":87}},{"value":"/ transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953414,"byte_end":953521,"line_start":360,"line_end":360,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953526,"byte_end":953529,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953534,"byte_end":953548,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953553,"byte_end":953560,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953565,"byte_end":953604,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953609,"byte_end":953651,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953656,"byte_end":953659,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953664,"byte_end":953704,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953709,"byte_end":953748,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953753,"byte_end":953793,"line_start":369,"line_end":369,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953798,"byte_end":953847,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/ let inv_t = t.try_inverse().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953852,"byte_end":953893,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953898,"byte_end":953957,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":953962,"byte_end":954021,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954026,"byte_end":954029,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954034,"byte_end":954061,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954066,"byte_end":954105,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954110,"byte_end":954149,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954154,"byte_end":954194,"line_start":378,"line_end":378,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954199,"byte_end":954248,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/ assert!(t.try_inverse().is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954253,"byte_end":954292,"line_start":380,"line_end":380,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954297,"byte_end":954304,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954309,"byte_end":954318,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954323,"byte_end":954377,"line_start":383,"line_end":383,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6689},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955352,"byte_end":955359,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform<N, D, C>>::inverse","value":"pub fn inverse(Self) -> Transform<N, D, C> where\nC: SubTCategoryOf<TProjective>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`\n category (i.e., a `Transform{2,3}` may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954601,"byte_end":954689,"line_start":392,"line_end":392,"column_start":5,"column_end":93}},{"value":"/ category (i.e., a `Transform{2,3}` may not be invertible).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954694,"byte_end":954756,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954761,"byte_end":954764,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954769,"byte_end":954783,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954788,"byte_end":954795,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954800,"byte_end":954839,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954844,"byte_end":954887,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954892,"byte_end":954895,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954900,"byte_end":954940,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954945,"byte_end":954984,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":954989,"byte_end":955029,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955034,"byte_end":955087,"line_start":403,"line_end":403,"column_start":5,"column_end":58}},{"value":"/ let inv_t = proj.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955092,"byte_end":955123,"line_start":404,"line_end":404,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955128,"byte_end":955191,"line_start":405,"line_end":405,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955196,"byte_end":955259,"line_start":406,"line_end":406,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955264,"byte_end":955271,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955276,"byte_end":955285,"line_start":408,"line_end":408,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955290,"byte_end":955340,"line_start":409,"line_end":409,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6690},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956559,"byte_end":956574,"line_start":443,"line_end":443,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Transform<N, D, C>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this\n transformation has a subcategory of `TProjective`.","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955574,"byte_end":955669,"line_start":418,"line_end":418,"column_start":5,"column_end":100}},{"value":"/ transformation has a subcategory of `TProjective`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955674,"byte_end":955728,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955733,"byte_end":955736,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955741,"byte_end":955755,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955760,"byte_end":955767,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955772,"byte_end":955811,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955816,"byte_end":955858,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955863,"byte_end":955866,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955871,"byte_end":955911,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955916,"byte_end":955955,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":955960,"byte_end":956000,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956005,"byte_end":956054,"line_start":429,"line_end":429,"column_start":5,"column_end":54}},{"value":"/ let mut inv_t = t;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956059,"byte_end":956081,"line_start":430,"line_end":430,"column_start":5,"column_end":27}},{"value":"/ assert!(inv_t.try_inverse_mut());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956086,"byte_end":956123,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956128,"byte_end":956187,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956192,"byte_end":956251,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956256,"byte_end":956259,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956264,"byte_end":956291,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956296,"byte_end":956335,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956340,"byte_end":956379,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956384,"byte_end":956424,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956429,"byte_end":956482,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/ assert!(!t.try_inverse_mut());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956487,"byte_end":956521,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956526,"byte_end":956533,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956538,"byte_end":956547,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6691},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957355,"byte_end":957366,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Transform<N, D, C>>::inverse_mut","value":"pub fn inverse_mut(&mut Self) where C: SubTCategoryOf<TProjective>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the\n `TGeneral` category (it may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956645,"byte_end":956735,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ `TGeneral` category (it may not be invertible).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956740,"byte_end":956791,"line_start":448,"line_end":448,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956796,"byte_end":956799,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956804,"byte_end":956818,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956823,"byte_end":956830,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956835,"byte_end":956874,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956879,"byte_end":956922,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956927,"byte_end":956930,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956935,"byte_end":956975,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":956980,"byte_end":957019,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957024,"byte_end":957064,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957069,"byte_end":957122,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/ let mut inv_t = proj;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957127,"byte_end":957152,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957157,"byte_end":957181,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957186,"byte_end":957249,"line_start":461,"line_end":461,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957254,"byte_end":957317,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957322,"byte_end":957329,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957334,"byte_end":957343,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6696},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957905,"byte_end":957920,"line_start":486,"line_end":486,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform<N, D, C>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this transformation.","sig":null,"attributes":[{"value":"/ Transform the given point by this transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957758,"byte_end":957811,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957816,"byte_end":957819,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957824,"byte_end":957879,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957884,"byte_end":957893,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6697},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958207,"byte_end":958223,"line_start":495,"line_end":495,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform<N, D, C>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this transformation, ignoring the\n translational component of the transformation.","sig":null,"attributes":[{"value":"/ Transform the given vector by this transformation, ignoring the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957992,"byte_end":958059,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ translational component of the transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958064,"byte_end":958114,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958119,"byte_end":958122,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958127,"byte_end":958181,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958186,"byte_end":958195,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6702},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958777,"byte_end":958800,"line_start":512,"line_end":512,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Transform<N, D, C>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the point.\n","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958585,"byte_end":958653,"line_start":508,"line_end":508,"column_start":5,"column_end":73}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958658,"byte_end":958732,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958737,"byte_end":958751,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958756,"byte_end":958765,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6703},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959084,"byte_end":959108,"line_start":520,"line_end":520,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Transform<N, D, C>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the vector.\n","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958890,"byte_end":958959,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958964,"byte_end":959038,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ the vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959043,"byte_end":959058,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959063,"byte_end":959072,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959514,"byte_end":959524,"line_start":532,"line_end":532,"column_start":12,"column_end":22},"name":"matrix_mut","qualname":"<Transform<N, D, TGeneral>>::matrix_mut","value":"pub fn matrix_mut(&mut Self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this\n transformation category is not `TGeneral`.\n","sig":null,"attributes":[{"value":"/ A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959348,"byte_end":959437,"line_start":529,"line_end":529,"column_start":5,"column_end":94}},{"value":"/ transformation category is not `TGeneral`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959442,"byte_end":959488,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959493,"byte_end":959502,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6736},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961553,"byte_end":961563,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"Transform2","qualname":"::geometry::transform_alias::Transform2","value":"Transform<N, U2, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961448,"byte_end":961543,"line_start":5,"line_end":5,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":6738},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961687,"byte_end":961698,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"Projective2","qualname":"::geometry::transform_alias::Projective2","value":"Transform<N, U2, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961597,"byte_end":961677,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":6740},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961812,"byte_end":961819,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Affine2","qualname":"::geometry::transform_alias::Affine2","value":"Transform<N, U2, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D affine transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961735,"byte_end":961802,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":6742},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961958,"byte_end":961968,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Transform3","qualname":"::geometry::transform_alias::Transform3","value":"Transform<N, U3, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":961853,"byte_end":961948,"line_start":12,"line_end":12,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":6744},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":962092,"byte_end":962103,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"Projective3","qualname":"::geometry::transform_alias::Projective3","value":"Transform<N, U3, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":962002,"byte_end":962082,"line_start":14,"line_end":14,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":6746},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":962217,"byte_end":962224,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Affine3","qualname":"::geometry::transform_alias::Affine3","value":"Transform<N, U3, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 3D affine transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D affine transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_alias.rs","byte_start":962140,"byte_end":962207,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6766},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963488,"byte_end":963496,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform<N, D, C>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity transform.","sig":null,"attributes":[{"value":"/ Creates a new identity transform.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962651,"byte_end":962688,"line_start":15,"line_end":15,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962693,"byte_end":962696,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962701,"byte_end":962714,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962719,"byte_end":962722,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962727,"byte_end":962734,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Transform2, Projective2, Affine2, Transform3, Projective3, Affine3, Point2, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962739,"byte_end":962844,"line_start":20,"line_end":20,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962849,"byte_end":962852,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962857,"byte_end":962892,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/ let t = Projective2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962897,"byte_end":962933,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962938,"byte_end":962965,"line_start":24,"line_end":24,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962970,"byte_end":962973,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962978,"byte_end":963012,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963017,"byte_end":963046,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963051,"byte_end":963054,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform2::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963059,"byte_end":963096,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963101,"byte_end":963130,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963135,"byte_end":963138,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ // Also works in 3D.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963143,"byte_end":963167,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963172,"byte_end":963212,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/ let t = Projective3::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963217,"byte_end":963253,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963258,"byte_end":963285,"line_start":35,"line_end":35,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963290,"byte_end":963293,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine3::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963298,"byte_end":963332,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963337,"byte_end":963366,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963371,"byte_end":963374,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform3::identity();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963379,"byte_end":963416,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963421,"byte_end":963450,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963455,"byte_end":963462,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963467,"byte_end":963476,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6915},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991483,"byte_end":991493,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Reflection","qualname":"::geometry::reflection::Reflection","value":"Reflection {  }","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6920}],"decl_id":null,"docs":" A reflection wrt. a plane.\n","sig":null,"attributes":[{"value":"/ A reflection wrt. a plane.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991441,"byte_end":991471,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":6925},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991905,"byte_end":991908,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Reflection<N, D, S>>::new","value":"pub fn new(Unit<Vector<N, D, S>>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt the plane orthogonal to the given axis and bias.","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt the plane orthogonal to the given axis and bias.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991650,"byte_end":991731,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991736,"byte_end":991739,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The bias is the position of the plane on the axis. In particular, a bias equal to zero","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991744,"byte_end":991834,"line_start":19,"line_end":19,"column_start":5,"column_end":95}},{"value":"/ represents a plane that passes through the origin.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991839,"byte_end":991893,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6926},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992174,"byte_end":992194,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"new_containing_point","qualname":"<Reflection<N, D, S>>::new_containing_point","value":"pub fn new_containing_point(Unit<Vector<N, D, S>>, &Point<N, D>) -> Self where\nD: DimName, DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the\n point `pt`.\n","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992048,"byte_end":992142,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ point `pt`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992147,"byte_end":992162,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6927},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992447,"byte_end":992451,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"axis","qualname":"<Reflection<N, D, S>>::axis","value":"pub fn axis(&Self) -> &Vector<N, D, S>","parent":null,"children":[],"decl_id":null,"docs":" The reflexion axis.\n","sig":null,"attributes":[{"value":"/ The reflexion axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992412,"byte_end":992435,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6928},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992636,"byte_end":992643,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Reflection<N, D, S>>::reflect","value":"pub fn reflect<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":992573,"byte_end":992624,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6932},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":993432,"byte_end":993449,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"reflect_with_sign","qualname":"<Reflection<N, D, S>>::reflect_with_sign","value":"pub fn reflect_with_sign<R2: Dim, C2: Dim,\n                         S2>(&Self, &mut Matrix<N, R2, C2, S2>, N) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":993369,"byte_end":993420,"line_start":62,"line_end":62,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6936},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":994187,"byte_end":994199,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"reflect_rows","qualname":"<Reflection<N, D, S>>::reflect_rows","value":"pub fn reflect_rows<R2: Dim, C2: Dim, S2,\n                    S3>(&Self, &mut Matrix<N, R2, C2, S2>,\n                        &mut Vector<N, R2, S3>) where\nS2: StorageMut<N, R2, C2>, S3: StorageMut<N, R2>,\nShapeConstraint: DimEq<C2, D> + AreMultipliable<R2, C2, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":994127,"byte_end":994175,"line_start":78,"line_end":78,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6941},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":994779,"byte_end":994801,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"reflect_rows_with_sign","qualname":"<Reflection<N, D, S>>::reflect_rows_with_sign","value":"pub fn reflect_rows_with_sign<R2: Dim, C2: Dim, S2,\n                              S3>(&Self, &mut Matrix<N, R2, C2, S2>,\n                                  &mut Vector<N, R2, S3>, N) where\nS2: StorageMut<N, R2, C2>, S3: StorageMut<N, R2>,\nShapeConstraint: DimEq<C2, D> + AreMultipliable<R2, C2, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":994719,"byte_end":994767,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":995893,"byte_end":995906,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"Orthographic3","qualname":"::geometry::orthographic::Orthographic3","value":"Orthographic3 {  }","parent":null,"children":[{"krate":0,"index":6966}],"decl_id":null,"docs":" A 3D orthographic projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D orthographic projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":995813,"byte_end":995881,"line_start":19,"line_end":19,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6980},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999679,"byte_end":999682,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<Orthographic3<N>>::new","value":"pub fn new(N, N, N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997124,"byte_end":997173,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997178,"byte_end":997181,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This follows the OpenGL convention, so this will flip the `z` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997186,"byte_end":997257,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997262,"byte_end":997265,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997270,"byte_end":997283,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997288,"byte_end":997295,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997300,"byte_end":997339,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997344,"byte_end":997388,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997393,"byte_end":997462,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ // Check this projection actually transforms the view cuboid into the double-unit cube.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997467,"byte_end":997558,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ // See https://www.nalgebra.org/projections/#orthographic-projection for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997563,"byte_end":997653,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997658,"byte_end":997699,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997704,"byte_end":997748,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997753,"byte_end":997795,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997800,"byte_end":997845,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997850,"byte_end":997892,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997897,"byte_end":997942,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997947,"byte_end":997990,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997995,"byte_end":998041,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998046,"byte_end":998049,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998054,"byte_end":998134,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998139,"byte_end":998219,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998224,"byte_end":998304,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998309,"byte_end":998389,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998394,"byte_end":998474,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998479,"byte_end":998559,"line_start":94,"line_end":94,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998564,"byte_end":998644,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998649,"byte_end":998729,"line_start":96,"line_end":96,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998734,"byte_end":998737,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // This also works with flipped axis. In other words, we allow that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998742,"byte_end":998813,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ // `left > right`, `bottom > top`, and/or `znear > zfar`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998818,"byte_end":998879,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998884,"byte_end":998953,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998958,"byte_end":998961,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":998966,"byte_end":999046,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999051,"byte_end":999131,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999136,"byte_end":999216,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999221,"byte_end":999301,"line_start":105,"line_end":105,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999306,"byte_end":999386,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999391,"byte_end":999471,"line_start":107,"line_end":107,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999476,"byte_end":999556,"line_start":108,"line_end":108,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999561,"byte_end":999641,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999646,"byte_end":999653,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":999658,"byte_end":999667,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6981},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000769,"byte_end":1000790,"line_start":141,"line_end":141,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Orthographic3<N>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D orthographic matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D orthographic matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000016,"byte_end":1000087,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000092,"byte_end":1000095,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000100,"byte_end":1000189,"line_start":125,"line_end":125,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000194,"byte_end":1000209,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000214,"byte_end":1000217,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000222,"byte_end":1000235,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000240,"byte_end":1000247,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000252,"byte_end":1000305,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/ let mat = Matrix4::new(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000310,"byte_end":1000337,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000342,"byte_end":1000398,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000403,"byte_end":1000460,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000465,"byte_end":1000525,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000530,"byte_end":1000577,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000582,"byte_end":1000588,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ let proj = Orthographic3::from_matrix_unchecked(mat);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000593,"byte_end":1000650,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(proj, Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000655,"byte_end":1000731,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000736,"byte_end":1000743,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000748,"byte_end":1000757,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000983,"byte_end":1000991,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"from_fov","qualname":"<Orthographic3<N>>::from_fov","value":"pub fn from_fov(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.\n","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000856,"byte_end":1000957,"line_start":145,"line_end":145,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1000962,"byte_end":1000971,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6983},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002368,"byte_end":1002375,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Orthographic3<N>>::inverse","value":"pub fn inverse(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001599,"byte_end":1001662,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001667,"byte_end":1001670,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001675,"byte_end":1001688,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001693,"byte_end":1001700,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001705,"byte_end":1001744,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001749,"byte_end":1001802,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001807,"byte_end":1001876,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001881,"byte_end":1001910,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001915,"byte_end":1001918,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001923,"byte_end":1001992,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1001997,"byte_end":1002066,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002071,"byte_end":1002074,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002079,"byte_end":1002148,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002153,"byte_end":1002182,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002187,"byte_end":1002256,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002261,"byte_end":1002330,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002335,"byte_end":1002342,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002347,"byte_end":1002356,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6984},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003487,"byte_end":1003501,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Orthographic3<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002888,"byte_end":1002938,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002943,"byte_end":1002946,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002951,"byte_end":1002964,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002969,"byte_end":1002976,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1002981,"byte_end":1003034,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003039,"byte_end":1003108,"line_start":212,"line_end":212,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003113,"byte_end":1003145,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003150,"byte_end":1003206,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003211,"byte_end":1003268,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003273,"byte_end":1003333,"line_start":216,"line_end":216,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003338,"byte_end":1003385,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003390,"byte_end":1003396,"line_start":218,"line_end":218,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.to_homogeneous(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003401,"byte_end":1003449,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003454,"byte_end":1003461,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003466,"byte_end":1003475,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004169,"byte_end":1004178,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Orthographic3<N>>::as_matrix","value":"pub fn as_matrix(&Self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003556,"byte_end":1003624,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003629,"byte_end":1003632,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003637,"byte_end":1003650,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003655,"byte_end":1003662,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003667,"byte_end":1003720,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003725,"byte_end":1003794,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003799,"byte_end":1003831,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003836,"byte_end":1003892,"line_start":233,"line_end":233,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003897,"byte_end":1003954,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1003959,"byte_end":1004019,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004024,"byte_end":1004071,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004076,"byte_end":1004082,"line_start":237,"line_end":237,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(*proj.as_matrix(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004087,"byte_end":1004131,"line_start":238,"line_end":238,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004136,"byte_end":1004143,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004148,"byte_end":1004157,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6986},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004569,"byte_end":1004582,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Orthographic3<N>>::as_projective","value":"pub fn as_projective(&Self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004235,"byte_end":1004298,"line_start":245,"line_end":245,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004303,"byte_end":1004306,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004311,"byte_end":1004324,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004329,"byte_end":1004336,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004341,"byte_end":1004375,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004380,"byte_end":1004449,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.as_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004454,"byte_end":1004531,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004536,"byte_end":1004543,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004548,"byte_end":1004557,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6987},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004981,"byte_end":1004994,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Orthographic3<N>>::to_projective","value":"pub fn to_projective(&Self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004662,"byte_end":1004710,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004715,"byte_end":1004718,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004723,"byte_end":1004736,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004741,"byte_end":1004748,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004753,"byte_end":1004787,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004792,"byte_end":1004861,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.to_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004866,"byte_end":1004943,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004948,"byte_end":1004955,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1004960,"byte_end":1004969,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005726,"byte_end":1005736,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Orthographic3<N>>::into_inner","value":"pub fn into_inner(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005089,"byte_end":1005137,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005142,"byte_end":1005145,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005150,"byte_end":1005163,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005168,"byte_end":1005175,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005180,"byte_end":1005219,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005224,"byte_end":1005277,"line_start":276,"line_end":276,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005282,"byte_end":1005351,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005356,"byte_end":1005388,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005393,"byte_end":1005449,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005454,"byte_end":1005511,"line_start":280,"line_end":280,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005516,"byte_end":1005576,"line_start":281,"line_end":281,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005581,"byte_end":1005628,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005633,"byte_end":1005639,"line_start":283,"line_end":283,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.into_inner(), expected);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005644,"byte_end":1005688,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005693,"byte_end":1005700,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005705,"byte_end":1005714,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6989},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005981,"byte_end":1005987,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Orthographic3<N>>::unwrap","value":"pub fn unwrap(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Orthographic3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005790,"byte_end":1005838,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Orthographic3::into_inner] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005843,"byte_end":1005899,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005904,"byte_end":1005955,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1005960,"byte_end":1005969,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6990},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006508,"byte_end":1006512,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"left","qualname":"<Orthographic3<N>>::left","value":"pub fn left(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The left offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006041,"byte_end":1006080,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006085,"byte_end":1006088,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006093,"byte_end":1006100,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006105,"byte_end":1006144,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006149,"byte_end":1006183,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006188,"byte_end":1006257,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006262,"byte_end":1006322,"line_start":305,"line_end":305,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006327,"byte_end":1006330,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006335,"byte_end":1006404,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006409,"byte_end":1006470,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006475,"byte_end":1006482,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006487,"byte_end":1006496,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007072,"byte_end":1007077,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"right","qualname":"<Orthographic3<N>>::right","value":"pub fn right(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The right offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006602,"byte_end":1006642,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006647,"byte_end":1006650,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006655,"byte_end":1006662,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006667,"byte_end":1006706,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006711,"byte_end":1006745,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006750,"byte_end":1006819,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006824,"byte_end":1006886,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006891,"byte_end":1006894,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006899,"byte_end":1006968,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1006973,"byte_end":1007034,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007039,"byte_end":1007046,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007051,"byte_end":1007060,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6992},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007639,"byte_end":1007645,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Orthographic3<N>>::bottom","value":"pub fn bottom(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The bottom offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007166,"byte_end":1007207,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007212,"byte_end":1007215,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007220,"byte_end":1007227,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007232,"byte_end":1007271,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007276,"byte_end":1007310,"line_start":335,"line_end":335,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007315,"byte_end":1007384,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007389,"byte_end":1007451,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007456,"byte_end":1007459,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007464,"byte_end":1007533,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007538,"byte_end":1007601,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007606,"byte_end":1007613,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007618,"byte_end":1007627,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6993},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008199,"byte_end":1008202,"line_start":359,"line_end":359,"column_start":12,"column_end":15},"name":"top","qualname":"<Orthographic3<N>>::top","value":"pub fn top(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The top offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007735,"byte_end":1007773,"line_start":347,"line_end":347,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007778,"byte_end":1007781,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007786,"byte_end":1007793,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007798,"byte_end":1007837,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007842,"byte_end":1007876,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007881,"byte_end":1007950,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1007955,"byte_end":1008015,"line_start":353,"line_end":353,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008020,"byte_end":1008023,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008028,"byte_end":1008097,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008102,"byte_end":1008161,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008166,"byte_end":1008173,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008178,"byte_end":1008187,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6994},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008768,"byte_end":1008773,"line_start":375,"line_end":375,"column_start":12,"column_end":17},"name":"znear","qualname":"<Orthographic3<N>>::znear","value":"pub fn znear(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The near plane offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008291,"byte_end":1008336,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008341,"byte_end":1008344,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008349,"byte_end":1008356,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008361,"byte_end":1008400,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008405,"byte_end":1008439,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008444,"byte_end":1008513,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008518,"byte_end":1008579,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008584,"byte_end":1008587,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008592,"byte_end":1008661,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008666,"byte_end":1008730,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008735,"byte_end":1008742,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008747,"byte_end":1008756,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6995},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009336,"byte_end":1009340,"line_start":391,"line_end":391,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Orthographic3<N>>::zfar","value":"pub fn zfar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The far plane offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008862,"byte_end":1008906,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008911,"byte_end":1008914,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008919,"byte_end":1008926,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008931,"byte_end":1008970,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1008975,"byte_end":1009009,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009014,"byte_end":1009083,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009088,"byte_end":1009151,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009156,"byte_end":1009159,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009164,"byte_end":1009233,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009238,"byte_end":1009298,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009303,"byte_end":1009310,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009315,"byte_end":1009324,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6996},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010888,"byte_end":1010901,"line_start":423,"line_end":423,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Orthographic3<N>>::project_point","value":"pub fn project_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009505,"byte_end":1009561,"line_start":396,"line_end":396,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009566,"byte_end":1009569,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009574,"byte_end":1009587,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009592,"byte_end":1009599,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009604,"byte_end":1009643,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009648,"byte_end":1009692,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009697,"byte_end":1009766,"line_start":402,"line_end":402,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009771,"byte_end":1009774,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009779,"byte_end":1009820,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009825,"byte_end":1009869,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009874,"byte_end":1009916,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009921,"byte_end":1009966,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1009971,"byte_end":1010013,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010018,"byte_end":1010063,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010068,"byte_end":1010111,"line_start":410,"line_end":410,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010116,"byte_end":1010162,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010167,"byte_end":1010170,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010175,"byte_end":1010255,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010260,"byte_end":1010340,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010345,"byte_end":1010425,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010430,"byte_end":1010510,"line_start":416,"line_end":416,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010515,"byte_end":1010595,"line_start":417,"line_end":417,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010600,"byte_end":1010680,"line_start":418,"line_end":418,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010685,"byte_end":1010765,"line_start":419,"line_end":419,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010770,"byte_end":1010850,"line_start":420,"line_end":420,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010855,"byte_end":1010862,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1010867,"byte_end":1010876,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6997},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012739,"byte_end":1012754,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Orthographic3<N>>::unproject_point","value":"pub fn unproject_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the underlying matrix inverse.","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the underlying matrix inverse.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011167,"byte_end":1011252,"line_start":431,"line_end":431,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011257,"byte_end":1011260,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011265,"byte_end":1011278,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011283,"byte_end":1011290,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011295,"byte_end":1011334,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011339,"byte_end":1011383,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011388,"byte_end":1011457,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011462,"byte_end":1011465,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(-1.0, -1.0, -1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011470,"byte_end":1011513,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let p2 = Point3::new(-1.0, -1.0,  1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011518,"byte_end":1011561,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/ let p3 = Point3::new(-1.0,  1.0, -1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011566,"byte_end":1011609,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ let p4 = Point3::new(-1.0,  1.0,  1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011614,"byte_end":1011657,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/ let p5 = Point3::new( 1.0, -1.0, -1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011662,"byte_end":1011705,"line_start":443,"line_end":443,"column_start":5,"column_end":48}},{"value":"/ let p6 = Point3::new( 1.0, -1.0,  1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011710,"byte_end":1011753,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ let p7 = Point3::new( 1.0,  1.0, -1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011758,"byte_end":1011801,"line_start":445,"line_end":445,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new( 1.0,  1.0,  1.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011806,"byte_end":1011849,"line_start":446,"line_end":446,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011854,"byte_end":1011857,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p1), Point3::new(1.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011862,"byte_end":1011960,"line_start":448,"line_end":448,"column_start":5,"column_end":103}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p2), Point3::new(1.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1011965,"byte_end":1012066,"line_start":449,"line_end":449,"column_start":5,"column_end":106}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p3), Point3::new(1.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012071,"byte_end":1012170,"line_start":450,"line_end":450,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p4), Point3::new(1.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012175,"byte_end":1012277,"line_start":451,"line_end":451,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p5), Point3::new(10.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012282,"byte_end":1012381,"line_start":452,"line_end":452,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p6), Point3::new(10.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012386,"byte_end":1012488,"line_start":453,"line_end":453,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p7), Point3::new(10.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012493,"byte_end":1012593,"line_start":454,"line_end":454,"column_start":5,"column_end":105}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p8), Point3::new(10.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012598,"byte_end":1012701,"line_start":455,"line_end":455,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012706,"byte_end":1012713,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1012718,"byte_end":1012727,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6998},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013842,"byte_end":1013856,"line_start":486,"line_end":486,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Orthographic3<N>>::project_vector","value":"pub fn project_vector<SB>(&Self, &Vector<N, U3, SB>) -> Vector3<N> where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013101,"byte_end":1013158,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013163,"byte_end":1013166,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Vectors are not affected by the translation part of the projection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013171,"byte_end":1013242,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013247,"byte_end":1013250,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013255,"byte_end":1013268,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013273,"byte_end":1013280,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013285,"byte_end":1013324,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Vector3};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013329,"byte_end":1013374,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013379,"byte_end":1013448,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013453,"byte_end":1013456,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::x();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013461,"byte_end":1013487,"line_start":477,"line_end":477,"column_start":5,"column_end":31}},{"value":"/ let v2 = Vector3::y();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013492,"byte_end":1013518,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/ let v3 = Vector3::z();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013523,"byte_end":1013549,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013554,"byte_end":1013557,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_vector(&v1), Vector3::x() * 2.0 / 9.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013562,"byte_end":1013638,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(proj.project_vector(&v2), Vector3::y() * 2.0 / 18.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013643,"byte_end":1013720,"line_start":482,"line_end":482,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(proj.project_vector(&v3), Vector3::z() * -2.0 / 999.9);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013725,"byte_end":1013804,"line_start":483,"line_end":483,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013809,"byte_end":1013816,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1013821,"byte_end":1013830,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014651,"byte_end":1014659,"line_start":511,"line_end":511,"column_start":12,"column_end":20},"name":"set_left","qualname":"<Orthographic3<N>>::set_left","value":"pub fn set_left(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the left offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014112,"byte_end":1014156,"line_start":497,"line_end":497,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014161,"byte_end":1014164,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014169,"byte_end":1014176,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014181,"byte_end":1014220,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014225,"byte_end":1014259,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014264,"byte_end":1014337,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ proj.set_left(2.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014342,"byte_end":1014365,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.left(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014370,"byte_end":1014430,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014435,"byte_end":1014438,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a left offset greater than the current right offset.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014443,"byte_end":1014518,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ proj.set_left(20.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014523,"byte_end":1014547,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.left(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014552,"byte_end":1014613,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014618,"byte_end":1014625,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014630,"byte_end":1014639,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7001},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015319,"byte_end":1015328,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"set_right","qualname":"<Orthographic3<N>>::set_right","value":"pub fn set_right(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the right offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014773,"byte_end":1014818,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014823,"byte_end":1014826,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014831,"byte_end":1014838,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014843,"byte_end":1014882,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014887,"byte_end":1014921,"line_start":520,"line_end":520,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1014926,"byte_end":1014999,"line_start":521,"line_end":521,"column_start":5,"column_end":78}},{"value":"/ proj.set_right(15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015004,"byte_end":1015029,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015034,"byte_end":1015096,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015101,"byte_end":1015104,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a right offset smaller than the current left offset.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015109,"byte_end":1015184,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ proj.set_right(-3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015189,"byte_end":1015214,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015219,"byte_end":1015281,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015286,"byte_end":1015293,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015298,"byte_end":1015307,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7002},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015990,"byte_end":1016000,"line_start":549,"line_end":549,"column_start":12,"column_end":22},"name":"set_bottom","qualname":"<Orthographic3<N>>::set_bottom","value":"pub fn set_bottom(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the bottom offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015441,"byte_end":1015487,"line_start":535,"line_end":535,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015492,"byte_end":1015495,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015500,"byte_end":1015507,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015512,"byte_end":1015551,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015556,"byte_end":1015590,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015595,"byte_end":1015668,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom(8.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015673,"byte_end":1015698,"line_start":541,"line_end":541,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.bottom(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015703,"byte_end":1015765,"line_start":542,"line_end":542,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015770,"byte_end":1015773,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a bottom offset greater than the current top offset.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015778,"byte_end":1015853,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ proj.set_bottom(50.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015858,"byte_end":1015884,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/ assert_relative_eq!(proj.bottom(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015889,"byte_end":1015952,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015957,"byte_end":1015964,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1015969,"byte_end":1015978,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016648,"byte_end":1016655,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"set_top","qualname":"<Orthographic3<N>>::set_top","value":"pub fn set_top(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the top offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016112,"byte_end":1016155,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016160,"byte_end":1016163,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016168,"byte_end":1016175,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016180,"byte_end":1016219,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016224,"byte_end":1016258,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016263,"byte_end":1016336,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ proj.set_top(15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016341,"byte_end":1016364,"line_start":560,"line_end":560,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016369,"byte_end":1016429,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016434,"byte_end":1016437,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a top offset smaller than the current bottom offset.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016442,"byte_end":1016517,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ proj.set_top(-3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016522,"byte_end":1016545,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016550,"byte_end":1016610,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016615,"byte_end":1016622,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016627,"byte_end":1016636,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7004},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017309,"byte_end":1017318,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Orthographic3<N>>::set_znear","value":"pub fn set_znear(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near plane offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016770,"byte_end":1016820,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016825,"byte_end":1016828,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016833,"byte_end":1016840,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016845,"byte_end":1016884,"line_start":576,"line_end":576,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016889,"byte_end":1016923,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1016928,"byte_end":1017001,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear(8.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017006,"byte_end":1017030,"line_start":579,"line_end":579,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.znear(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017035,"byte_end":1017096,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017101,"byte_end":1017104,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a znear greater than the current zfar.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017109,"byte_end":1017170,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ proj.set_znear(5000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017175,"byte_end":1017202,"line_start":583,"line_end":583,"column_start":5,"column_end":32}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017207,"byte_end":1017271,"line_start":584,"line_end":584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017276,"byte_end":1017283,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017288,"byte_end":1017297,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7005},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017963,"byte_end":1017971,"line_start":606,"line_end":606,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Orthographic3<N>>::set_zfar","value":"pub fn set_zfar(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the far plane offset of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017431,"byte_end":1017480,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017485,"byte_end":1017488,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017493,"byte_end":1017500,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017505,"byte_end":1017544,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017549,"byte_end":1017583,"line_start":596,"line_end":596,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017588,"byte_end":1017661,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/ proj.set_zfar(15.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017666,"byte_end":1017690,"line_start":598,"line_end":598,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017695,"byte_end":1017756,"line_start":599,"line_end":599,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017761,"byte_end":1017764,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a zfar smaller than the current znear.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017769,"byte_end":1017830,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/ proj.set_zfar(-3.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017835,"byte_end":1017859,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017864,"byte_end":1017925,"line_start":603,"line_end":603,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017930,"byte_end":1017937,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1017942,"byte_end":1017951,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7006},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018765,"byte_end":1018783,"line_start":627,"line_end":627,"column_start":12,"column_end":30},"name":"set_left_and_right","qualname":"<Orthographic3<N>>::set_left_and_right","value":"pub fn set_left_and_right(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `x` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `x` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018085,"byte_end":1018137,"line_start":611,"line_end":611,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018142,"byte_end":1018145,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018150,"byte_end":1018157,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018162,"byte_end":1018201,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018206,"byte_end":1018240,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018245,"byte_end":1018318,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ proj.set_left_and_right(7.0, 70.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018323,"byte_end":1018362,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018367,"byte_end":1018427,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ assert_relative_eq!(proj.right(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018432,"byte_end":1018494,"line_start":619,"line_end":619,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018499,"byte_end":1018502,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `left > right`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018507,"byte_end":1018551,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/ proj.set_left_and_right(70.0, 7.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018556,"byte_end":1018595,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018600,"byte_end":1018661,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/ assert_relative_eq!(proj.right(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018666,"byte_end":1018727,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018732,"byte_end":1018739,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1018744,"byte_end":1018753,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7007},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019771,"byte_end":1019789,"line_start":652,"line_end":652,"column_start":12,"column_end":30},"name":"set_bottom_and_top","qualname":"<Orthographic3<N>>::set_bottom_and_top","value":"pub fn set_bottom_and_top(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `y` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `y` axis.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019091,"byte_end":1019143,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019148,"byte_end":1019151,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019156,"byte_end":1019163,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019168,"byte_end":1019207,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019212,"byte_end":1019246,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019251,"byte_end":1019324,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom_and_top(7.0, 70.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019329,"byte_end":1019368,"line_start":642,"line_end":642,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019373,"byte_end":1019435,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.top(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019440,"byte_end":1019500,"line_start":644,"line_end":644,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019505,"byte_end":1019508,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `bottom > top`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019513,"byte_end":1019557,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ proj.set_bottom_and_top(70.0, 7.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019562,"byte_end":1019601,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019606,"byte_end":1019669,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(proj.top(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019674,"byte_end":1019733,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019738,"byte_end":1019745,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1019750,"byte_end":1019759,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7008},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020794,"byte_end":1020812,"line_start":677,"line_end":677,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Orthographic3<N>>::set_znear_and_zfar","value":"pub fn set_znear_and_zfar(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the near and far plane offsets of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near and far plane offsets of the view cuboid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020097,"byte_end":1020156,"line_start":661,"line_end":661,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020161,"byte_end":1020164,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020169,"byte_end":1020176,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020181,"byte_end":1020220,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020225,"byte_end":1020259,"line_start":665,"line_end":665,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020264,"byte_end":1020337,"line_start":666,"line_end":666,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear_and_zfar(50.0, 5000.0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020342,"byte_end":1020384,"line_start":667,"line_end":667,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(proj.znear(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020389,"byte_end":1020451,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.zfar(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020456,"byte_end":1020519,"line_start":669,"line_end":669,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020524,"byte_end":1020527,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `znear > zfar`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020532,"byte_end":1020576,"line_start":671,"line_end":671,"column_start":5,"column_end":49}},{"value":"/ proj.set_znear_and_zfar(5000.0, 0.5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020581,"byte_end":1020622,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020627,"byte_end":1020691,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.5, epsilon = 1.0e-6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020696,"byte_end":1020756,"line_start":674,"line_end":674,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020761,"byte_end":1020768,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1020773,"byte_end":1020782,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7038},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1022902,"byte_end":1022914,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"Perspective3","qualname":"::geometry::perspective::Perspective3","value":"Perspective3 {  }","parent":null,"children":[{"krate":0,"index":7040}],"decl_id":null,"docs":" A 3D perspective projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D perspective projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1022823,"byte_end":1022890,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024231,"byte_end":1024234,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Perspective3<N>>::new","value":"pub fn new(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.\n","sig":null,"attributes":[{"value":"/ Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024122,"byte_end":1024219,"line_start":70,"line_end":70,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":7055},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025085,"byte_end":1025106,"line_start":99,"line_end":99,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Perspective3<N>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D perspective matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D perspective matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024869,"byte_end":1024939,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024944,"byte_end":1024947,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents a perspective","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024952,"byte_end":1025039,"line_start":96,"line_end":96,"column_start":5,"column_end":92}},{"value":"/ projection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025044,"byte_end":1025059,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025064,"byte_end":1025073,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7056},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025261,"byte_end":1025268,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Perspective3<N>>::inverse","value":"pub fn inverse(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025172,"byte_end":1025235,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025240,"byte_end":1025249,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7057},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025793,"byte_end":1025807,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Perspective3<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025717,"byte_end":1025767,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025772,"byte_end":1025781,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7058},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025970,"byte_end":1025979,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Perspective3<N>>::as_matrix","value":"pub fn as_matrix(&Self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025876,"byte_end":1025944,"line_start":128,"line_end":128,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1025949,"byte_end":1025958,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7059},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026125,"byte_end":1026138,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Perspective3<N>>::as_projective","value":"pub fn as_projective(&Self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026036,"byte_end":1026099,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026104,"byte_end":1026113,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7060},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026292,"byte_end":1026305,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Perspective3<N>>::to_projective","value":"pub fn to_projective(&Self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026218,"byte_end":1026266,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026271,"byte_end":1026280,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7061},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026474,"byte_end":1026484,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Perspective3<N>>::into_inner","value":"pub fn into_inner(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026400,"byte_end":1026448,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026453,"byte_end":1026462,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7062},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026728,"byte_end":1026734,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Perspective3<N>>::unwrap","value":"pub fn unwrap(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Perspective3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026538,"byte_end":1026586,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Perspective3::into_inner] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026591,"byte_end":1026646,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026651,"byte_end":1026702,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026707,"byte_end":1026716,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7063},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026877,"byte_end":1026883,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"aspect","qualname":"<Perspective3<N>>::aspect","value":"pub fn aspect(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the `width / height` aspect ratio of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the `width / height` aspect ratio of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026788,"byte_end":1026851,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026856,"byte_end":1026865,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7064},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027034,"byte_end":1027038,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"fovy","qualname":"<Perspective3<N>>::fovy","value":"pub fn fovy(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the y field of view of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1026959,"byte_end":1027008,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027013,"byte_end":1027022,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7065},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027211,"byte_end":1027216,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"znear","qualname":"<Perspective3<N>>::znear","value":"pub fn znear(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the near plane offset of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027134,"byte_end":1027185,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027190,"byte_end":1027199,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7066},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027526,"byte_end":1027530,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Perspective3<N>>::zfar","value":"pub fn zfar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the far plane offset of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027450,"byte_end":1027500,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027505,"byte_end":1027514,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7067},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027958,"byte_end":1027971,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Perspective3<N>>::project_point","value":"pub fn project_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027876,"byte_end":1027932,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1027937,"byte_end":1027946,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7068},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1028389,"byte_end":1028404,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Perspective3<N>>::unproject_point","value":"pub fn unproject_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the matrix inverse.\n","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the matrix inverse.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1028289,"byte_end":1028363,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1028368,"byte_end":1028377,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7069},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1028863,"byte_end":1028877,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Perspective3<N>>::project_vector","value":"pub fn project_vector<SB>(&Self, &Vector<N, U3, SB>) -> Vector3<N> where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1028780,"byte_end":1028837,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1028842,"byte_end":1028851,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7071},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029335,"byte_end":1029345,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"set_aspect","qualname":"<Perspective3<N>>::set_aspect","value":"pub fn set_aspect(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new `width / height` aspect ratio of the view\n frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new `width / height` aspect ratio of the view","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029204,"byte_end":1029292,"line_start":230,"line_end":230,"column_start":5,"column_end":93}},{"value":"/ frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029297,"byte_end":1029309,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029314,"byte_end":1029323,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7072},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029666,"byte_end":1029674,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"set_fovy","qualname":"<Perspective3<N>>::set_fovy","value":"pub fn set_fovy(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective with a new y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective with a new y field of view of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029564,"byte_end":1029640,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029645,"byte_end":1029654,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7073},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030024,"byte_end":1030033,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Perspective3<N>>::set_znear","value":"pub fn set_znear(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new near plane offset of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1029913,"byte_end":1029998,"line_start":249,"line_end":249,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030003,"byte_end":1030012,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7074},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030256,"byte_end":1030264,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Perspective3<N>>::set_zfar","value":"pub fn set_zfar(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new far plane offset of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030146,"byte_end":1030230,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030235,"byte_end":1030244,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7075},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030496,"byte_end":1030514,"line_start":265,"line_end":265,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Perspective3<N>>::set_znear_and_zfar","value":"pub fn set_znear_and_zfar(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with new near and far plane offsets of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with new near and far plane offsets of the view frustum.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030378,"byte_end":1030470,"line_start":263,"line_end":263,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030475,"byte_end":1030484,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":7104},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":7105},{"krate":0,"index":7125},{"krate":0,"index":7173},{"krate":0,"index":7240},{"krate":0,"index":7270},{"krate":0,"index":7284},{"krate":0,"index":7367},{"krate":0,"index":7422},{"krate":0,"index":7461},{"krate":0,"index":7496},{"krate":0,"index":7527},{"krate":0,"index":7553},{"krate":0,"index":7630},{"krate":0,"index":7679},{"krate":0,"index":7748},{"krate":0,"index":7811},{"krate":0,"index":7991},{"krate":0,"index":8058},{"krate":0,"index":8100},{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8138},{"krate":0,"index":8139},{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143},{"krate":0,"index":8144},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8147}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Factorization of real matrices.\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Factorization of real matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1031663,"byte_end":1031738,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":7105},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balancing","qualname":"::linalg::balancing","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","parent":null,"children":[{"krate":0,"index":7106},{"krate":0,"index":7107},{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7110},{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":24256},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":24260},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7119},{"krate":0,"index":7122}],"decl_id":null,"docs":" Functions for balancing a matrix.\n","sig":null,"attributes":[{"value":"/ Functions for balancing a matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1032774,"byte_end":1032811,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":7119},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1033258,"byte_end":1033281,"line_start":15,"line_end":15,"column_start":8,"column_end":31},"name":"balance_parlett_reinsch","qualname":"::linalg::balancing::balance_parlett_reinsch","value":"pub fn balance_parlett_reinsch<N: RealField, D: Dim>(&mut MatrixN<N, D>)\n-> VectorN<N, D> where DefaultAllocator: Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns\n the corresponding diagonal transformation.","sig":null,"attributes":[{"value":"/ Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1033045,"byte_end":1033155,"line_start":11,"line_end":11,"column_start":1,"column_end":111}},{"value":"/ the corresponding diagonal transformation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1033156,"byte_end":1033202,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1033203,"byte_end":1033206,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See https://arxiv.org/pdf/1401.5766.pdf","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1033207,"byte_end":1033250,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7122},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1034685,"byte_end":1034694,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"unbalance","qualname":"::linalg::balancing::unbalance","value":"pub fn unbalance<N: RealField, D: Dim>(&mut MatrixN<N, D>, &VectorN<N, D>)\nwhere DefaultAllocator: Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.\n","sig":null,"attributes":[{"value":"/ Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/balancing.rs","byte_start":1034590,"byte_end":1034677,"line_start":68,"line_end":68,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":20852},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1036632,"byte_end":1036642,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Bidiagonal","qualname":"::linalg::bidiagonal::Bidiagonal","value":"Bidiagonal {  }","parent":null,"children":[{"krate":0,"index":20856},{"krate":0,"index":20857},{"krate":0,"index":20858},{"krate":0,"index":20859}],"decl_id":null,"docs":" The bidiagonalization of a general matrix.\n","sig":null,"attributes":[{"value":"/ The bidiagonalization of a general matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1035548,"byte_end":1035594,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":7153},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1038052,"byte_end":1038055,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Bidiagonal<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Bidiagonal decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Bidiagonal decomposition using householder reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1037968,"byte_end":1038040,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7154},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040489,"byte_end":1040506,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"is_upper_diagonal","qualname":"<Bidiagonal<N, R, C>>::is_upper_diagonal","value":"pub fn is_upper_diagonal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this decomposition contains an upper-diagonal matrix.\n","sig":null,"attributes":[{"value":"/ Indicates whether this decomposition contains an upper-diagonal matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040388,"byte_end":1040463,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040468,"byte_end":1040477,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7156},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040897,"byte_end":1040903,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Bidiagonal<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (MatrixMN<N, R, DimMinimum<R, C>>, MatrixN<N, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>) where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, DimMinimum<R, C>> +\nAllocator<N, R, DimMinimum<R, C>> + Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040727,"byte_end":1040802,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040807,"byte_end":1040810,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The decomposed matrix `M` is equal to `U * D * V^t`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040815,"byte_end":1040871,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1040876,"byte_end":1040885,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7157},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1041449,"byte_end":1041450,"line_start":185,"line_end":185,"column_start":12,"column_end":13},"name":"d","qualname":"<Bidiagonal<N, R, C>>::d","value":"pub fn d(&Self) -> MatrixN<N, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1041351,"byte_end":1041423,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1041428,"byte_end":1041437,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1042243,"byte_end":1042244,"line_start":204,"line_end":204,"column_start":12,"column_end":13},"name":"u","qualname":"<Bidiagonal<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `U` of this `U * D * V` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `U` of this `U * D * V` decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1042034,"byte_end":1042107,"line_start":201,"line_end":201,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":7161},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1043247,"byte_end":1043250,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"v_t","qualname":"<Bidiagonal<N, R, C>>::v_t","value":"pub fn v_t(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1043158,"byte_end":1043235,"line_start":233,"line_end":233,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":7162},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1044597,"byte_end":1044605,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<Bidiagonal<N, R, C>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N::RealField, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal part of this decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1044537,"byte_end":1044585,"line_start":268,"line_end":268,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7164},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1044859,"byte_end":1044871,"line_start":277,"line_end":277,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<Bidiagonal<N, R, C>>::off_diagonal","value":"pub fn off_diagonal(&Self)\n-> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>> where\nDefaultAllocator: Allocator<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The off-diagonal part of this decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1044795,"byte_end":1044847,"line_start":276,"line_end":276,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7166},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1045117,"byte_end":1045128,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"uv_internal","qualname":"<Bidiagonal<N, R, C>>::uv_internal","value":"pub fn uv_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7172},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1048597,"byte_end":1048610,"line_start":373,"line_end":373,"column_start":12,"column_end":25},"name":"bidiagonalize","qualname":"<Matrix<N, R, C, S>>::bidiagonalize","value":"pub fn bidiagonalize(Self) -> Bidiagonal<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bidiagonalization using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the bidiagonalization using householder reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1048520,"byte_end":1048585,"line_start":372,"line_end":372,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":20870},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049636,"byte_end":1049644,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Cholesky","qualname":"::linalg::cholesky::Cholesky","value":"Cholesky {  }","parent":null,"children":[{"krate":0,"index":20873}],"decl_id":null,"docs":" The Cholesky decomposition of a symmetric-definite-positive matrix.\n","sig":null,"attributes":[{"value":"/ The Cholesky decomposition of a symmetric-definite-positive matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049149,"byte_end":1049220,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7205},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1050231,"byte_end":1050244,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Cholesky<N, D>>::new_unchecked","value":"pub fn new_unchecked(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Cholesky decomposition of `matrix` without checking that the matrix is definite-positive.","sig":null,"attributes":[{"value":"/ Computes the Cholesky decomposition of `matrix` without checking that the matrix is definite-positive.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049991,"byte_end":1050097,"line_start":45,"line_end":45,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1050102,"byte_end":1050105,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If the input matrix is not definite-positive, the decomposition may contain trash values (Inf, NaN, etc.)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1050110,"byte_end":1050219,"line_start":47,"line_end":47,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":7206},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051285,"byte_end":1051291,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Cholesky<N, D>>::unpack","value":"pub fn unpack(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n upper-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051135,"byte_end":1051224,"line_start":77,"line_end":77,"column_start":5,"column_end":94}},{"value":"/ upper-triangular part filled with zeros.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051229,"byte_end":1051273,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7207},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051679,"byte_end":1051691,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"unpack_dirty","qualname":"<Cholesky<N, D>>::unpack_dirty","value":"pub fn unpack_dirty(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051403,"byte_end":1051495,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051500,"byte_end":1051537,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051542,"byte_end":1051545,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The values of the strict upper-triangular part are garbage and should be ignored by further","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051550,"byte_end":1051645,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ computations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051650,"byte_end":1051667,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7208},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051896,"byte_end":1051897,"line_start":95,"line_end":95,"column_start":12,"column_end":13},"name":"l","qualname":"<Cholesky<N, D>>::l","value":"pub fn l(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n uppen-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051746,"byte_end":1051835,"line_start":93,"line_end":93,"column_start":5,"column_end":94}},{"value":"/ uppen-triangular part filled with zeros.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051840,"byte_end":1051884,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7209},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052296,"byte_end":1052303,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"l_dirty","qualname":"<Cholesky<N, D>>::l_dirty","value":"pub fn l_dirty(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1051970,"byte_end":1052062,"line_start":99,"line_end":99,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052067,"byte_end":1052104,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052109,"byte_end":1052112,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an allocation-less version of `self.l()`. The values of the strict upper-triangular","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052117,"byte_end":1052212,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ part are garbage and should be ignored by further computations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052217,"byte_end":1052284,"line_start":103,"line_end":103,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7210},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052513,"byte_end":1052522,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<Cholesky<N, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052361,"byte_end":1052456,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052461,"byte_end":1052464,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The result is stored on `b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052469,"byte_end":1052501,"line_start":110,"line_end":110,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7214},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052948,"byte_end":1052953,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"solve","qualname":"<Cholesky<N, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and\n `x` the unknown.\n","sig":null,"attributes":[{"value":"/ Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052816,"byte_end":1052911,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ `x` the unknown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1052916,"byte_end":1052936,"line_start":121,"line_end":121,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":7218},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053337,"byte_end":1053344,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Cholesky<N, D>>::inverse","value":"pub fn inverse(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053275,"byte_end":1053325,"line_start":133,"line_end":133,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7222},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053885,"byte_end":1053888,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Cholesky<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of `matrix`.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of `matrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053637,"byte_end":1053700,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053705,"byte_end":1053708,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053713,"byte_end":1053805,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053810,"byte_end":1053873,"line_start":150,"line_end":150,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7223},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055328,"byte_end":1055343,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"rank_one_update","qualname":"<Cholesky<N, D>>::rank_one_update","value":"pub fn rank_one_update<R2: Dim,\n                       S2>(&mut Self, &Vector<N, R2, S2>, N::RealField) where\nS2: Storage<N, R2, U1>, DefaultAllocator: Allocator<N, R2, U1>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,\n performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.\n","sig":null,"attributes":[{"value":"/ Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055100,"byte_end":1055188,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"/ performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055193,"byte_end":1055302,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055307,"byte_end":1055316,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7226},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055871,"byte_end":1055884,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Cholesky<N, D>>::insert_column","value":"pub fn insert_column<R2, S2>(&Self, usize, Vector<N, R2, S2>)\n-> Cholesky<N, DimSum<D, U1>> where D: DimAdd<U1>, R2: Dim,\nS2: Storage<N, R2, U1>,\nDefaultAllocator: Allocator<N, DimSum<D, U1>, DimSum<D, U1>> +\nAllocator<N, R2>, ShapeConstraint: SameNumberOfRows<R2, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.\n Since the matrix is square, an identical row will be added in the `j`th row.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055647,"byte_end":1055774,"line_start":200,"line_end":200,"column_start":5,"column_end":132}},{"value":"/ Since the matrix is square, an identical row will be added in the `j`th row.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1055779,"byte_end":1055859,"line_start":201,"line_end":201,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":7229},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1058943,"byte_end":1058956,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Cholesky<N, D>>::remove_column","value":"pub fn remove_column(&Self, usize) -> Cholesky<N, DimDiff<D, U1>> where\nD: DimSub<U1>,\nDefaultAllocator: Allocator<N, DimDiff<D, U1>, DimDiff<D, U1>> +\nAllocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.\n Since the matrix is square, the `j`th row will also be removed.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1058741,"byte_end":1058859,"line_start":278,"line_end":278,"column_start":5,"column_end":123}},{"value":"/ Since the matrix is square, the `j`th row will also be removed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1058864,"byte_end":1058931,"line_start":279,"line_end":279,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7239},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1063026,"byte_end":1063034,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<SquareMatrix<N, D, S>>::cholesky","value":"pub fn cholesky(Self) -> Option<Cholesky<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of this matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1062775,"byte_end":1062841,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1062846,"byte_end":1062849,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1062854,"byte_end":1062946,"line_start":373,"line_end":373,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1062951,"byte_end":1063014,"line_start":374,"line_end":374,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7261},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063699,"byte_end":1063712,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"convolve_full","qualname":"<Vector<N, D1, S1>>::convolve_full","value":"pub fn convolve_full<D2, S2>(&Self, Vector<N, D2, S2>)\n-> VectorN<N, DimDiff<DimSum<D1, D2>, U1>> where D1: DimAdd<D2>,\nD2: DimAdd<D1, Output = DimSum<D1, D2>>, DimSum<D1, D2>: DimSub<U1>,\nS2: Storage<N, D2>,\nDefaultAllocator: Allocator<N, DimDiff<DimSum<D1, D2>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063448,"byte_end":1063510,"line_start":10,"line_end":10,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063515,"byte_end":1063518,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063523,"byte_end":1063538,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063543,"byte_end":1063546,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063551,"byte_end":1063590,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063595,"byte_end":1063598,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063603,"byte_end":1063615,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `vector.len() >= kernel.len() > 0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063620,"byte_end":1063679,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063684,"byte_end":1063687,"line_start":18,"line_end":18,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7264},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065250,"byte_end":1065264,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"convolve_valid","qualname":"<Vector<N, D1, S1>>::convolve_valid","value":"pub fn convolve_valid<D2, S2>(&Self, Vector<N, D2, S2>)\n-> VectorN<N, DimDiff<DimSum<D1, U1>, D2>> where D1: DimAdd<U1>, D2: Dim,\nDimSum<D1, U1>: DimSub<D2>, S2: Storage<N, D2>,\nDefaultAllocator: Allocator<N, DimDiff<DimSum<D1, U1>, D2>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1064892,"byte_end":1064954,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1064959,"byte_end":1064962,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The output convolution consists only of those elements that do not rely on the zero-padding.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1064967,"byte_end":1065063,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065068,"byte_end":1065083,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065088,"byte_end":1065091,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065096,"byte_end":1065135,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065140,"byte_end":1065143,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065148,"byte_end":1065151,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065156,"byte_end":1065168,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065173,"byte_end":1065230,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1065235,"byte_end":1065238,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7267},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066464,"byte_end":1066477,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"convolve_same","qualname":"<Vector<N, D1, S1>>::convolve_same","value":"pub fn convolve_same<D2, S2>(&Self, Vector<N, D2, S2>) -> VectorN<N, D1> where\nD2: Dim, S2: Storage<N, D2>, DefaultAllocator: Allocator<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066116,"byte_end":1066178,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066183,"byte_end":1066186,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The output convolution is the same size as vector, centered with respect to the ‘full’ output.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066191,"byte_end":1066293,"line_start":98,"line_end":98,"column_start":5,"column_end":103}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066298,"byte_end":1066313,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066318,"byte_end":1066321,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066326,"byte_end":1066365,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066370,"byte_end":1066373,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066378,"byte_end":1066390,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1066395,"byte_end":1066452,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7283},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067744,"byte_end":1067755,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"determinant","qualname":"<SquareMatrix<N, D, S>>::determinant","value":"pub fn determinant(&Self) -> N where DefaultAllocator: Allocator<N, D, D> +\nAllocator<(usize, usize), D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix determinant.","sig":null,"attributes":[{"value":"/ Computes the matrix determinant.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067592,"byte_end":1067628,"line_start":11,"line_end":11,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067633,"byte_end":1067636,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If the matrix has a dimension larger than 3, an LU decomposition is used.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067641,"byte_end":1067718,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067723,"byte_end":1067732,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7365},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/exp.rs","byte_start":1081941,"byte_end":1081944,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"exp","qualname":"<MatrixN<N, D>>::exp","value":"pub fn exp(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes exponential of this matrix\n","sig":null,"attributes":[{"value":"/ Computes exponential of this matrix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/exp.rs","byte_start":1081890,"byte_end":1081929,"line_start":437,"line_end":437,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":20882},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085031,"byte_end":1085040,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"FullPivLU","qualname":"::linalg::full_piv_lu::FullPivLU","value":"FullPivLU {  }","parent":null,"children":[{"krate":0,"index":20886},{"krate":0,"index":20887},{"krate":0,"index":20888}],"decl_id":null,"docs":" LU decomposition with full row and column pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with full row and column pivoting.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1084275,"byte_end":1084330,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7395},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085875,"byte_end":1085878,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<FullPivLU<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085710,"byte_end":1085775,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085780,"byte_end":1085783,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085788,"byte_end":1085863,"line_start":54,"line_end":54,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7396},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087115,"byte_end":1087126,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<FullPivLU<N, R, C>>::lu_internal","value":"pub fn lu_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7397},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087266,"byte_end":1087267,"line_start":99,"line_end":99,"column_start":12,"column_end":13},"name":"l","qualname":"<FullPivLU<N, R, C>>::l","value":"pub fn l(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087186,"byte_end":1087240,"line_start":97,"line_end":97,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087245,"byte_end":1087254,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7398},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087699,"byte_end":1087700,"line_start":112,"line_end":112,"column_start":12,"column_end":13},"name":"u","qualname":"<FullPivLU<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087619,"byte_end":1087673,"line_start":110,"line_end":110,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087678,"byte_end":1087687,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7399},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088023,"byte_end":1088024,"line_start":122,"line_end":122,"column_start":12,"column_end":13},"name":"p","qualname":"<FullPivLU<N, R, C>>::p","value":"pub fn p(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1087950,"byte_end":1087997,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088002,"byte_end":1088011,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7400},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088179,"byte_end":1088180,"line_start":128,"line_end":128,"column_start":12,"column_end":13},"name":"q","qualname":"<FullPivLU<N, R, C>>::q","value":"pub fn q(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The column permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The column permutations of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088103,"byte_end":1088153,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088158,"byte_end":1088167,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7401},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088380,"byte_end":1088386,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"unpack","qualname":"<FullPivLU<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>, PermutationSequence<DimMinimum<R, C>>)\nwhere DefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.\n","sig":null,"attributes":[{"value":"/ The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088259,"byte_end":1088354,"line_start":132,"line_end":132,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088359,"byte_end":1088368,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7405},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089214,"byte_end":1089219,"line_start":162,"line_end":162,"column_start":12,"column_end":17},"name":"solve","qualname":"<FullPivLU<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089040,"byte_end":1089127,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089132,"byte_end":1089135,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089140,"byte_end":1089202,"line_start":161,"line_end":161,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7409},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089869,"byte_end":1089878,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<FullPivLU<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089630,"byte_end":1089717,"line_start":179,"line_end":179,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089722,"byte_end":1089725,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089730,"byte_end":1089820,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1089825,"byte_end":1089857,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7413},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1090777,"byte_end":1090788,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<FullPivLU<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1090640,"byte_end":1090690,"line_start":210,"line_end":210,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1090695,"byte_end":1090698,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1090703,"byte_end":1090765,"line_start":212,"line_end":212,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7414},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1091267,"byte_end":1091280,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<FullPivLU<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1091202,"byte_end":1091255,"line_start":229,"line_end":229,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7415},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1091601,"byte_end":1091612,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"determinant","qualname":"<FullPivLU<N, D, D>>::determinant","value":"pub fn determinant(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1091535,"byte_end":1091589,"line_start":240,"line_end":240,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7421},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1092482,"byte_end":1092493,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"full_piv_lu","qualname":"<Matrix<N, R, C, S>>::full_piv_lu","value":"pub fn full_piv_lu(Self) -> FullPivLU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1092317,"byte_end":1092382,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1092387,"byte_end":1092390,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1092395,"byte_end":1092470,"line_start":267,"line_end":267,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":7422},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"givens","qualname":"::linalg::givens","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":7427},{"krate":0,"index":7428},{"krate":0,"index":7429},{"krate":0,"index":24448},{"krate":0,"index":7430},{"krate":0,"index":7431},{"krate":0,"index":7432},{"krate":0,"index":24452},{"krate":0,"index":7433},{"krate":0,"index":7434},{"krate":0,"index":7435},{"krate":0,"index":7436},{"krate":0,"index":7437},{"krate":0,"index":7438},{"krate":0,"index":20899},{"krate":0,"index":20908},{"krate":0,"index":20905},{"krate":0,"index":20903},{"krate":0,"index":7439}],"decl_id":null,"docs":" Construction of givens rotations.\n","sig":null,"attributes":[{"value":"/ Construction of givens rotations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1092575,"byte_end":1092612,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":20899},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1092913,"byte_end":1092927,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"GivensRotation","qualname":"::linalg::givens::GivensRotation","value":"GivensRotation {  }","parent":null,"children":[{"krate":0,"index":20901},{"krate":0,"index":20902}],"decl_id":null,"docs":" A Givens rotation.\n","sig":null,"attributes":[{"value":"/ A Givens rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1092849,"byte_end":1092871,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7441},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093115,"byte_end":1093123,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"identity","qualname":"<GivensRotation<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The Givents rotation that does nothing.\n","sig":null,"attributes":[{"value":"/ The Givents rotation that does nothing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093060,"byte_end":1093103,"line_start":20,"line_end":20,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7442},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093432,"byte_end":1093445,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<GivensRotation<N>>::new_unchecked","value":"pub fn new_unchecked(N::RealField, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its components.","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093234,"byte_end":1093288,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093293,"byte_end":1093296,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The components are copies as-is. It is not checked whether they describe","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093301,"byte_end":1093377,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ an actually valid Givens rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093382,"byte_end":1093420,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7443},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093608,"byte_end":1093611,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<GivensRotation<N>>::new","value":"pub fn new(N, N) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its non-normalized cosine an sine components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093512,"byte_end":1093596,"line_start":36,"line_end":36,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7445},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093868,"byte_end":1093875,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"try_new","qualname":"<GivensRotation<N>>::try_new","value":"pub fn try_new(N, N, N::RealField) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation form its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation form its non-normalized cosine an sine components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093772,"byte_end":1093856,"line_start":42,"line_end":42,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7446},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1094574,"byte_end":1094582,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"cancel_y","qualname":"<GivensRotation<N>>::cancel_y","value":"pub fn cancel_y<S: Storage<N, U2>>(&Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `y` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `y` component of `R * v` is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1094262,"byte_end":1094348,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1094353,"byte_end":1094356,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.y == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1094361,"byte_end":1094459,"line_start":59,"line_end":59,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ |v|, 0.0 ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1094464,"byte_end":1094562,"line_start":60,"line_end":60,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7448},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095320,"byte_end":1095328,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"cancel_x","qualname":"<GivensRotation<N>>::cancel_x","value":"pub fn cancel_x<S: Storage<N, U2>>(&Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `x` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `x` component of `R * v` is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095008,"byte_end":1095094,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095099,"byte_end":1095102,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.x == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095107,"byte_end":1095205,"line_start":76,"line_end":76,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ 0.0, |v| ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095210,"byte_end":1095308,"line_start":77,"line_end":77,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7450},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095815,"byte_end":1095816,"line_start":92,"line_end":92,"column_start":12,"column_end":13},"name":"c","qualname":"<GivensRotation<N>>::c","value":"pub fn c(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The cos part of this roration.\n","sig":null,"attributes":[{"value":"/ The cos part of this roration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095769,"byte_end":1095803,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7451},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095914,"byte_end":1095915,"line_start":97,"line_end":97,"column_start":12,"column_end":13},"name":"s","qualname":"<GivensRotation<N>>::s","value":"pub fn s(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sin part of this roration.\n","sig":null,"attributes":[{"value":"/ The sin part of this roration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095868,"byte_end":1095902,"line_start":96,"line_end":96,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7452},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1096008,"byte_end":1096015,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"inverse","qualname":"<GivensRotation<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The inverse of this givens rotation.\n","sig":null,"attributes":[{"value":"/ The inverse of this givens rotation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1095956,"byte_end":1095996,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":7453},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1096188,"byte_end":1096194,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"rotate","qualname":"<GivensRotation<N>>::rotate","value":"pub fn rotate<R2: Dim, C2: Dim,\n              S2: StorageMut<N, R2, C2>>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere ShapeConstraint: DimEq<R2, U2>","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `rhs = self * rhs` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `rhs = self * rhs` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1096116,"byte_end":1096176,"line_start":109,"line_end":109,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7457},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1096974,"byte_end":1096985,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"rotate_rows","qualname":"<GivensRotation<N>>::rotate_rows","value":"pub fn rotate_rows<R2: Dim, C2: Dim,\n                   S2: StorageMut<N, R2,\n                                  C2>>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere ShapeConstraint: DimEq<C2, U2>","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `lhs = lhs * self` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `lhs = lhs * self` in-place.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1096902,"byte_end":1096962,"line_start":135,"line_end":135,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":20911},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1098788,"byte_end":1098798,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"Hessenberg","qualname":"::linalg::hessenberg::Hessenberg","value":"Hessenberg {  }","parent":null,"children":[{"krate":0,"index":20914},{"krate":0,"index":20915}],"decl_id":null,"docs":" Hessenberg decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Hessenberg decomposition of a general matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1098098,"byte_end":1098147,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7482},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099432,"byte_end":1099435,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Hessenberg<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099348,"byte_end":1099420,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7483},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099836,"byte_end":1099854,"line_start":59,"line_end":59,"column_start":12,"column_end":30},"name":"new_with_workspace","qualname":"<Hessenberg<N, D>>::new_with_workspace","value":"pub fn new_with_workspace(MatrixN<N, D>, &mut VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099624,"byte_end":1099696,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099701,"byte_end":1099704,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The workspace containing `D` elements must be provided but its content does not have to be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099709,"byte_end":1099803,"line_start":57,"line_end":57,"column_start":5,"column_end":99}},{"value":"/ initialized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099808,"byte_end":1099824,"line_start":58,"line_end":58,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":7484},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1100885,"byte_end":1100891,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Hessenberg<N, D>>::unpack","value":"pub fn unpack(Self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the\n hessenberg matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1100745,"byte_end":1100832,"line_start":90,"line_end":90,"column_start":5,"column_end":92}},{"value":"/ hessenberg matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1100837,"byte_end":1100859,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1100864,"byte_end":1100873,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7485},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101099,"byte_end":1101107,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"unpack_h","qualname":"<Hessenberg<N, D>>::unpack_h","value":"pub fn unpack_h(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101001,"byte_end":1101073,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101078,"byte_end":1101087,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7487},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101648,"byte_end":1101649,"line_start":115,"line_end":115,"column_start":12,"column_end":13},"name":"h","qualname":"<Hessenberg<N, D>>::h","value":"pub fn h(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101462,"byte_end":1101534,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101539,"byte_end":1101542,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This is less efficient than `.unpack_h()` as it allocates a new matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101547,"byte_end":1101622,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101627,"byte_end":1101636,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7489},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1102038,"byte_end":1102039,"line_start":125,"line_end":125,"column_start":12,"column_end":13},"name":"q","qualname":"<Hessenberg<N, D>>::q","value":"pub fn q(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1101965,"byte_end":1102026,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7490},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1102172,"byte_end":1102185,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"hess_internal","qualname":"<Hessenberg<N, D>>::hess_internal","value":"pub fn hess_internal(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7495},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1102523,"byte_end":1102533,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"hessenberg","qualname":"<SquareMatrix<N, D, S>>::hessenberg","value":"pub fn hessenberg(Self) -> Hessenberg<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition of this matrix using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition of this matrix using householder reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1102424,"byte_end":1102511,"line_start":139,"line_end":139,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":7496},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"householder","qualname":"::linalg::householder","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","parent":null,"children":[{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":24488},{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7502},{"krate":0,"index":7503},{"krate":0,"index":7504},{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":7510},{"krate":0,"index":7511},{"krate":0,"index":7512},{"krate":0,"index":7516},{"krate":0,"index":7520},{"krate":0,"index":7524}],"decl_id":null,"docs":" Construction of householder elementary reflections.\n","sig":null,"attributes":[{"value":"/ Construction of householder elementary reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1102614,"byte_end":1102669,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":7512},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1103273,"byte_end":1103292,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"reflection_axis_mut","qualname":"::linalg::householder::reflection_axis_mut","value":"pub fn reflection_axis_mut<N: ComplexField, D: Dim,\n                           S: StorageMut<N, D>>(&mut Vector<N, D, S>)\n-> (N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Replaces `column` by the axis of the householder reflection that transforms `column` into\n `(+/-|column|, 0, ..., 0)`.","sig":null,"attributes":[{"value":"/ Replaces `column` by the axis of the householder reflection that transforms `column` into","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1102936,"byte_end":1103029,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ `(+/-|column|, 0, ..., 0)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1103030,"byte_end":1103061,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1103062,"byte_end":1103065,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The unit-length axis is output to `column`. Returns what would be the first component of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1103066,"byte_end":1103158,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ `column` after reflection and `false` if no reflection was necessary.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1103159,"byte_end":1103232,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1103248,"byte_end":1103265,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":7516},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1104174,"byte_end":1104196,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"clear_column_unchecked","qualname":"::linalg::householder::clear_column_unchecked","value":"pub fn clear_column_unchecked<N: ComplexField, R: Dim,\n                              C: Dim>(&mut MatrixMN<N, R, C>, &mut N, usize,\n                                      usize, Option<&mut VectorN<N, R>>) where\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th\n subdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1104025,"byte_end":1104126,"line_start":44,"line_end":44,"column_start":1,"column_end":102}},{"value":"/ subdiagonal element.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1104127,"byte_end":1104151,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":7520},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1105190,"byte_end":1105209,"line_start":75,"line_end":75,"column_start":8,"column_end":27},"name":"clear_row_unchecked","qualname":"::linalg::householder::clear_row_unchecked","value":"pub fn clear_row_unchecked<N: ComplexField, R: Dim,\n                           C: Dim>(&mut MatrixMN<N, R, C>, &mut N,\n                                   &mut VectorN<N, C>, &mut VectorN<N, R>,\n                                   usize, usize) where\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R> + Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th\n superdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1105042,"byte_end":1105140,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ superdiagonal element.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1105141,"byte_end":1105167,"line_start":73,"line_end":73,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":7524},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1106538,"byte_end":1106548,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"assemble_q","qualname":"::linalg::householder::assemble_q","value":"pub fn assemble_q<N: ComplexField, D: Dim>(&MatrixN<N, D>, &[N])\n-> MatrixN<N, D> where DefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal transformation described by the elementary reflector axii stored on\n the lower-diagonal element of the given matrix.\n matrices.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal transformation described by the elementary reflector axii stored on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1106354,"byte_end":1106449,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ the lower-diagonal element of the given matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1106450,"byte_end":1106501,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ matrices.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/householder.rs","byte_start":1106502,"byte_end":1106515,"line_start":109,"line_end":109,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7543},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107683,"byte_end":1107694,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<SquareMatrix<N, D, S>>::try_inverse","value":"pub fn try_inverse(Self) -> Option<MatrixN<N, D>> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107563,"byte_end":1107598,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107603,"byte_end":1107612,"line_start":12,"line_end":12,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107617,"byte_end":1107671,"line_start":13,"line_end":13,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7548},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1108160,"byte_end":1108175,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<SquareMatrix<N, D, S>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if\n inversion fails.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1108018,"byte_end":1108109,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ inversion fails.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1108114,"byte_end":1108134,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1108139,"byte_end":1108148,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1116451,"byte_end":1116453,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"LU","qualname":"::linalg::lu::LU","value":"LU {  }","parent":null,"children":[{"krate":0,"index":20928},{"krate":0,"index":20929}],"decl_id":null,"docs":" LU decomposition with partial (row) pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with partial (row) pivoting.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1115701,"byte_end":1115750,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7582},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1117090,"byte_end":1117103,"line_start":50,"line_end":50,"column_start":8,"column_end":21},"name":"try_invert_to","qualname":"::linalg::lu::try_invert_to","value":"pub fn try_invert_to<N: ComplexField, D: Dim,\n                     S>(MatrixN<N, D>, &mut Matrix<N, D, D, S>) -> bool where\nS: StorageMut<N, D, D>, DefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","sig":null,"attributes":[{"value":"/ Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1116907,"byte_end":1116987,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1116988,"byte_end":1116991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ If `matrix` is not invertible, `false` is returned and `out` may contain invalid data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1116992,"byte_end":1117082,"line_start":49,"line_end":49,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":7590},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1118257,"byte_end":1118260,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<LU<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1118171,"byte_end":1118245,"line_start":91,"line_end":91,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7591},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1119210,"byte_end":1119221,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<LU<N, R, C>>::lu_internal","value":"pub fn lu_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7592},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1119361,"byte_end":1119362,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"l","qualname":"<LU<N, R, C>>::l","value":"pub fn l(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1119281,"byte_end":1119335,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1119340,"byte_end":1119349,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7594},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1120320,"byte_end":1120328,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"l_unpack","qualname":"<LU<N, R, C>>::l_unpack","value":"pub fn l_unpack(Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Reallocator<N, R, C, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1120240,"byte_end":1120294,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1120299,"byte_end":1120308,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7595},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1120768,"byte_end":1120769,"line_start":173,"line_end":173,"column_start":12,"column_end":13},"name":"u","qualname":"<LU<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1120688,"byte_end":1120742,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1120747,"byte_end":1120756,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7596},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121092,"byte_end":1121093,"line_start":183,"line_end":183,"column_start":12,"column_end":13},"name":"p","qualname":"<LU<N, R, C>>::p","value":"pub fn p(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121019,"byte_end":1121066,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121071,"byte_end":1121080,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7597},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121286,"byte_end":1121292,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"unpack","qualname":"<LU<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>) where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>, C> + Reallocator<N, R, C, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.\n","sig":null,"attributes":[{"value":"/ The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121172,"byte_end":1121260,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121265,"byte_end":1121274,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7601},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122087,"byte_end":1122092,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"solve","qualname":"<LU<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121928,"byte_end":1122015,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122020,"byte_end":1122023,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122028,"byte_end":1122075,"line_start":215,"line_end":215,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7605},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122742,"byte_end":1122751,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<LU<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122503,"byte_end":1122590,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122595,"byte_end":1122598,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122603,"byte_end":1122693,"line_start":235,"line_end":235,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1122698,"byte_end":1122730,"line_start":236,"line_end":236,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123467,"byte_end":1123478,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<LU<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123341,"byte_end":1123391,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123396,"byte_end":1123399,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the matrix is not invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123404,"byte_end":1123455,"line_start":259,"line_end":259,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7610},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1124115,"byte_end":1124129,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"try_inverse_to","qualname":"<LU<N, D, D>>::try_inverse_to","value":"pub fn try_inverse_to<S2: StorageMut<N, D,\n                                     D>>(&Self, &mut Matrix<N, D, D, S2>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix and outputs the result to `out`.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix and outputs the result to `out`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123889,"byte_end":1123971,"line_start":275,"line_end":275,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123976,"byte_end":1123979,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and `out` may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1123984,"byte_end":1124069,"line_start":277,"line_end":277,"column_start":5,"column_end":90}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1124074,"byte_end":1124103,"line_start":278,"line_end":278,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7612},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1124607,"byte_end":1124618,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"determinant","qualname":"<LU<N, D, D>>::determinant","value":"pub fn determinant(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1124541,"byte_end":1124595,"line_start":293,"line_end":293,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7613},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1125060,"byte_end":1125073,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<LU<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1124995,"byte_end":1125048,"line_start":309,"line_end":309,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":7614},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1125561,"byte_end":1125571,"line_start":329,"line_end":329,"column_start":8,"column_end":18},"name":"gauss_step","qualname":"::linalg::lu::gauss_step","value":"pub fn gauss_step<N, R: Dim, C: Dim, S>(&mut Matrix<N, R, C, S>, N, usize)\nwhere N: Scalar + Field, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal\n element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1125401,"byte_end":1125499,"line_start":327,"line_end":327,"column_start":1,"column_end":99}},{"value":"/ element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1125500,"byte_end":1125553,"line_start":328,"line_end":328,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1126374,"byte_end":1126389,"line_start":354,"line_end":354,"column_start":8,"column_end":23},"name":"gauss_step_swap","qualname":"::linalg::lu::gauss_step_swap","value":"pub fn gauss_step_swap<N, R: Dim, C: Dim,\n                       S>(&mut Matrix<N, R, C, S>, N, usize, usize) where\nN: Scalar + Field, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th\n row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1126172,"byte_end":1126271,"line_start":352,"line_end":352,"column_start":1,"column_end":100}},{"value":"/ row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1126272,"byte_end":1126366,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":7629},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1127401,"byte_end":1127403,"line_start":388,"line_end":388,"column_start":12,"column_end":14},"name":"lu","qualname":"<Matrix<N, R, C, S>>::lu","value":"pub fn lu(Self) -> LU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1127315,"byte_end":1127389,"line_start":387,"line_end":387,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":20940},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128352,"byte_end":1128371,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"PermutationSequence","qualname":"::linalg::permutation_sequence::PermutationSequence","value":"PermutationSequence {  }","parent":null,"children":[{"krate":0,"index":20942},{"krate":0,"index":20943}],"decl_id":null,"docs":" A sequence of row or column permutations.\n","sig":null,"attributes":[{"value":"/ A sequence of row or column permutations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1127839,"byte_end":1127884,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7649},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128850,"byte_end":1128858,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<D>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new statically-allocated sequence of `D` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new statically-allocated sequence of `D` identity permutations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128747,"byte_end":1128824,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128829,"byte_end":1128838,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7651},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129178,"byte_end":1129186,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<Dynamic>>::identity","value":"pub fn identity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamically-allocated sequence of `n` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamically-allocated sequence of `n` identity permutations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129074,"byte_end":1129152,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129157,"byte_end":1129166,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7654},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129444,"byte_end":1129460,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<PermutationSequence<D>>::identity_generic","value":"pub fn identity_generic(D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence of D identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new sequence of D identity permutations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129364,"byte_end":1129418,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129423,"byte_end":1129432,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7655},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129790,"byte_end":1129808,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"append_permutation","qualname":"<PermutationSequence<D>>::append_permutation","value":"pub fn append_permutation(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this\n sequence of permutations.\n","sig":null,"attributes":[{"value":"/ Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129641,"byte_end":1129730,"line_start":80,"line_end":80,"column_start":5,"column_end":94}},{"value":"/ sequence of permutations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129735,"byte_end":1129764,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129769,"byte_end":1129778,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7656},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130183,"byte_end":1130195,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"permute_rows","qualname":"<PermutationSequence<D>>::permute_rows","value":"pub fn permute_rows<N: Scalar, R2: Dim, C2: Dim,\n                    S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the rows of `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130094,"byte_end":1130157,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130162,"byte_end":1130171,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7661},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130536,"byte_end":1130552,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"inv_permute_rows","qualname":"<PermutationSequence<D>>::inv_permute_rows","value":"pub fn inv_permute_rows<N: Scalar, R2: Dim, C2: Dim,\n                        S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the rows of `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130436,"byte_end":1130510,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130515,"byte_end":1130524,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7666},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130911,"byte_end":1130926,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"permute_columns","qualname":"<PermutationSequence<D>>::permute_columns","value":"pub fn permute_columns<N: Scalar, R2: Dim, C2: Dim,\n                       S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the columns of `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130819,"byte_end":1130885,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1130890,"byte_end":1130899,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7671},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131273,"byte_end":1131292,"line_start":130,"line_end":130,"column_start":12,"column_end":31},"name":"inv_permute_columns","qualname":"<PermutationSequence<D>>::inv_permute_columns","value":"pub fn inv_permute_columns<N: Scalar, R2: Dim, C2: Dim,\n                           S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the columns of `rhs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131170,"byte_end":1131247,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131252,"byte_end":1131261,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7676},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131662,"byte_end":1131665,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<PermutationSequence<D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of non-identity permutations applied by this sequence.\n","sig":null,"attributes":[{"value":"/ The number of non-identity permutations applied by this sequence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131581,"byte_end":1131650,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7677},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131806,"byte_end":1131817,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"determinant","qualname":"<PermutationSequence<D>>::determinant","value":"pub fn determinant<N: One + ClosedNeg>(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The determinant of the matrix corresponding to this permutation.\n","sig":null,"attributes":[{"value":"/ The determinant of the matrix corresponding to this permutation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131712,"byte_end":1131780,"line_start":147,"line_end":147,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1131785,"byte_end":1131794,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20950},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133136,"byte_end":1133138,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"QR","qualname":"::linalg::qr::QR","value":"QR {  }","parent":null,"children":[{"krate":0,"index":20954},{"krate":0,"index":20955}],"decl_id":null,"docs":" The QR decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ The QR decomposition of a general matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1132434,"byte_end":1132479,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7713},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133788,"byte_end":1133791,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<QR<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition using householder reflections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133712,"byte_end":1133776,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134414,"byte_end":1134415,"line_start":72,"line_end":72,"column_start":12,"column_end":13},"name":"r","qualname":"<QR<N, R, C>>::r","value":"pub fn r(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134316,"byte_end":1134388,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134393,"byte_end":1134402,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7716},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134946,"byte_end":1134954,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"unpack_r","qualname":"<QR<N, R, C>>::unpack_r","value":"pub fn unpack_r(Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Reallocator<N, R, C, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134779,"byte_end":1134851,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134856,"byte_end":1134859,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is usually faster than `r` but consumes `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134864,"byte_end":1134920,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1134925,"byte_end":1134934,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7718},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1135445,"byte_end":1135446,"line_start":98,"line_end":98,"column_start":12,"column_end":13},"name":"q","qualname":"<QR<N, R, C>>::q","value":"pub fn q(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1135372,"byte_end":1135433,"line_start":97,"line_end":97,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7719},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1136357,"byte_end":1136363,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"unpack","qualname":"<QR<N, R, C>>::unpack","value":"pub fn unpack(Self)\n-> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>) where\nDimMinimum<R, C>: DimMin<C, Output = DimMinimum<R, C>>,\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nReallocator<N, R, C, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its two matrix factors.\n","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its two matrix factors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1136286,"byte_end":1136345,"line_start":121,"line_end":121,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7720},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1136750,"byte_end":1136761,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"qr_internal","qualname":"<QR<N, R, C>>::qr_internal","value":"pub fn qr_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7721},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1136925,"byte_end":1136933,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"q_tr_mul","qualname":"<QR<N, R, C>>::q_tr_mul","value":"pub fn q_tr_mul<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1136821,"byte_end":1136913,"line_start":141,"line_end":141,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":7728},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1137767,"byte_end":1137772,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"solve","qualname":"<QR<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1137608,"byte_end":1137695,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1137700,"byte_end":1137703,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1137708,"byte_end":1137755,"line_start":165,"line_end":165,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7732},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1138419,"byte_end":1138428,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<QR<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1138184,"byte_end":1138271,"line_start":184,"line_end":184,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1138276,"byte_end":1138279,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1138284,"byte_end":1138373,"line_start":186,"line_end":186,"column_start":5,"column_end":94}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1138378,"byte_end":1138407,"line_start":187,"line_end":187,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7740},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1140017,"byte_end":1140028,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<QR<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1139880,"byte_end":1139930,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1139935,"byte_end":1139938,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1139943,"byte_end":1140005,"line_start":244,"line_end":244,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1140549,"byte_end":1140562,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<QR<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1140484,"byte_end":1140537,"line_start":262,"line_end":262,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7747},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1141570,"byte_end":1141572,"line_start":297,"line_end":297,"column_start":12,"column_end":14},"name":"qr","qualname":"<Matrix<N, R, C, S>>::qr","value":"pub fn qr(Self) -> QR<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1141509,"byte_end":1141558,"line_start":296,"line_end":296,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":20966},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1142758,"byte_end":1142763,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Schur","qualname":"::linalg::schur::Schur","value":"Schur {  }","parent":null,"children":[{"krate":0,"index":20969},{"krate":0,"index":20970}],"decl_id":null,"docs":" Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Schur decomposition of a square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1142213,"byte_end":1142256,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1142257,"byte_end":1142260,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If this is a real matrix, this will be a RealField Schur decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1142261,"byte_end":1142336,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7783},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143324,"byte_end":1143327,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Schur<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143256,"byte_end":1143312,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7784},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1144008,"byte_end":1144015,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Schur<N, D>>::try_new","value":"pub fn try_new(MatrixN<N, D>, N::RealField, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143437,"byte_end":1143504,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143509,"byte_end":1143512,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143517,"byte_end":1143599,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143604,"byte_end":1143633,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143638,"byte_end":1143641,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143646,"byte_end":1143661,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143666,"byte_end":1143669,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143674,"byte_end":1143752,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143757,"byte_end":1143849,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143854,"byte_end":1143946,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143951,"byte_end":1143996,"line_start":72,"line_end":72,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7790},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1153879,"byte_end":1153885,"line_start":373,"line_end":373,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Schur<N, D>>::unpack","value":"pub fn unpack(Self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the\n decomposed matrix equals `Q * T * Q.transpose()`.\n","sig":null,"attributes":[{"value":"/ Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1153718,"byte_end":1153809,"line_start":371,"line_end":371,"column_start":5,"column_end":96}},{"value":"/ decomposed matrix equals `Q * T * Q.transpose()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1153814,"byte_end":1153867,"line_start":372,"line_end":372,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7791},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1154098,"byte_end":1154109,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Schur<N, D>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real eigenvalues of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the real eigenvalues of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1153964,"byte_end":1154023,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1154028,"byte_end":1154031,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Return `None` if some eigenvalues are complex.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1154036,"byte_end":1154086,"line_start":379,"line_end":379,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7792},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1154444,"byte_end":1154463,"line_start":390,"line_end":390,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<Schur<N, D>>::complex_eigenvalues","value":"pub fn complex_eigenvalues(&Self) -> VectorN<NumComplex<N>, D> where\nN: RealField, DefaultAllocator: Allocator<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the complex eigenvalues of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1154370,"byte_end":1154432,"line_start":389,"line_end":389,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7807},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1157941,"byte_end":1157946,"line_start":500,"line_end":500,"column_start":12,"column_end":17},"name":"schur","qualname":"<SquareMatrix<N, D, S>>::schur","value":"pub fn schur(Self) -> Schur<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1157873,"byte_end":1157929,"line_start":499,"line_end":499,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7808},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158590,"byte_end":1158599,"line_start":515,"line_end":515,"column_start":12,"column_end":21},"name":"try_schur","qualname":"<SquareMatrix<N, D, S>>::try_schur","value":"pub fn try_schur(Self, N::RealField, usize) -> Option<Schur<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158019,"byte_end":1158086,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158091,"byte_end":1158094,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158099,"byte_end":1158181,"line_start":506,"line_end":506,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158186,"byte_end":1158215,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158220,"byte_end":1158223,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158228,"byte_end":1158243,"line_start":509,"line_end":509,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158248,"byte_end":1158251,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158256,"byte_end":1158334,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158339,"byte_end":1158431,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158436,"byte_end":1158528,"line_start":513,"line_end":513,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158533,"byte_end":1158578,"line_start":514,"line_end":514,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7809},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158793,"byte_end":1158804,"line_start":520,"line_end":520,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<SquareMatrix<N, D, S>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1158737,"byte_end":1158781,"line_start":519,"line_end":519,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7810},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1159987,"byte_end":1160006,"line_start":560,"line_end":560,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::complex_eigenvalues","value":"pub fn complex_eigenvalues(&Self) -> VectorN<NumComplex<N>, D> where\nN: RealField, DefaultAllocator: Allocator<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1159931,"byte_end":1159975,"line_start":559,"line_end":559,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7835},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161282,"byte_end":1161304,"line_start":14,"line_end":14,"column_start":12,"column_end":34},"name":"solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular","value":"pub fn solve_lower_triangular<R2: Dim, C2: Dim,\n                              S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161068,"byte_end":1161163,"line_start":11,"line_end":11,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161168,"byte_end":1161256,"line_start":12,"line_end":12,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161261,"byte_end":1161270,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7839},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161946,"byte_end":1161968,"line_start":34,"line_end":34,"column_start":12,"column_end":34},"name":"solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular","value":"pub fn solve_upper_triangular<R2: Dim, C2: Dim,\n                              S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161732,"byte_end":1161827,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161832,"byte_end":1161920,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161925,"byte_end":1161934,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7843},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1162578,"byte_end":1162604,"line_start":53,"line_end":53,"column_start":12,"column_end":38},"name":"solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_mut","value":"pub fn solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                  S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1162396,"byte_end":1162477,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1162482,"byte_end":1162566,"line_start":52,"line_end":52,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7850},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1164078,"byte_end":1164114,"line_start":104,"line_end":104,"column_start":12,"column_end":48},"name":"solve_lower_triangular_with_diag_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_mut","value":"pub fn solve_lower_triangular_with_diag_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>, N)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1163780,"byte_end":1163861,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1163866,"byte_end":1163961,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1163966,"byte_end":1164066,"line_start":103,"line_end":103,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":7854},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1164981,"byte_end":1165007,"line_start":135,"line_end":135,"column_start":12,"column_end":38},"name":"solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_mut","value":"pub fn solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                  S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1164799,"byte_end":1164880,"line_start":133,"line_end":133,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1164885,"byte_end":1164969,"line_start":134,"line_end":134,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7861},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1166415,"byte_end":1166440,"line_start":190,"line_end":190,"column_start":12,"column_end":37},"name":"tr_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular","value":"pub fn tr_solve_lower_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1166189,"byte_end":1166296,"line_start":187,"line_end":187,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1166301,"byte_end":1166389,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1166394,"byte_end":1166403,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7865},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1167097,"byte_end":1167122,"line_start":210,"line_end":210,"column_start":12,"column_end":37},"name":"tr_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular","value":"pub fn tr_solve_upper_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1166871,"byte_end":1166978,"line_start":207,"line_end":207,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1166983,"byte_end":1167071,"line_start":208,"line_end":208,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1167076,"byte_end":1167085,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7869},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1167747,"byte_end":1167776,"line_start":229,"line_end":229,"column_start":12,"column_end":41},"name":"tr_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_mut","value":"pub fn tr_solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1167553,"byte_end":1167646,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1167651,"byte_end":1167735,"line_start":228,"line_end":228,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7875},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1168469,"byte_end":1168498,"line_start":254,"line_end":254,"column_start":12,"column_end":41},"name":"tr_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_mut","value":"pub fn tr_solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1168275,"byte_end":1168368,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1168373,"byte_end":1168457,"line_start":253,"line_end":253,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7881},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169221,"byte_end":1169246,"line_start":280,"line_end":280,"column_start":12,"column_end":37},"name":"ad_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular","value":"pub fn ad_solve_lower_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1168997,"byte_end":1169102,"line_start":277,"line_end":277,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169107,"byte_end":1169195,"line_start":278,"line_end":278,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169200,"byte_end":1169209,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7885},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169901,"byte_end":1169926,"line_start":300,"line_end":300,"column_start":12,"column_end":37},"name":"ad_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular","value":"pub fn ad_solve_upper_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169677,"byte_end":1169782,"line_start":297,"line_end":297,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169787,"byte_end":1169875,"line_start":298,"line_end":298,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1169880,"byte_end":1169889,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7889},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1170549,"byte_end":1170578,"line_start":319,"line_end":319,"column_start":12,"column_end":41},"name":"ad_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_mut","value":"pub fn ad_solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1170357,"byte_end":1170448,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1170453,"byte_end":1170537,"line_start":318,"line_end":318,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7895},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1171282,"byte_end":1171311,"line_start":344,"line_end":344,"column_start":12,"column_end":41},"name":"ad_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_mut","value":"pub fn ad_solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1171090,"byte_end":1171181,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1171186,"byte_end":1171270,"line_start":343,"line_end":343,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7915},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1173958,"byte_end":1173990,"line_start":447,"line_end":447,"column_start":12,"column_end":44},"name":"solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_unchecked","value":"pub fn solve_lower_triangular_unchecked<R2: Dim, C2: Dim,\n                                        S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1173744,"byte_end":1173839,"line_start":444,"line_end":444,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1173844,"byte_end":1173932,"line_start":445,"line_end":445,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1173937,"byte_end":1173946,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7919},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1174576,"byte_end":1174608,"line_start":464,"line_end":464,"column_start":12,"column_end":44},"name":"solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_unchecked","value":"pub fn solve_upper_triangular_unchecked<R2: Dim, C2: Dim,\n                                        S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1174362,"byte_end":1174457,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1174462,"byte_end":1174550,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1174555,"byte_end":1174564,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1175162,"byte_end":1175198,"line_start":480,"line_end":480,"column_start":12,"column_end":48},"name":"solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_unchecked_mut","value":"pub fn solve_lower_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1174980,"byte_end":1175061,"line_start":478,"line_end":478,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1175066,"byte_end":1175150,"line_start":479,"line_end":479,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7930},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1176479,"byte_end":1176525,"line_start":517,"line_end":517,"column_start":12,"column_end":58},"name":"solve_lower_triangular_with_diag_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_unchecked_mut","value":"pub fn solve_lower_triangular_with_diag_unchecked_mut<R2: Dim, C2: Dim,\n                                                      S2>(&Self,\n                                                          &mut Matrix<N, R2,\n                                                                      C2, S2>,\n                                                          N) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1176181,"byte_end":1176262,"line_start":514,"line_end":514,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1176267,"byte_end":1176362,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1176367,"byte_end":1176467,"line_start":516,"line_end":516,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1177301,"byte_end":1177337,"line_start":541,"line_end":541,"column_start":12,"column_end":48},"name":"solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_unchecked_mut","value":"pub fn solve_upper_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1177119,"byte_end":1177200,"line_start":539,"line_end":539,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1177205,"byte_end":1177289,"line_start":540,"line_end":540,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7941},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1178551,"byte_end":1178586,"line_start":582,"line_end":582,"column_start":12,"column_end":47},"name":"tr_solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_unchecked","value":"pub fn tr_solve_lower_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1178325,"byte_end":1178432,"line_start":579,"line_end":579,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1178437,"byte_end":1178525,"line_start":580,"line_end":580,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1178530,"byte_end":1178539,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7945},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1179187,"byte_end":1179222,"line_start":599,"line_end":599,"column_start":12,"column_end":47},"name":"tr_solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_unchecked","value":"pub fn tr_solve_upper_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1178961,"byte_end":1179068,"line_start":596,"line_end":596,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1179073,"byte_end":1179161,"line_start":597,"line_end":597,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1179166,"byte_end":1179175,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7949},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1179791,"byte_end":1179830,"line_start":615,"line_end":615,"column_start":12,"column_end":51},"name":"tr_solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_unchecked_mut","value":"pub fn tr_solve_lower_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1179597,"byte_end":1179690,"line_start":613,"line_end":613,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1179695,"byte_end":1179779,"line_start":614,"line_end":614,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7955},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1180431,"byte_end":1180470,"line_start":633,"line_end":633,"column_start":12,"column_end":51},"name":"tr_solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_unchecked_mut","value":"pub fn tr_solve_upper_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1180237,"byte_end":1180330,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1180335,"byte_end":1180419,"line_start":632,"line_end":632,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7961},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1181101,"byte_end":1181136,"line_start":652,"line_end":652,"column_start":12,"column_end":47},"name":"ad_solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_unchecked","value":"pub fn ad_solve_lower_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1180877,"byte_end":1180982,"line_start":649,"line_end":649,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1180987,"byte_end":1181075,"line_start":650,"line_end":650,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1181080,"byte_end":1181089,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7965},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1181735,"byte_end":1181770,"line_start":669,"line_end":669,"column_start":12,"column_end":47},"name":"ad_solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_unchecked","value":"pub fn ad_solve_upper_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1181511,"byte_end":1181616,"line_start":666,"line_end":666,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1181621,"byte_end":1181709,"line_start":667,"line_end":667,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1181714,"byte_end":1181723,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7969},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1182337,"byte_end":1182376,"line_start":685,"line_end":685,"column_start":12,"column_end":51},"name":"ad_solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_unchecked_mut","value":"pub fn ad_solve_lower_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1182145,"byte_end":1182236,"line_start":683,"line_end":683,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1182241,"byte_end":1182325,"line_start":684,"line_end":684,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7975},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1182993,"byte_end":1183032,"line_start":703,"line_end":703,"column_start":12,"column_end":51},"name":"ad_solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_unchecked_mut","value":"pub fn ad_solve_upper_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1182801,"byte_end":1182892,"line_start":701,"line_end":701,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1182897,"byte_end":1182981,"line_start":702,"line_end":702,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":20979},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1186652,"byte_end":1186655,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"SVD","qualname":"::linalg::svd::SVD","value":"SVD { u, v_t, singular_values }","parent":null,"children":[{"krate":0,"index":20983},{"krate":0,"index":20984},{"krate":0,"index":20985}],"decl_id":null,"docs":" Singular Value Decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Singular Value Decomposition of a general matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1185563,"byte_end":1185616,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20983},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1186915,"byte_end":1186916,"line_start":50,"line_end":50,"column_start":9,"column_end":10},"name":"u","qualname":"::linalg::svd::SVD::u","value":"std::option::Option<base::matrix::Matrix<N, R, <R as base::dimension::DimMin<C>>::Output, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, R, <R as base::dimension::DimMin<C>>::Output>>::Buffer>>","parent":{"krate":0,"index":20979},"children":[],"decl_id":null,"docs":" The left-singular vectors `U` of this SVD.\n","sig":null,"attributes":[{"value":"/ The left-singular vectors `U` of this SVD.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1186860,"byte_end":1186906,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20984},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187022,"byte_end":1187025,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"v_t","qualname":"::linalg::svd::SVD::v_t","value":"std::option::Option<base::matrix::Matrix<N, <R as base::dimension::DimMin<C>>::Output, C, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, <R as base::dimension::DimMin<C>>::Output, C>>::Buffer>>","parent":{"krate":0,"index":20979},"children":[],"decl_id":null,"docs":" The right-singular vectors `V^t` of this SVD.\n","sig":null,"attributes":[{"value":"/ The right-singular vectors `V^t` of this SVD.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1186964,"byte_end":1187013,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20985},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187118,"byte_end":1187133,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"singular_values","qualname":"::linalg::svd::SVD::singular_values","value":"base::matrix::Matrix<<N as simba::scalar::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output>>::Buffer>","parent":{"krate":0,"index":20979},"children":[],"decl_id":null,"docs":" The singular values of this SVD.\n","sig":null,"attributes":[{"value":"/ The singular values of this SVD.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187073,"byte_end":1187109,"line_start":53,"line_end":53,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":8030},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188155,"byte_end":1188158,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<SVD<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>, bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition of `matrix` using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188064,"byte_end":1188143,"line_start":81,"line_end":81,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8031},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1189078,"byte_end":1189085,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SVD<N, R, C>>::try_new","value":"pub fn try_new(MatrixMN<N, R, C>, bool, bool, N::RealField, usize)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188418,"byte_end":1188508,"line_start":93,"line_end":93,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188513,"byte_end":1188516,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188521,"byte_end":1188536,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188541,"byte_end":1188544,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188549,"byte_end":1188641,"line_start":97,"line_end":97,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of right-singular vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188646,"byte_end":1188739,"line_start":98,"line_end":98,"column_start":5,"column_end":96}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188744,"byte_end":1188822,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188827,"byte_end":1188919,"line_start":100,"line_end":100,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1188924,"byte_end":1189016,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1189021,"byte_end":1189066,"line_start":102,"line_end":102,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8037},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1202907,"byte_end":1202911,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"rank","qualname":"<SVD<N, R, C>>::rank","value":"pub fn rank(&Self, N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the decomposed matrix, i.e., the number of singular values greater\n than `eps`.\n","sig":null,"attributes":[{"value":"/ Computes the rank of the decomposed matrix, i.e., the number of singular values greater","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1202784,"byte_end":1202875,"line_start":505,"line_end":505,"column_start":5,"column_end":96}},{"value":"/ than `eps`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1202880,"byte_end":1202895,"line_start":506,"line_end":506,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8039},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1203404,"byte_end":1203413,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SVD<N, R, C>>::recompose","value":"pub fn recompose(Self) -> Result<MatrixMN<N, R, C>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1203153,"byte_end":1203185,"line_start":515,"line_end":515,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1203190,"byte_end":1203193,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the singular values have been manually modified.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1203198,"byte_end":1203276,"line_start":517,"line_end":517,"column_start":5,"column_end":83}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not been","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1203281,"byte_end":1203353,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ computed at construction-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1203358,"byte_end":1203392,"line_start":519,"line_end":519,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":8040},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204294,"byte_end":1204308,"line_start":540,"line_end":540,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<SVD<N, R, C>>::pseudo_inverse","value":"pub fn pseudo_inverse(Self, N::RealField)\n-> Result<MatrixMN<N, C, R>, &'static str> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204032,"byte_end":1204089,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204094,"byte_end":1204097,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204102,"byte_end":1204166,"line_start":537,"line_end":537,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204171,"byte_end":1204238,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ been computed at construction-time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204243,"byte_end":1204282,"line_start":539,"line_end":539,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":8042},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1205332,"byte_end":1205337,"line_start":566,"line_end":566,"column_start":12,"column_end":17},"name":"solve","qualname":"<SVD<N, R, C>>::solve","value":"pub fn solve<R2: Dim, C2: Dim,\n             S2>(&Self, &Matrix<N, R2, C2, S2>, N::RealField)\n-> Result<MatrixMN<N, C, C2>, &'static str> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C, C2> + Allocator<N, DimMinimum<R, C>, C2>,\nShapeConstraint: SameNumberOfRows<R, R2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1204979,"byte_end":1205074,"line_start":561,"line_end":561,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1205079,"byte_end":1205082,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1205087,"byte_end":1205151,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the singular vectors `U` and `V` have not been computed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1205156,"byte_end":1205233,"line_start":564,"line_end":564,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":8051},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207378,"byte_end":1207381,"line_start":620,"line_end":620,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<N, R, C, S>>::svd","value":"pub fn svd(Self, bool, bool) -> SVD<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition using implicit shift.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207299,"byte_end":1207366,"line_start":619,"line_end":619,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8052},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208169,"byte_end":1208176,"line_start":634,"line_end":634,"column_start":12,"column_end":19},"name":"try_svd","qualname":"<Matrix<N, R, C, S>>::try_svd","value":"pub fn try_svd(Self, bool, bool, N::RealField, usize) -> Option<SVD<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207509,"byte_end":1207599,"line_start":624,"line_end":624,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207604,"byte_end":1207607,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207612,"byte_end":1207627,"line_start":626,"line_end":626,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207632,"byte_end":1207635,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207640,"byte_end":1207732,"line_start":628,"line_end":628,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of right-singular vectors.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207737,"byte_end":1207830,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207835,"byte_end":1207913,"line_start":630,"line_end":630,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1207918,"byte_end":1208010,"line_start":631,"line_end":631,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208015,"byte_end":1208107,"line_start":632,"line_end":632,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208112,"byte_end":1208157,"line_start":633,"line_end":633,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8053},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208476,"byte_end":1208491,"line_start":645,"line_end":645,"column_start":12,"column_end":27},"name":"singular_values","qualname":"<Matrix<N, R, C, S>>::singular_values","value":"pub fn singular_values(&Self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the singular values of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the singular values of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208416,"byte_end":1208464,"line_start":644,"line_end":644,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8054},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208746,"byte_end":1208750,"line_start":652,"line_end":652,"column_start":12,"column_end":16},"name":"rank","qualname":"<Matrix<N, R, C, S>>::rank","value":"pub fn rank(&Self, N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of this matrix.","sig":null,"attributes":[{"value":"/ Computes the rank of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208622,"byte_end":1208659,"line_start":649,"line_end":649,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208664,"byte_end":1208667,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208672,"byte_end":1208734,"line_start":651,"line_end":651,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":8055},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1209017,"byte_end":1209031,"line_start":660,"line_end":660,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<Matrix<N, R, C, S>>::pseudo_inverse","value":"pub fn pseudo_inverse(Self, N::RealField)\n-> Result<MatrixMN<N, C, R>, &'static str> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of this matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of this matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208883,"byte_end":1208930,"line_start":657,"line_end":657,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208935,"byte_end":1208938,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1208943,"byte_end":1209005,"line_start":659,"line_end":659,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":20996},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1211892,"byte_end":1211906,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"SymmetricEigen","qualname":"::linalg::symmetric_eigen::SymmetricEigen","value":"SymmetricEigen { eigenvectors, eigenvalues }","parent":null,"children":[{"krate":0,"index":20999},{"krate":0,"index":21000}],"decl_id":null,"docs":" Eigendecomposition of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Eigendecomposition of a symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1211214,"byte_end":1211259,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":20999},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212070,"byte_end":1212082,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"eigenvectors","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvectors","value":"base::matrix::Matrix<N, D, D, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D, D>>::Buffer>","parent":{"krate":0,"index":20996},"children":[],"decl_id":null,"docs":" The eigenvectors of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The eigenvectors of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212015,"byte_end":1212061,"line_start":37,"line_end":37,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":21000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212167,"byte_end":1212178,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"eigenvalues","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvalues","value":"base::matrix::Matrix<<N as simba::scalar::ComplexField>::RealField, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::ComplexField>::RealField, D>>::Buffer>","parent":{"krate":0,"index":20996},"children":[],"decl_id":null,"docs":" The unsorted eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The unsorted eigenvalues of the decomposed matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212104,"byte_end":1212158,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212713,"byte_end":1212716,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricEigen<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212546,"byte_end":1212612,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212617,"byte_end":1212620,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular parts (including its diagonal) of `m` is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212625,"byte_end":1212701,"line_start":58,"line_end":58,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":8086},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213541,"byte_end":1213548,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SymmetricEigen<N, D>>::try_new","value":"pub fn try_new(MatrixN<N, D>, N::RealField, usize) -> Option<Self> where\nD: DimSub<U1>, DefaultAllocator: Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212961,"byte_end":1213046,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213051,"byte_end":1213078,"line_start":68,"line_end":68,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213083,"byte_end":1213086,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including its diagonal) of `m` is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213091,"byte_end":1213166,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213171,"byte_end":1213174,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213179,"byte_end":1213194,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213199,"byte_end":1213202,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213207,"byte_end":1213285,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213290,"byte_end":1213382,"line_start":75,"line_end":75,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213387,"byte_end":1213479,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1213484,"byte_end":1213529,"line_start":77,"line_end":77,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8090},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219525,"byte_end":1219534,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricEigen<N, D>>::recompose","value":"pub fn recompose(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219394,"byte_end":1219426,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219431,"byte_end":1219434,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the eigenvalues have been manually modified.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219439,"byte_end":1219513,"line_start":270,"line_end":270,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":8091},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220030,"byte_end":1220045,"line_start":288,"line_end":288,"column_start":8,"column_end":23},"name":"wilkinson_shift","qualname":"::linalg::symmetric_eigen::wilkinson_shift","value":"pub fn wilkinson_shift<N: ComplexField>(N, N, N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing\n component `tnn`.","sig":null,"attributes":[{"value":"/ Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219823,"byte_end":1219913,"line_start":282,"line_end":282,"column_start":1,"column_end":91}},{"value":"/ component `tnn`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219914,"byte_end":1219934,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219935,"byte_end":1219938,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The inputs are interpreted as the 2x2 matrix:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219939,"byte_end":1219988,"line_start":285,"line_end":285,"column_start":1,"column_end":50}},{"value":"/     tmm  tmn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1219989,"byte_end":1220005,"line_start":286,"line_end":286,"column_start":1,"column_end":17}},{"value":"/     tmn  tnn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220006,"byte_end":1220022,"line_start":287,"line_end":287,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220858,"byte_end":1220873,"line_start":314,"line_end":314,"column_start":12,"column_end":27},"name":"symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigen","value":"pub fn symmetric_eigen(Self) -> SymmetricEigen<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of this symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220697,"byte_end":1220758,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220763,"byte_end":1220766,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220771,"byte_end":1220846,"line_start":313,"line_end":313,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8098},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221544,"byte_end":1221563,"line_start":329,"line_end":329,"column_start":12,"column_end":31},"name":"try_symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::try_symmetric_eigen","value":"pub fn try_symmetric_eigen(Self, N::RealField, usize)\n-> Option<SymmetricEigen<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220964,"byte_end":1221049,"line_start":318,"line_end":318,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221054,"byte_end":1221081,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221086,"byte_end":1221089,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221094,"byte_end":1221169,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221174,"byte_end":1221177,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221182,"byte_end":1221197,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221202,"byte_end":1221205,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221210,"byte_end":1221288,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221293,"byte_end":1221385,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221390,"byte_end":1221482,"line_start":327,"line_end":327,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221487,"byte_end":1221532,"line_start":328,"line_end":328,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8099},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221886,"byte_end":1221907,"line_start":340,"line_end":340,"column_start":12,"column_end":33},"name":"symmetric_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigenvalues","value":"pub fn symmetric_eigenvalues(&Self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221750,"byte_end":1221804,"line_start":337,"line_end":337,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221809,"byte_end":1221812,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part of the matrix is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1221817,"byte_end":1221874,"line_start":339,"line_end":339,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":21009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225258,"byte_end":1225278,"line_start":29,"line_end":29,"column_start":12,"column_end":32},"name":"SymmetricTridiagonal","qualname":"::linalg::symmetric_tridiagonal::SymmetricTridiagonal","value":"SymmetricTridiagonal {  }","parent":null,"children":[{"krate":0,"index":21012},{"krate":0,"index":21013}],"decl_id":null,"docs":" Tridiagonalization of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Tridiagonalization of a symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1224572,"byte_end":1224617,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":8121},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225998,"byte_end":1226001,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricTridiagonal<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of the symmetric matrix `m`.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of the symmetric matrix `m`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225834,"byte_end":1225898,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225903,"byte_end":1225906,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225911,"byte_end":1225986,"line_start":51,"line_end":51,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8122},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1227373,"byte_end":1227385,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"internal_tri","qualname":"<SymmetricTridiagonal<N, D>>::internal_tri","value":"pub fn internal_tri(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8123},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1227564,"byte_end":1227570,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"unpack","qualname":"<SymmetricTridiagonal<N, D>>::unpack","value":"pub fn unpack(Self)\n->\n    (MatrixN<N, D>, VectorN<N::RealField, D>,\n     VectorN<N::RealField, DimDiff<D, U1>>) where\nDefaultAllocator: Allocator<N::RealField, D> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this\n decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1227442,"byte_end":1227529,"line_start":98,"line_end":98,"column_start":5,"column_end":92}},{"value":"/ decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1227534,"byte_end":1227552,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":8124},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228033,"byte_end":1228051,"line_start":117,"line_end":117,"column_start":12,"column_end":30},"name":"unpack_tridiagonal","qualname":"<SymmetricTridiagonal<N, D>>::unpack_tridiagonal","value":"pub fn unpack_tridiagonal(Self)\n-> (VectorN<N::RealField, D>, VectorN<N::RealField, DimDiff<D, U1>>) where\nDefaultAllocator: Allocator<N::RealField, D> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the diagonal, and off diagonal elements of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the diagonal, and off diagonal elements of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1227946,"byte_end":1228021,"line_start":116,"line_end":116,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8125},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228411,"byte_end":1228419,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SymmetricTridiagonal<N, D>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N::RealField, D> where\nDefaultAllocator: Allocator<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The diagonal components of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228349,"byte_end":1228399,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8127},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228646,"byte_end":1228658,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<SymmetricTridiagonal<N, D>>::off_diagonal","value":"pub fn off_diagonal(&Self) -> VectorN<N::RealField, DimDiff<D, U1>> where\nDefaultAllocator: Allocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The off-diagonal components of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228580,"byte_end":1228634,"line_start":137,"line_end":137,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8128},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228916,"byte_end":1228917,"line_start":146,"line_end":146,"column_start":12,"column_end":13},"name":"q","qualname":"<SymmetricTridiagonal<N, D>>::q","value":"pub fn q(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1228843,"byte_end":1228904,"line_start":145,"line_end":145,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8129},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229085,"byte_end":1229094,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricTridiagonal<N, D>>::recompose","value":"pub fn recompose(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the original symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Recomputes the original symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229028,"byte_end":1229073,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8134},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229831,"byte_end":1229855,"line_start":173,"line_end":173,"column_start":12,"column_end":36},"name":"symmetric_tridiagonalize","qualname":"<SquareMatrix<N, D, S>>::symmetric_tridiagonalize","value":"pub fn symmetric_tridiagonalize(Self) -> SymmetricTridiagonal<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of this symmetric matrix.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229670,"byte_end":1229731,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229736,"byte_end":1229739,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229744,"byte_end":1229819,"line_start":172,"line_end":172,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":8176},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5030,"byte_end":5033,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the multiplicative identity element.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4869,"byte_end":4914,"line_start":156,"line_end":156,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4915,"byte_end":4918,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4919,"byte_end":4934,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4935,"byte_end":4938,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4939,"byte_end":4983,"line_start":160,"line_end":160,"column_start":1,"column_end":45}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4984,"byte_end":5012,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5013,"byte_end":5022,"line_start":162,"line_end":162,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8178},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5220,"byte_end":5224,"line_start":174,"line_end":174,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the additive identity element.","sig":null,"attributes":[{"value":"/ Gets the additive identity element.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5067,"byte_end":5106,"line_start":167,"line_end":167,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5107,"byte_end":5110,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5111,"byte_end":5126,"line_start":169,"line_end":169,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5127,"byte_end":5130,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5131,"byte_end":5157,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5158,"byte_end":5202,"line_start":172,"line_end":172,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5203,"byte_end":5212,"line_start":173,"line_end":173,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8180},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5637,"byte_end":5641,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap<T>(T, T, T) -> T where T: Copy + PartialOrd + ClosedAdd +\nClosedSub","parent":null,"children":[],"decl_id":null,"docs":" Wraps `val` into the range `[min, max]` using modular arithmetics.","sig":null,"attributes":[{"value":"/ Wraps `val` into the range `[min, max]` using modular arithmetics.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5512,"byte_end":5582,"line_start":186,"line_end":186,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5583,"byte_end":5586,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ The range must not be empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5587,"byte_end":5619,"line_start":188,"line_end":188,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":5620,"byte_end":5629,"line_start":189,"line_end":189,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8182},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6356,"byte_end":6361,"line_start":225,"line_end":225,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the input value clamped to the interval `[min, max]`.","sig":null,"attributes":[{"value":"/ Returns a reference to the input value clamped to the interval `[min, max]`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6089,"byte_end":6169,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6170,"byte_end":6173,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ In particular:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6174,"byte_end":6192,"line_start":220,"line_end":220,"column_start":1,"column_end":19}},{"value":"/     * If `min < val < max`, this returns `val`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6193,"byte_end":6244,"line_start":221,"line_end":221,"column_start":1,"column_end":52}},{"value":"/     * If `val <= min`, this returns `min`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6245,"byte_end":6291,"line_start":222,"line_end":222,"column_start":1,"column_end":47}},{"value":"/     * If `val >= max`, this returns `max`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6292,"byte_end":6338,"line_start":223,"line_end":223,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6339,"byte_end":6348,"line_start":224,"line_end":224,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8184},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6584,"byte_end":6587,"line_start":239,"line_end":239,"column_start":8,"column_end":11},"name":"max","qualname":"::max","value":"pub fn max<T: Ord>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::max`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::max`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6543,"byte_end":6566,"line_start":237,"line_end":237,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6567,"byte_end":6576,"line_start":238,"line_end":238,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8186},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6678,"byte_end":6681,"line_start":245,"line_end":245,"column_start":8,"column_end":11},"name":"min","qualname":"::min","value":"pub fn min<T: Ord>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::min`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::min`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6637,"byte_end":6660,"line_start":243,"line_end":243,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6661,"byte_end":6670,"line_start":244,"line_end":244,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8188},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6936,"byte_end":6939,"line_start":254,"line_end":254,"column_start":8,"column_end":11},"name":"abs","qualname":"::abs","value":"pub fn abs<T: Signed>(&T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The absolute value of `a`.","sig":null,"attributes":[{"value":"/ The absolute value of `a`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6731,"byte_end":6761,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6762,"byte_end":6765,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Deprecated: Use [Matrix::abs] or [RealField::abs] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6766,"byte_end":6828,"line_start":251,"line_end":251,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n             \"use the inherent method `Matrix::abs` or `RealField::abs` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6829,"byte_end":6918,"line_start":252,"line_end":252,"column_start":1,"column_end":90}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6919,"byte_end":6928,"line_start":253,"line_end":253,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8190},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7107,"byte_end":7110,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"inf","qualname":"::inf","value":"pub fn inf<N, R: Dim, C: Dim>(&MatrixMN<N, R, C>, &MatrixMN<N, R, C>)\n-> MatrixMN<N, R, C> where N: Scalar + SimdPartialOrd,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the infimum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the infimum of `a` and `b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":6980,"byte_end":7019,"line_start":258,"line_end":258,"column_start":1,"column_end":40}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7020,"byte_end":7089,"line_start":259,"line_end":259,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7090,"byte_end":7099,"line_start":260,"line_end":260,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8194},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7423,"byte_end":7426,"line_start":272,"line_end":272,"column_start":8,"column_end":11},"name":"sup","qualname":"::sup","value":"pub fn sup<N, R: Dim, C: Dim>(&MatrixMN<N, R, C>, &MatrixMN<N, R, C>)\n-> MatrixMN<N, R, C> where N: Scalar + SimdPartialOrd,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the supremum of `a` and `b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7295,"byte_end":7335,"line_start":269,"line_end":269,"column_start":1,"column_end":41}},{"value":"deprecated(note = \"use the inherent method `Matrix::sup` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7336,"byte_end":7405,"line_start":270,"line_end":270,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7406,"byte_end":7415,"line_start":271,"line_end":271,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8198},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7770,"byte_end":7777,"line_start":283,"line_end":283,"column_start":8,"column_end":15},"name":"inf_sup","qualname":"::inf_sup","value":"pub fn inf_sup<N, R: Dim, C: Dim>(&MatrixMN<N, R, C>, &MatrixMN<N, R, C>)\n-> (MatrixMN<N, R, C>, MatrixMN<N, R, C>) where N: Scalar + SimdPartialOrd,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns simultaneously the infimum and supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns simultaneously the infimum and supremum of `a` and `b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7611,"byte_end":7678,"line_start":280,"line_end":280,"column_start":1,"column_end":68}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf_sup` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7679,"byte_end":7752,"line_start":281,"line_end":281,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7753,"byte_end":7762,"line_start":282,"line_end":282,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8202},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8074,"byte_end":8085,"line_start":296,"line_end":296,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::partial_cmp","value":"pub fn partial_cmp<T: PartialOrd>(&T, &T) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compare `a` and `b` using a partial ordering relation.\n","sig":null,"attributes":[{"value":"/ Compare `a` and `b` using a partial ordering relation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":7998,"byte_end":8056,"line_start":294,"line_end":294,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8057,"byte_end":8066,"line_start":295,"line_end":295,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8204},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8241,"byte_end":8251,"line_start":302,"line_end":302,"column_start":8,"column_end":18},"name":"partial_lt","qualname":"::partial_lt","value":"pub fn partial_lt<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a < b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a < b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8161,"byte_end":8223,"line_start":300,"line_end":300,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8224,"byte_end":8233,"line_start":301,"line_end":301,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8206},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8387,"byte_end":8397,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"partial_le","qualname":"::partial_le","value":"pub fn partial_le<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a <= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a <= b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8306,"byte_end":8369,"line_start":306,"line_end":306,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8370,"byte_end":8379,"line_start":307,"line_end":307,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8208},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8532,"byte_end":8542,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"partial_gt","qualname":"::partial_gt","value":"pub fn partial_gt<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a > b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a > b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8452,"byte_end":8514,"line_start":312,"line_end":312,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8515,"byte_end":8524,"line_start":313,"line_end":313,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8210},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8678,"byte_end":8688,"line_start":320,"line_end":320,"column_start":8,"column_end":18},"name":"partial_ge","qualname":"::partial_ge","value":"pub fn partial_ge<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a >= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a >= b`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8597,"byte_end":8660,"line_start":318,"line_end":318,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8661,"byte_end":8670,"line_start":319,"line_end":319,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8212},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8822,"byte_end":8833,"line_start":326,"line_end":326,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::partial_min","value":"pub fn partial_min<'a, T: PartialOrd>(&'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the minimum of `a` and `b` if they are comparable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8743,"byte_end":8804,"line_start":324,"line_end":324,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":8805,"byte_end":8814,"line_start":325,"line_end":325,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8215},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9146,"byte_end":9157,"line_start":339,"line_end":339,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::partial_max","value":"pub fn partial_max<'a, T: PartialOrd>(&'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the maximum of `a` and `b` if they are comparable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9067,"byte_end":9128,"line_start":337,"line_end":337,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9129,"byte_end":9138,"line_start":338,"line_end":338,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8218},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9515,"byte_end":9528,"line_start":353,"line_end":353,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::partial_clamp","value":"pub fn partial_clamp<'a, T: PartialOrd>(&'a T, &'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"/ Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9388,"byte_end":9477,"line_start":350,"line_end":350,"column_start":1,"column_end":90}},{"value":"/ `min` or `max`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9478,"byte_end":9497,"line_start":351,"line_end":351,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9498,"byte_end":9507,"line_start":352,"line_end":352,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8221},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10002,"byte_end":10015,"line_start":369,"line_end":369,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::partial_sort2","value":"pub fn partial_sort2<'a, T: PartialOrd>(&'a T, &'a T)\n-> Option<(&'a T, &'a T)>","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order using a partial ordering.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9918,"byte_end":9984,"line_start":367,"line_end":367,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":9985,"byte_end":9994,"line_start":368,"line_end":368,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8224},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10456,"byte_end":10462,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"center","qualname":"::center","value":"pub fn center<N: SimdComplexField, D: DimName>(&Point<N, D>, &Point<N, D>)\n-> Point<N, D> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The center of two points.","sig":null,"attributes":[{"value":"/ The center of two points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10299,"byte_end":10328,"line_start":385,"line_end":385,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10329,"byte_end":10332,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10333,"byte_end":10348,"line_start":387,"line_end":387,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10349,"byte_end":10352,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10353,"byte_end":10387,"line_start":389,"line_end":389,"column_start":1,"column_end":35}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10388,"byte_end":10438,"line_start":390,"line_end":390,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10439,"byte_end":10448,"line_start":391,"line_end":391,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8227},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10819,"byte_end":10827,"line_start":406,"line_end":406,"column_start":8,"column_end":16},"name":"distance","qualname":"::distance","value":"pub fn distance<N: SimdComplexField, D: DimName>(&Point<N, D>, &Point<N, D>)\n-> N::SimdRealField where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The distance between two points.","sig":null,"attributes":[{"value":"/ The distance between two points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10659,"byte_end":10695,"line_start":399,"line_end":399,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10696,"byte_end":10699,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10700,"byte_end":10715,"line_start":401,"line_end":401,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10716,"byte_end":10719,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10720,"byte_end":10750,"line_start":403,"line_end":403,"column_start":1,"column_end":31}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10751,"byte_end":10801,"line_start":404,"line_end":404,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":10802,"byte_end":10811,"line_start":405,"line_end":405,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11167,"byte_end":11183,"line_start":423,"line_end":423,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::distance_squared","value":"pub fn distance_squared<N: SimdComplexField,\n                        D: DimName>(&Point<N, D>, &Point<N, D>)\n-> N::SimdRealField where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The squared distance between two points.","sig":null,"attributes":[{"value":"/ The squared distance between two points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11015,"byte_end":11059,"line_start":416,"line_end":416,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11060,"byte_end":11063,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11064,"byte_end":11079,"line_start":418,"line_end":418,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11080,"byte_end":11083,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11084,"byte_end":11114,"line_start":420,"line_end":420,"column_start":1,"column_end":31}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11115,"byte_end":11149,"line_start":421,"line_end":421,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11150,"byte_end":11159,"line_start":422,"line_end":422,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8233},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11854,"byte_end":11861,"line_start":448,"line_end":448,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"pub fn convert<From, To: SupersetOf<From>>(From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11394,"byte_end":11468,"line_start":436,"line_end":436,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11469,"byte_end":11472,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ See also [`try_convert`](fn.try_convert.html) for conversion to more specific types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11473,"byte_end":11561,"line_start":438,"line_end":438,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11562,"byte_end":11565,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11566,"byte_end":11581,"line_start":440,"line_end":440,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11582,"byte_end":11585,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11586,"byte_end":11626,"line_start":442,"line_end":442,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11627,"byte_end":11687,"line_start":443,"line_end":443,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11688,"byte_end":11746,"line_start":444,"line_end":444,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11747,"byte_end":11787,"line_start":445,"line_end":445,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11788,"byte_end":11836,"line_start":446,"line_end":446,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11837,"byte_end":11846,"line_start":447,"line_end":447,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8236},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12360,"byte_end":12371,"line_start":464,"line_end":464,"column_start":8,"column_end":19},"name":"try_convert","qualname":"::try_convert","value":"pub fn try_convert<From: SupersetOf<To>, To>(From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11934,"byte_end":11991,"line_start":452,"line_end":452,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11992,"byte_end":11995,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ See also [`convert`](fn.convert.html) for conversion to more general types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":11996,"byte_end":12075,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12076,"byte_end":12079,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12080,"byte_end":12095,"line_start":456,"line_end":456,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12096,"byte_end":12099,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12100,"byte_end":12132,"line_start":458,"line_end":458,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12133,"byte_end":12173,"line_start":459,"line_end":459,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12174,"byte_end":12234,"line_start":460,"line_end":460,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12235,"byte_end":12293,"line_start":461,"line_end":461,"column_start":1,"column_end":59}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12294,"byte_end":12342,"line_start":462,"line_end":462,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12343,"byte_end":12352,"line_start":463,"line_end":463,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8239},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12825,"byte_end":12839,"line_start":479,"line_end":479,"column_start":8,"column_end":22},"name":"is_convertible","qualname":"::is_convertible","value":"pub fn is_convertible<From: SupersetOf<To>, To>(&From) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if [`try_convert`](fn.try_convert.html) will succeed without\n actually performing the conversion.","sig":null,"attributes":[{"value":"/ Indicates if [`try_convert`](fn.try_convert.html) will succeed without","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12444,"byte_end":12518,"line_start":468,"line_end":468,"column_start":1,"column_end":75}},{"value":"/ actually performing the conversion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12519,"byte_end":12558,"line_start":469,"line_end":469,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12559,"byte_end":12562,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12563,"byte_end":12578,"line_start":471,"line_end":471,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12579,"byte_end":12582,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12583,"byte_end":12615,"line_start":473,"line_end":473,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12616,"byte_end":12656,"line_start":474,"line_end":474,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12657,"byte_end":12717,"line_start":475,"line_end":475,"column_start":1,"column_end":61}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12718,"byte_end":12758,"line_start":476,"line_end":476,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12759,"byte_end":12807,"line_start":477,"line_end":477,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12808,"byte_end":12817,"line_start":478,"line_end":478,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8242},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13336,"byte_end":13353,"line_start":495,"line_end":495,"column_start":8,"column_end":25},"name":"convert_unchecked","qualname":"::convert_unchecked","value":"pub fn convert_unchecked<From: SupersetOf<To>, To>(From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12910,"byte_end":12977,"line_start":483,"line_end":483,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":12978,"byte_end":13010,"line_start":484,"line_end":484,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13011,"byte_end":13014,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13015,"byte_end":13030,"line_start":486,"line_end":486,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13031,"byte_end":13034,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13035,"byte_end":13067,"line_start":488,"line_end":488,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13068,"byte_end":13108,"line_start":489,"line_end":489,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13109,"byte_end":13169,"line_start":490,"line_end":490,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13170,"byte_end":13228,"line_start":491,"line_end":491,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13229,"byte_end":13269,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13270,"byte_end":13318,"line_start":493,"line_end":493,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13319,"byte_end":13328,"line_start":494,"line_end":494,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13787,"byte_end":13798,"line_start":509,"line_end":509,"column_start":8,"column_end":19},"name":"convert_ref","qualname":"::convert_ref","value":"pub fn convert_ref<From, To: SupersetOf<From>>(&From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13428,"byte_end":13502,"line_start":499,"line_end":499,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13503,"byte_end":13506,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13507,"byte_end":13522,"line_start":501,"line_end":501,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13523,"byte_end":13526,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13527,"byte_end":13559,"line_start":503,"line_end":503,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13560,"byte_end":13620,"line_start":504,"line_end":504,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13621,"byte_end":13679,"line_start":505,"line_end":505,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13680,"byte_end":13720,"line_start":506,"line_end":506,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13721,"byte_end":13769,"line_start":507,"line_end":507,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13770,"byte_end":13779,"line_start":508,"line_end":508,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8248},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14205,"byte_end":14220,"line_start":523,"line_end":523,"column_start":8,"column_end":23},"name":"try_convert_ref","qualname":"::try_convert_ref","value":"pub fn try_convert_ref<From: SupersetOf<To>, To>(&From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13871,"byte_end":13928,"line_start":513,"line_end":513,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13929,"byte_end":13932,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13933,"byte_end":13948,"line_start":515,"line_end":515,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13949,"byte_end":13952,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13953,"byte_end":13985,"line_start":517,"line_end":517,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":13986,"byte_end":14026,"line_start":518,"line_end":518,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14027,"byte_end":14087,"line_start":519,"line_end":519,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14088,"byte_end":14146,"line_start":520,"line_end":520,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14147,"byte_end":14187,"line_start":521,"line_end":521,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14188,"byte_end":14197,"line_start":522,"line_end":522,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8251},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14659,"byte_end":14680,"line_start":538,"line_end":538,"column_start":8,"column_end":29},"name":"convert_ref_unchecked","qualname":"::convert_ref_unchecked","value":"pub fn convert_ref_unchecked<From: SupersetOf<To>, To>(&From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14294,"byte_end":14361,"line_start":527,"line_end":527,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14362,"byte_end":14394,"line_start":528,"line_end":528,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14395,"byte_end":14398,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14399,"byte_end":14414,"line_start":530,"line_end":530,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14415,"byte_end":14418,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14419,"byte_end":14451,"line_start":532,"line_end":532,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14452,"byte_end":14492,"line_start":533,"line_end":533,"column_start":1,"column_end":41}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14493,"byte_end":14551,"line_start":534,"line_end":534,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14552,"byte_end":14592,"line_start":535,"line_end":535,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14593,"byte_end":14641,"line_start":536,"line_end":536,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":14642,"byte_end":14651,"line_start":537,"line_end":537,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18862,"byte_end":18878,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19501,"byte_end":19517,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20400,"byte_end":20406,"line_start":20,"line_end":20,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21376,"byte_end":21382,"line_start":53,"line_end":53,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25161,"byte_end":25167,"line_start":202,"line_end":202,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26376,"byte_end":26382,"line_start":238,"line_end":238,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":27323,"byte_end":27329,"line_start":271,"line_end":271,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37441,"byte_end":37447,"line_start":558,"line_end":558,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":199},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50946,"byte_end":50952,"line_start":960,"line_end":960,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":243},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":64347,"byte_end":64353,"line_start":1334,"line_end":1334,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":273},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69681,"byte_end":69693,"line_start":1482,"line_end":1482,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77918,"byte_end":77933,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78245,"byte_end":78260,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78334,"byte_end":78349,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78423,"byte_end":78438,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":80037,"byte_end":80052,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":80134,"byte_end":80149,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":80231,"byte_end":80246,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":88433,"byte_end":88449,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":89507,"byte_end":89523,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":90447,"byte_end":90463,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":91406,"byte_end":91422,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":92311,"byte_end":92327,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":93170,"byte_end":93186,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":94062,"byte_end":94078,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":94505,"byte_end":94521,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":94948,"byte_end":94964,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":95395,"byte_end":95411,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96251,"byte_end":96258,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97065,"byte_end":97072,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97100,"byte_end":97107,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97972,"byte_end":97979,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":98234,"byte_end":98241,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":98390,"byte_end":98397,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101585,"byte_end":101587,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101873,"byte_end":101875,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101994,"byte_end":101996,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":104376,"byte_end":104380,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":104943,"byte_end":104947,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":105809,"byte_end":105813,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":106457,"byte_end":106461,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":106641,"byte_end":106645,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":106780,"byte_end":106784,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":107212,"byte_end":107216,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":107428,"byte_end":107432,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":112826,"byte_end":112833,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":113030,"byte_end":113037,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":113736,"byte_end":113743,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":114157,"byte_end":114167,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":114522,"byte_end":114532,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115204,"byte_end":115214,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115609,"byte_end":115619,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115823,"byte_end":115833,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":116535,"byte_end":116545,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":116965,"byte_end":116978,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":117336,"byte_end":117349,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":118024,"byte_end":118037,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":118979,"byte_end":118985,"line_start":24,"line_end":24,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":119214,"byte_end":119220,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":119685,"byte_end":119691,"line_start":54,"line_end":54,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":119906,"byte_end":119912,"line_start":62,"line_end":62,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":120321,"byte_end":120327,"line_start":84,"line_end":84,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":120929,"byte_end":120935,"line_start":114,"line_end":114,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":132738,"byte_end":132746,"line_start":378,"line_end":378,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":133013,"byte_end":133021,"line_start":388,"line_end":388,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":134090,"byte_end":134098,"line_start":418,"line_end":418,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":134402,"byte_end":134410,"line_start":428,"line_end":428,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":139984,"byte_end":139990,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":140457,"byte_end":140463,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":141061,"byte_end":141067,"line_start":639,"line_end":639,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":141554,"byte_end":141560,"line_start":656,"line_end":656,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142114,"byte_end":142120,"line_start":675,"line_end":675,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":931},{"krate":0,"index":939},{"krate":0,"index":947},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":147770,"byte_end":147776,"line_start":846,"line_end":846,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148389,"byte_end":148396,"line_start":871,"line_end":871,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148704,"byte_end":148711,"line_start":881,"line_end":881,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149015,"byte_end":149021,"line_start":891,"line_end":891,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187894,"byte_end":187906,"line_start":51,"line_end":51,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":188177,"byte_end":188189,"line_start":66,"line_end":66,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":188441,"byte_end":188453,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":188748,"byte_end":188760,"line_start":94,"line_end":94,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189006,"byte_end":189018,"line_start":107,"line_end":107,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189286,"byte_end":189298,"line_start":121,"line_end":121,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189516,"byte_end":189528,"line_start":132,"line_end":132,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189811,"byte_end":189823,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189990,"byte_end":190002,"line_start":158,"line_end":158,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":190283,"byte_end":190295,"line_start":172,"line_end":172,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":191416,"byte_end":191428,"line_start":228,"line_end":228,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":191856,"byte_end":191868,"line_start":248,"line_end":248,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":192123,"byte_end":192135,"line_start":259,"line_end":259,"column_start":56,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":196551,"byte_end":196558,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197837,"byte_end":197844,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198646,"byte_end":198653,"line_start":96,"line_end":96,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202711,"byte_end":202723,"line_start":204,"line_end":204,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205851,"byte_end":205863,"line_start":299,"line_end":299,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":208817,"byte_end":208829,"line_start":385,"line_end":385,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211002,"byte_end":211008,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":218869,"byte_end":218875,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220427,"byte_end":220435,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229831,"byte_end":229838,"line_start":305,"line_end":305,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249041,"byte_end":249049,"line_start":740,"line_end":740,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249350,"byte_end":249357,"line_start":756,"line_end":756,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249581,"byte_end":249589,"line_start":767,"line_end":767,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249930,"byte_end":249938,"line_start":783,"line_end":783,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":251004,"byte_end":251012,"line_start":818,"line_end":818,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":258723,"byte_end":258730,"line_start":1009,"line_end":1009,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":262738,"byte_end":262751,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":264755,"byte_end":264771,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":267802,"byte_end":267815,"line_start":135,"line_end":135,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268966,"byte_end":268982,"line_start":160,"line_end":160,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":276852,"byte_end":276860,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":287513,"byte_end":287519,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":287985,"byte_end":287991,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":288378,"byte_end":288384,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":288727,"byte_end":288733,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":289205,"byte_end":289211,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":289604,"byte_end":289610,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":289952,"byte_end":289963,"line_start":438,"line_end":438,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":291031,"byte_end":291042,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":292114,"byte_end":292128,"line_start":512,"line_end":512,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":293576,"byte_end":293588,"line_start":566,"line_end":566,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":293753,"byte_end":293768,"line_start":573,"line_end":573,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":293987,"byte_end":293995,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":294607,"byte_end":294615,"line_start":602,"line_end":602,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":295323,"byte_end":295331,"line_start":625,"line_end":625,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":296232,"byte_end":296240,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298221,"byte_end":298227,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":300930,"byte_end":300936,"line_start":102,"line_end":102,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306628,"byte_end":306634,"line_start":265,"line_end":265,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307871,"byte_end":307877,"line_start":303,"line_end":303,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325083,"byte_end":325090,"line_start":817,"line_end":817,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325883,"byte_end":325891,"line_start":836,"line_end":836,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326855,"byte_end":326863,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":329897,"byte_end":329903,"line_start":962,"line_end":962,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":331413,"byte_end":331419,"line_start":1010,"line_end":1010,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":332031,"byte_end":332037,"line_start":1031,"line_end":1031,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":335341,"byte_end":335346,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":336505,"byte_end":336514,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":337533,"byte_end":337542,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":338074,"byte_end":338083,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":338584,"byte_end":338598,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":340103,"byte_end":340110,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":341081,"byte_end":341097,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347030,"byte_end":347036,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359565,"byte_end":359571,"line_start":88,"line_end":88,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359817,"byte_end":359823,"line_start":97,"line_end":97,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":361847,"byte_end":361853,"line_start":188,"line_end":188,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362249,"byte_end":362255,"line_start":200,"line_end":200,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2918},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2946},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2963},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378406,"byte_end":378412,"line_start":733,"line_end":733,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2984},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386377,"byte_end":386383,"line_start":983,"line_end":983,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386764,"byte_end":386770,"line_start":993,"line_end":993,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387193,"byte_end":387199,"line_start":1003,"line_end":1003,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387458,"byte_end":387464,"line_start":1011,"line_end":1011,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387729,"byte_end":387735,"line_start":1019,"line_end":1019,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":388213,"byte_end":388219,"line_start":1037,"line_end":1037,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391183,"byte_end":391189,"line_start":1134,"line_end":1134,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391845,"byte_end":391851,"line_start":1154,"line_end":1154,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":392975,"byte_end":392987,"line_start":1190,"line_end":1190,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394537,"byte_end":394549,"line_start":1247,"line_end":1247,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395564,"byte_end":395570,"line_start":1283,"line_end":1283,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396342,"byte_end":396348,"line_start":1304,"line_end":1304,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397296,"byte_end":397302,"line_start":1332,"line_end":1332,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397921,"byte_end":397927,"line_start":1350,"line_end":1350,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":398391,"byte_end":398397,"line_start":1371,"line_end":1371,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":398855,"byte_end":398861,"line_start":1393,"line_end":1393,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":399347,"byte_end":399353,"line_start":1413,"line_end":1413,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3140},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":402025,"byte_end":402031,"line_start":1505,"line_end":1505,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":402166,"byte_end":402172,"line_start":1512,"line_end":1512,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":406140,"byte_end":406146,"line_start":1631,"line_end":1631,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410201,"byte_end":410207,"line_start":1732,"line_end":1732,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410834,"byte_end":410840,"line_start":1753,"line_end":1753,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411586,"byte_end":411592,"line_start":1776,"line_end":1776,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412359,"byte_end":412363,"line_start":1800,"line_end":1800,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3196},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":414387,"byte_end":414391,"line_start":1865,"line_end":1865,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":414818,"byte_end":414822,"line_start":1884,"line_end":1884,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":415319,"byte_end":415323,"line_start":1907,"line_end":1907,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":415708,"byte_end":415714,"line_start":1924,"line_end":1924,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_simba.rs","byte_start":416422,"byte_end":416430,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":421671,"byte_end":421683,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":421798,"byte_end":421810,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":424465,"byte_end":424480,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3305},{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425074,"byte_end":425086,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425203,"byte_end":425218,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425338,"byte_end":425353,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425485,"byte_end":425497,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425621,"byte_end":425636,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425763,"byte_end":425778,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425857,"byte_end":425863,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445940,"byte_end":445945,"line_start":730,"line_end":730,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":446294,"byte_end":446303,"line_start":749,"line_end":749,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":446662,"byte_end":446669,"line_start":768,"line_end":768,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":446996,"byte_end":447005,"line_start":787,"line_end":787,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447329,"byte_end":447335,"line_start":806,"line_end":806,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448579,"byte_end":448585,"line_start":845,"line_end":845,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449908,"byte_end":449919,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451975,"byte_end":451988,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3462},{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":452821,"byte_end":452827,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":453840,"byte_end":453851,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":454901,"byte_end":454907,"line_start":157,"line_end":157,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459222,"byte_end":459228,"line_start":302,"line_end":302,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3533},{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460416,"byte_end":460422,"line_start":338,"line_end":338,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3540},{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461432,"byte_end":461438,"line_start":370,"line_end":370,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461956,"byte_end":461964,"line_start":387,"line_end":387,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":462481,"byte_end":462485,"line_start":414,"line_end":414,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3562},{"krate":0,"index":3563}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":462946,"byte_end":462953,"line_start":430,"line_end":430,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468308,"byte_end":468314,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470553,"byte_end":470559,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471115,"byte_end":471127,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472485,"byte_end":472486,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":472842,"byte_end":472848,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":474904,"byte_end":474910,"line_start":76,"line_end":76,"column_start":73,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477669,"byte_end":477675,"line_start":173,"line_end":173,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487600,"byte_end":487604,"line_start":74,"line_end":74,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489956,"byte_end":489960,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490985,"byte_end":490989,"line_start":179,"line_end":179,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":492764,"byte_end":492768,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":493185,"byte_end":493189,"line_start":264,"line_end":264,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":493717,"byte_end":493721,"line_start":280,"line_end":280,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":494331,"byte_end":494335,"line_start":298,"line_end":298,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":495110,"byte_end":495114,"line_start":320,"line_end":320,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497147,"byte_end":497157,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498644,"byte_end":498654,"line_start":88,"line_end":88,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498839,"byte_end":498849,"line_start":100,"line_end":100,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":499802,"byte_end":499812,"line_start":149,"line_end":149,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":500805,"byte_end":500815,"line_start":203,"line_end":203,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":501155,"byte_end":501165,"line_start":218,"line_end":218,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":501325,"byte_end":501335,"line_start":223,"line_end":223,"column_start":72,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":501489,"byte_end":501499,"line_start":228,"line_end":228,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":502269,"byte_end":502279,"line_start":258,"line_end":258,"column_start":73,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":502443,"byte_end":502453,"line_start":263,"line_end":263,"column_start":76,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":502572,"byte_end":502582,"line_start":268,"line_end":268,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":503287,"byte_end":503297,"line_start":284,"line_end":284,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":503779,"byte_end":503789,"line_start":297,"line_end":297,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":504696,"byte_end":504706,"line_start":325,"line_end":325,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3875}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":518102,"byte_end":518110,"line_start":33,"line_end":33,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":519190,"byte_end":519204,"line_start":86,"line_end":86,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":520019,"byte_end":520030,"line_start":126,"line_end":126,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521756,"byte_end":521761,"line_start":33,"line_end":33,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":522016,"byte_end":522021,"line_start":43,"line_end":43,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523467,"byte_end":523472,"line_start":101,"line_end":101,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":527091,"byte_end":527096,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":527507,"byte_end":527512,"line_start":239,"line_end":239,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":527988,"byte_end":527993,"line_start":261,"line_end":261,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":528365,"byte_end":528370,"line_start":277,"line_end":277,"column_start":41,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":528463,"byte_end":528468,"line_start":279,"line_end":279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":528678,"byte_end":528683,"line_start":289,"line_end":289,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529332,"byte_end":529337,"line_start":322,"line_end":322,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":530099,"byte_end":530104,"line_start":351,"line_end":351,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531474,"byte_end":531479,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534677,"byte_end":534682,"line_start":118,"line_end":118,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534978,"byte_end":534986,"line_start":133,"line_end":133,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":538337,"byte_end":538342,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":539029,"byte_end":539034,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":541426,"byte_end":541433,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":541700,"byte_end":541705,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4155}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":541948,"byte_end":541953,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":542428,"byte_end":542433,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4168}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":542997,"byte_end":543002,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":543675,"byte_end":543680,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_ops.rs","byte_start":546232,"byte_end":546237,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4254}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_ops.rs","byte_start":546457,"byte_end":546462,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4258}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_ops.rs","byte_start":546697,"byte_end":546702,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_simba.rs","byte_start":553978,"byte_end":553983,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":555923,"byte_end":555931,"line_start":35,"line_end":35,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":556192,"byte_end":556200,"line_start":45,"line_end":45,"column_start":45,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":556358,"byte_end":556366,"line_start":52,"line_end":52,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4329}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":557899,"byte_end":557907,"line_start":114,"line_end":114,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567251,"byte_end":567259,"line_start":364,"line_end":364,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570295,"byte_end":570303,"line_start":446,"line_end":446,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570411,"byte_end":570419,"line_start":448,"line_end":448,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570610,"byte_end":570618,"line_start":458,"line_end":458,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":571038,"byte_end":571046,"line_start":477,"line_end":477,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":571536,"byte_end":571544,"line_start":500,"line_end":500,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4372},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":571964,"byte_end":571972,"line_start":522,"line_end":522,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573335,"byte_end":573343,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573930,"byte_end":573938,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4408}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":575054,"byte_end":575062,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":575683,"byte_end":575692,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":576285,"byte_end":576294,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":576887,"byte_end":576895,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":577553,"byte_end":577561,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":578276,"byte_end":578284,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":579234,"byte_end":579242,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":580848,"byte_end":580855,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":580992,"byte_end":580999,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581132,"byte_end":581139,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581276,"byte_end":581283,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4508}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581466,"byte_end":581474,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581955,"byte_end":581963,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":582526,"byte_end":582534,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":583262,"byte_end":583270,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4535}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_ops.rs","byte_start":585050,"byte_end":585058,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4573},{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_simba.rs","byte_start":590516,"byte_end":590524,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592387,"byte_end":592396,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4637},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599958,"byte_end":599966,"line_start":241,"line_end":241,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600588,"byte_end":600597,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4653},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4659},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4673},{"krate":0,"index":4676},{"krate":0,"index":4679},{"krate":0,"index":4682},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":622314,"byte_end":622322,"line_start":867,"line_end":867,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624960,"byte_end":624970,"line_start":36,"line_end":36,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4733}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":625563,"byte_end":625573,"line_start":62,"line_end":62,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":625650,"byte_end":625660,"line_start":64,"line_end":64,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":625986,"byte_end":625996,"line_start":75,"line_end":75,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4742}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":626140,"byte_end":626150,"line_start":81,"line_end":81,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":626196,"byte_end":626206,"line_start":83,"line_end":83,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4748}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":626973,"byte_end":626983,"line_start":118,"line_end":118,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632349,"byte_end":632359,"line_start":308,"line_end":308,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4767},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652283,"byte_end":652293,"line_start":923,"line_end":923,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652809,"byte_end":652819,"line_start":939,"line_end":939,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":4817}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":653410,"byte_end":653420,"line_start":958,"line_end":958,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4821},{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":653920,"byte_end":653930,"line_start":972,"line_end":972,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654284,"byte_end":654294,"line_start":985,"line_end":985,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654756,"byte_end":654770,"line_start":1009,"line_end":1009,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673251,"byte_end":673265,"line_start":1547,"line_end":1547,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673383,"byte_end":673397,"line_start":1553,"line_end":1553,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4871}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":674012,"byte_end":674026,"line_start":1575,"line_end":1575,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":674365,"byte_end":674379,"line_start":1589,"line_end":1589,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":674792,"byte_end":674806,"line_start":1607,"line_end":1607,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4883},{"krate":0,"index":4884}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675699,"byte_end":675709,"line_start":22,"line_end":22,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4916},{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676701,"byte_end":676711,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4923},{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678269,"byte_end":678279,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4927}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678804,"byte_end":678814,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678960,"byte_end":678970,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4934},{"krate":0,"index":4935}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679234,"byte_end":679242,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679812,"byte_end":679826,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4943},{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":4947},{"krate":0,"index":4948},{"krate":0,"index":4955},{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4969},{"krate":0,"index":4972},{"krate":0,"index":4975},{"krate":0,"index":4978},{"krate":0,"index":4981},{"krate":0,"index":4983},{"krate":0,"index":4985},{"krate":0,"index":4987},{"krate":0,"index":4989}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":703575,"byte_end":703589,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":703762,"byte_end":703770,"line_start":804,"line_end":804,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4998}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":706401,"byte_end":706411,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5034}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":706943,"byte_end":706957,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":707515,"byte_end":707529,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":708113,"byte_end":708127,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":708713,"byte_end":708727,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":709348,"byte_end":709362,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":709966,"byte_end":709980,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711326,"byte_end":711333,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5076}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711521,"byte_end":711530,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5079}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711717,"byte_end":711731,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5082}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711926,"byte_end":711933,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5085}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":712136,"byte_end":712146,"line_start":261,"line_end":261,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5088}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":712316,"byte_end":712326,"line_start":268,"line_end":268,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5093}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":712634,"byte_end":712644,"line_start":279,"line_end":279,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":713041,"byte_end":713051,"line_start":295,"line_end":295,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5105}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":713557,"byte_end":713567,"line_start":315,"line_end":315,"column_start":77,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":714311,"byte_end":714325,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5117}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":714689,"byte_end":714703,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5123}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":715168,"byte_end":715182,"line_start":373,"line_end":373,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":715780,"byte_end":715794,"line_start":394,"line_end":394,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5135}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_coordinates.rs","byte_start":716778,"byte_end":716788,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5148},{"krate":0,"index":5149}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_coordinates.rs","byte_start":716965,"byte_end":716975,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_ops.rs","byte_start":718642,"byte_end":718652,"line_start":65,"line_end":65,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5185},{"krate":0,"index":5186}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_ops.rs","byte_start":718819,"byte_end":718829,"line_start":74,"line_end":74,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5189}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_ops.rs","byte_start":732163,"byte_end":732173,"line_start":553,"line_end":553,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5195},{"krate":0,"index":5196}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_simba.rs","byte_start":736312,"byte_end":736322,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_simba.rs","byte_start":737309,"byte_end":737323,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":738826,"byte_end":738833,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5255},{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739579,"byte_end":739590,"line_start":43,"line_end":43,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749758,"byte_end":749769,"line_start":365,"line_end":365,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5283}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749933,"byte_end":749944,"line_start":371,"line_end":371,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":750289,"byte_end":750300,"line_start":385,"line_end":385,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":750736,"byte_end":750747,"line_start":403,"line_end":403,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5296}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751496,"byte_end":751507,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5334},{"krate":0,"index":5337},{"krate":0,"index":5340}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760869,"byte_end":760880,"line_start":283,"line_end":283,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5345}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":761050,"byte_end":761058,"line_start":293,"line_end":293,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5348}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":762427,"byte_end":762438,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":762970,"byte_end":762981,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":763573,"byte_end":763584,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":764170,"byte_end":764181,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":764802,"byte_end":764813,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":765417,"byte_end":765428,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":765900,"byte_end":765909,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5417}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766093,"byte_end":766104,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766296,"byte_end":766303,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766491,"byte_end":766498,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766732,"byte_end":766743,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5431}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":767154,"byte_end":767165,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5437}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":767620,"byte_end":767631,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5443}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":768269,"byte_end":768280,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":5449}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":770200,"byte_end":770211,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5477},{"krate":0,"index":5478}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":770710,"byte_end":770721,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5487},{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":771295,"byte_end":771306,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5498}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":771874,"byte_end":771885,"line_start":115,"line_end":115,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5507},{"krate":0,"index":5508}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":778680,"byte_end":778691,"line_start":323,"line_end":323,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5519}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":778899,"byte_end":778910,"line_start":333,"line_end":333,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5523}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779144,"byte_end":779155,"line_start":344,"line_end":344,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5526}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779363,"byte_end":779374,"line_start":354,"line_end":354,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779607,"byte_end":779618,"line_start":365,"line_end":365,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5533}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779872,"byte_end":779883,"line_start":376,"line_end":376,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780161,"byte_end":780172,"line_start":388,"line_end":388,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780426,"byte_end":780437,"line_start":399,"line_end":399,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780714,"byte_end":780722,"line_start":411,"line_end":411,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780999,"byte_end":781007,"line_start":422,"line_end":422,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5551}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":781308,"byte_end":781316,"line_start":434,"line_end":434,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5554}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":781593,"byte_end":781601,"line_start":445,"line_end":445,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5558}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_simba.rs","byte_start":782018,"byte_end":782029,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784108,"byte_end":784119,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5607}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784340,"byte_end":784351,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784469,"byte_end":784480,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5615}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":785947,"byte_end":785958,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788999,"byte_end":789010,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789608,"byte_end":789619,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5630}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790200,"byte_end":790211,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790316,"byte_end":790327,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5637}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790548,"byte_end":790559,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5641},{"krate":0,"index":5642},{"krate":0,"index":5643}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790970,"byte_end":790981,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5647},{"krate":0,"index":5648}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":791457,"byte_end":791468,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5652},{"krate":0,"index":5653}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":791884,"byte_end":791895,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793262,"byte_end":793273,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5705}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793946,"byte_end":793957,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5709}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":794146,"byte_end":794154,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5713}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":797230,"byte_end":797241,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":797867,"byte_end":797878,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":798499,"byte_end":798510,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":799188,"byte_end":799199,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":800000,"byte_end":800011,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":801143,"byte_end":801150,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":5787}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":801442,"byte_end":801453,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":801701,"byte_end":801712,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":802170,"byte_end":802181,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5804}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":802709,"byte_end":802720,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5811}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":803389,"byte_end":803400,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5818}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_simba.rs","byte_start":812244,"byte_end":812255,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":815618,"byte_end":815626,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5922}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":815907,"byte_end":815915,"line_start":85,"line_end":85,"column_start":61,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816046,"byte_end":816054,"line_start":92,"line_end":92,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5932}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816340,"byte_end":816348,"line_start":105,"line_end":105,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817230,"byte_end":817238,"line_start":132,"line_end":132,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825701,"byte_end":825709,"line_start":359,"line_end":359,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5956}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826889,"byte_end":826897,"line_start":393,"line_end":393,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":827045,"byte_end":827053,"line_start":400,"line_end":400,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5965}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":827346,"byte_end":827354,"line_start":411,"line_end":411,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":827903,"byte_end":827911,"line_start":431,"line_end":431,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5977},{"krate":0,"index":5978}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":828578,"byte_end":828586,"line_start":457,"line_end":457,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5983},{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":829169,"byte_end":829177,"line_start":481,"line_end":481,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831530,"byte_end":831538,"line_start":22,"line_end":22,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6045},{"krate":0,"index":6046}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":833089,"byte_end":833097,"line_start":70,"line_end":70,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6051}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":833367,"byte_end":833375,"line_start":82,"line_end":82,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834185,"byte_end":834193,"line_start":116,"line_end":116,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6063}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835286,"byte_end":835294,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":846456,"byte_end":846464,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":847352,"byte_end":847360,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":848096,"byte_end":848104,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":849268,"byte_end":849276,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":850981,"byte_end":850988,"line_start":154,"line_end":154,"column_start":67,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":851387,"byte_end":851395,"line_start":167,"line_end":167,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6147}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":852126,"byte_end":852134,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":853089,"byte_end":853097,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6165}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":854361,"byte_end":854369,"line_start":252,"line_end":252,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6174}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_simba.rs","byte_start":876016,"byte_end":876024,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":879778,"byte_end":879788,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880101,"byte_end":880111,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880274,"byte_end":880284,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":6280}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880511,"byte_end":880521,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881486,"byte_end":881496,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6292}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881746,"byte_end":881756,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6303},{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888899,"byte_end":888909,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6316}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889534,"byte_end":889544,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889692,"byte_end":889702,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889987,"byte_end":889997,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":890538,"byte_end":890548,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6337},{"krate":0,"index":6338}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":891207,"byte_end":891217,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6343},{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":891753,"byte_end":891763,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6349}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893436,"byte_end":893446,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894150,"byte_end":894160,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6405}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894465,"byte_end":894473,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894901,"byte_end":894911,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896494,"byte_end":896504,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897307,"byte_end":897317,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":907221,"byte_end":907231,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6462}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":908132,"byte_end":908142,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":909296,"byte_end":909306,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":912733,"byte_end":912740,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6486}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":913150,"byte_end":913160,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6494}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":913900,"byte_end":913910,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6503}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":914854,"byte_end":914864,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":916077,"byte_end":916087,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6521}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_simba.rs","byte_start":937983,"byte_end":937993,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6578},{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943998,"byte_end":944000,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944543,"byte_end":944551,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6637}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944786,"byte_end":944797,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6641}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":945049,"byte_end":945056,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6645},{"krate":0,"index":6646}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":945767,"byte_end":945768,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946385,"byte_end":946386,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":947397,"byte_end":947406,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":947621,"byte_end":947630,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6665}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":948871,"byte_end":948880,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949040,"byte_end":949049,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6674}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949293,"byte_end":949302,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6683},{"krate":0,"index":6684},{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957520,"byte_end":957529,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6696},{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958347,"byte_end":958356,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6702},{"krate":0,"index":6703}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959236,"byte_end":959245,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959687,"byte_end":959696,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6713},{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":960156,"byte_end":960165,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":6719},{"krate":0,"index":6720}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":960694,"byte_end":960703,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6725},{"krate":0,"index":6726}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962546,"byte_end":962555,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6766}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963659,"byte_end":963668,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6771}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_conversion.rs","byte_start":964201,"byte_end":964210,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_conversion.rs","byte_start":965035,"byte_end":965044,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":6803},{"krate":0,"index":6804},{"krate":0,"index":6805}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_conversion.rs","byte_start":965821,"byte_end":965828,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_ops.rs","byte_start":968131,"byte_end":968140,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6859},{"krate":0,"index":6860}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_ops.rs","byte_start":968496,"byte_end":968505,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6864}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_simba.rs","byte_start":989783,"byte_end":989792,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6886},{"krate":0,"index":6887},{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":6892}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991624,"byte_end":991634,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6932},{"krate":0,"index":6936},{"krate":0,"index":6941}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":995978,"byte_end":995991,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":996028,"byte_end":996041,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6971}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":996191,"byte_end":996204,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6974}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":996349,"byte_end":996362,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6977}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997101,"byte_end":997114,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6996},{"krate":0,"index":6997},{"krate":0,"index":6998},{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7002},{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007},{"krate":0,"index":7008}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1021173,"byte_end":1021181,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7011}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1022234,"byte_end":1022241,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7018}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1022983,"byte_end":1022995,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1023032,"byte_end":1023044,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7045}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1023194,"byte_end":1023206,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7048}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1023351,"byte_end":1023363,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024100,"byte_end":1024112,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056},{"krate":0,"index":7057},{"krate":0,"index":7058},{"krate":0,"index":7059},{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7065},{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7068},{"krate":0,"index":7069},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030755,"byte_end":1030763,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7078}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1031556,"byte_end":1031563,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7085}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1037345,"byte_end":1037355,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1037713,"byte_end":1037723,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7156},{"krate":0,"index":7157},{"krate":0,"index":7160},{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7164},{"krate":0,"index":7166}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1048266,"byte_end":1048272,"line_start":363,"line_end":363,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7172}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049795,"byte_end":1049803,"line_start":34,"line_end":34,"column_start":44,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049922,"byte_end":1049930,"line_start":41,"line_end":41,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207},{"krate":0,"index":7208},{"krate":0,"index":7209},{"krate":0,"index":7210},{"krate":0,"index":7214},{"krate":0,"index":7218}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053568,"byte_end":1053576,"line_start":143,"line_end":143,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":7229},{"krate":0,"index":7230}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1062699,"byte_end":1062711,"line_start":367,"line_end":367,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":7239}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063424,"byte_end":1063430,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7261},{"krate":0,"index":7264},{"krate":0,"index":7267}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067564,"byte_end":1067576,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":7283}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/exp.rs","byte_start":1070565,"byte_end":1070579,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7323},{"krate":0,"index":7324},{"krate":0,"index":7325},{"krate":0,"index":7326},{"krate":0,"index":7327},{"krate":0,"index":7328},{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7335},{"krate":0,"index":7336},{"krate":0,"index":7337},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/exp.rs","byte_start":1081635,"byte_end":1081642,"line_start":428,"line_end":428,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7365}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085351,"byte_end":1085360,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085591,"byte_end":1085600,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7401}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088936,"byte_end":1088945,"line_start":155,"line_end":155,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7405},{"krate":0,"index":7409},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7415}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1092198,"byte_end":1092204,"line_start":261,"line_end":261,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7421}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093036,"byte_end":1093050,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7441},{"krate":0,"index":7442},{"krate":0,"index":7443},{"krate":0,"index":7445},{"krate":0,"index":7446},{"krate":0,"index":7448},{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7457}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099027,"byte_end":1099037,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099228,"byte_end":1099238,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7487},{"krate":0,"index":7489},{"krate":0,"index":7490}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1102299,"byte_end":1102311,"line_start":135,"line_end":135,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7495}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107535,"byte_end":1107547,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7543}],"docs":"","sig":null,"attributes":[]},{"id":871,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107990,"byte_end":1108002,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7548}],"docs":"","sig":null,"attributes":[]},{"id":872,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1116718,"byte_end":1116720,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":873,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1118059,"byte_end":1118061,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592},{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7595},{"krate":0,"index":7596},{"krate":0,"index":7597}],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121831,"byte_end":1121833,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7601},{"krate":0,"index":7605},{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7612},{"krate":0,"index":7613}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1127196,"byte_end":1127202,"line_start":383,"line_end":383,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7629}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128519,"byte_end":1128538,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128660,"byte_end":1128679,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7649}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128975,"byte_end":1128994,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129277,"byte_end":1129296,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7661},{"krate":0,"index":7666},{"krate":0,"index":7671},{"krate":0,"index":7676},{"krate":0,"index":7677}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133384,"byte_end":1133386,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133595,"byte_end":1133597,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7716},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7721}],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1137524,"byte_end":1137526,"line_start":159,"line_end":159,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7728},{"krate":0,"index":7732},{"krate":0,"index":7736},{"krate":0,"index":7740},{"krate":0,"index":7741}],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1141385,"byte_end":1141391,"line_start":292,"line_end":292,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1142925,"byte_end":1142930,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143045,"byte_end":1143050,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7789},{"krate":0,"index":7790},{"krate":0,"index":7791},{"krate":0,"index":7792}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1157652,"byte_end":1157664,"line_start":491,"line_end":491,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7807},{"krate":0,"index":7808},{"krate":0,"index":7809},{"krate":0,"index":7810}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161040,"byte_end":1161052,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7835},{"krate":0,"index":7839},{"krate":0,"index":7843},{"krate":0,"index":7847},{"krate":0,"index":7850},{"krate":0,"index":7854},{"krate":0,"index":7858},{"krate":0,"index":7861},{"krate":0,"index":7865},{"krate":0,"index":7869},{"krate":0,"index":7875},{"krate":0,"index":7881},{"krate":0,"index":7885},{"krate":0,"index":7889},{"krate":0,"index":7895},{"krate":0,"index":7901},{"krate":0,"index":7906}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1173716,"byte_end":1173728,"line_start":443,"line_end":443,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7915},{"krate":0,"index":7919},{"krate":0,"index":7923},{"krate":0,"index":7927},{"krate":0,"index":7930},{"krate":0,"index":7934},{"krate":0,"index":7938},{"krate":0,"index":7941},{"krate":0,"index":7945},{"krate":0,"index":7949},{"krate":0,"index":7955},{"krate":0,"index":7961},{"krate":0,"index":7965},{"krate":0,"index":7969},{"krate":0,"index":7975},{"krate":0,"index":7981},{"krate":0,"index":7986}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187232,"byte_end":1187235,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187592,"byte_end":1187595,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8030},{"krate":0,"index":8031},{"krate":0,"index":8034},{"krate":0,"index":8035},{"krate":0,"index":8036},{"krate":0,"index":8037},{"krate":0,"index":8039},{"krate":0,"index":8040},{"krate":0,"index":8042}],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1206821,"byte_end":1206827,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8051},{"krate":0,"index":8052},{"krate":0,"index":8053},{"krate":0,"index":8054},{"krate":0,"index":8055}],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212248,"byte_end":1212262,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212442,"byte_end":1212456,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8085},{"krate":0,"index":8086},{"krate":0,"index":8088},{"krate":0,"index":8089},{"krate":0,"index":8090}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220495,"byte_end":1220507,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8099}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225511,"byte_end":1225531,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225722,"byte_end":1225742,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":8121},{"krate":0,"index":8122},{"krate":0,"index":8123},{"krate":0,"index":8124},{"krate":0,"index":8125},{"krate":0,"index":8127},{"krate":0,"index":8128},{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229563,"byte_end":1229575,"line_start":166,"line_end":166,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8134}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4054,"byte_end":4058,"line_start":123,"line_end":123,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14861,"byte_end":14870,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14890,"byte_end":14900,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14910,"byte_end":14921,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14931,"byte_end":14948,"line_start":7,"line_end":7,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":380}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14958,"byte_end":14967,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":463}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":14977,"byte_end":14981,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":584}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15000,"byte_end":15007,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1005}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15163,"byte_end":15171,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2637}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/mod.rs","byte_start":15429,"byte_end":15435,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3877}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4109,"byte_end":4117,"line_start":126,"line_end":126,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3899}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/lib.rs","byte_start":4162,"byte_end":4168,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7104}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1031748,"byte_end":1031757,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":7105}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032065,"byte_end":1032071,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7422}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/mod.rs","byte_start":1032097,"byte_end":1032108,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7496}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16569,"byte_end":16572,"line_start":19,"line_end":19,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":16575,"byte_end":16580,"line_start":19,"line_end":19,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17333,"byte_end":17342,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":17362,"byte_end":17371,"line_start":37,"line_end":37,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18565,"byte_end":18574,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18588,"byte_end":18597,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":18862,"byte_end":18878,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19254,"byte_end":19263,"line_start":88,"line_end":88,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19273,"byte_end":19282,"line_start":88,"line_end":88,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19308,"byte_end":19326,"line_start":88,"line_end":88,"column_start":59,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/allocator.rs","byte_start":19501,"byte_end":19517,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":20400,"byte_end":20406,"line_start":20,"line_end":20,"column_start":49,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":21376,"byte_end":21382,"line_start":53,"line_end":53,"column_start":56,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":25161,"byte_end":25167,"line_start":202,"line_end":202,"column_start":60,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":26376,"byte_end":26382,"line_start":238,"line_end":238,"column_start":76,"column_end":82},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":27323,"byte_end":27329,"line_start":271,"line_end":271,"column_start":46,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":37441,"byte_end":37447,"line_start":558,"line_end":558,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":50946,"byte_end":50952,"line_start":960,"line_end":960,"column_start":53,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":64347,"byte_end":64353,"line_start":1334,"line_end":1334,"column_start":53,"column_end":59},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/blas.rs","byte_start":69681,"byte_end":69693,"line_start":1482,"line_end":1482,"column_start":44,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77823,"byte_end":77828,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":333},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":77918,"byte_end":77933,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78245,"byte_end":78260,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78334,"byte_end":78349,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":78423,"byte_end":78438,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79791,"byte_end":79807,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":8254},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":79818,"byte_end":79837,"line_start":73,"line_end":73,"column_start":32,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":8267},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":80037,"byte_end":80052,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":80134,"byte_end":80149,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/constraint.rs","byte_start":80231,"byte_end":80246,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":88433,"byte_end":88449,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":89507,"byte_end":89523,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":90447,"byte_end":90463,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":91406,"byte_end":91422,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":92311,"byte_end":92327,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":93170,"byte_end":93186,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":94062,"byte_end":94078,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":94505,"byte_end":94521,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":94948,"byte_end":94964,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/default_allocator.rs","byte_start":95395,"byte_end":95411,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":96251,"byte_end":96258,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":9829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97065,"byte_end":97072,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":9829},"to":{"krate":0,"index":491}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97100,"byte_end":97107,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":9829},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97290,"byte_end":97293,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97296,"byte_end":97301,"line_start":60,"line_end":60,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97304,"byte_end":97308,"line_start":60,"line_end":60,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97311,"byte_end":97320,"line_start":60,"line_end":60,"column_start":37,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97323,"byte_end":97327,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97330,"byte_end":97334,"line_start":60,"line_end":60,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":97972,"byte_end":97979,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":9829},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":98234,"byte_end":98241,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9829},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":98390,"byte_end":98397,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9829},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":100999,"byte_end":101002,"line_start":193,"line_end":193,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":495},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101318,"byte_end":101323,"line_start":207,"line_end":207,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101326,"byte_end":101329,"line_start":207,"line_end":207,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101332,"byte_end":101340,"line_start":207,"line_end":207,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":36,"index":609},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101585,"byte_end":101587,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":10035},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101873,"byte_end":101875,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":10035},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":101994,"byte_end":101996,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":36,"index":2397},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":104376,"byte_end":104380,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":104943,"byte_end":104947,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":105809,"byte_end":105813,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":106457,"byte_end":106461,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":106641,"byte_end":106645,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":106780,"byte_end":106784,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":107212,"byte_end":107216,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/dimension.rs","byte_start":107428,"byte_end":107432,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":36,"index":6290},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":112826,"byte_end":112833,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":13425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":113030,"byte_end":113037,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":13425},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":113736,"byte_end":113743,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":13425},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":114157,"byte_end":114167,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":114522,"byte_end":114532,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115204,"byte_end":115214,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115609,"byte_end":115619,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":13440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":115823,"byte_end":115833,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":13440},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":116535,"byte_end":116545,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":13440},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":116965,"byte_end":116978,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":117336,"byte_end":117349,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/iter.rs","byte_start":118024,"byte_end":118037,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":5490}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":118979,"byte_end":118985,"line_start":24,"line_end":24,"column_start":71,"column_end":77},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":119214,"byte_end":119220,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":119685,"byte_end":119691,"line_start":54,"line_end":54,"column_start":77,"column_end":83},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":119906,"byte_end":119912,"line_start":62,"line_end":62,"column_start":57,"column_end":63},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":120321,"byte_end":120327,"line_start":84,"line_end":84,"column_start":36,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":120929,"byte_end":120935,"line_start":114,"line_end":114,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":132738,"byte_end":132746,"line_start":378,"line_end":378,"column_start":47,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":5401}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":133013,"byte_end":133021,"line_start":388,"line_end":388,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":5401}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":134090,"byte_end":134098,"line_start":418,"line_end":418,"column_start":74,"column_end":82},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":5401}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":134402,"byte_end":134410,"line_start":428,"line_end":428,"column_start":64,"column_end":72},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":5401}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":139984,"byte_end":139990,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":140457,"byte_end":140463,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":141061,"byte_end":141067,"line_start":639,"line_end":639,"column_start":66,"column_end":72},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":141554,"byte_end":141560,"line_start":656,"line_end":656,"column_start":74,"column_end":80},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":142114,"byte_end":142120,"line_start":675,"line_end":675,"column_start":31,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":147770,"byte_end":147776,"line_start":846,"line_end":846,"column_start":66,"column_end":72},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148389,"byte_end":148396,"line_start":871,"line_end":871,"column_start":39,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":5405}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":148704,"byte_end":148711,"line_start":881,"line_end":881,"column_start":62,"column_end":69},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":5405}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/ops.rs","byte_start":149015,"byte_end":149021,"line_start":891,"line_end":891,"column_start":54,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154163,"byte_end":154168,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":154171,"byte_end":154176,"line_start":39,"line_end":39,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":157367,"byte_end":157374,"line_start":120,"line_end":120,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":159734,"byte_end":159741,"line_start":178,"line_end":178,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":160153,"byte_end":160170,"line_start":188,"line_end":188,"column_start":5,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1065},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/storage.rs","byte_start":160182,"byte_end":160192,"line_start":188,"line_end":188,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1053},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":187894,"byte_end":187906,"line_start":51,"line_end":51,"column_start":27,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":188177,"byte_end":188189,"line_start":66,"line_end":66,"column_start":24,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":188441,"byte_end":188453,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":188748,"byte_end":188760,"line_start":94,"line_end":94,"column_start":28,"column_end":40},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2284}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189006,"byte_end":189018,"line_start":107,"line_end":107,"column_start":25,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189286,"byte_end":189298,"line_start":121,"line_end":121,"column_start":24,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189516,"byte_end":189528,"line_start":132,"line_end":132,"column_start":25,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189811,"byte_end":189823,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":189990,"byte_end":190002,"line_start":158,"line_end":158,"column_start":29,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":190283,"byte_end":190295,"line_start":172,"line_end":172,"column_start":43,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":191416,"byte_end":191428,"line_start":228,"line_end":228,"column_start":46,"column_end":58},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":191856,"byte_end":191868,"line_start":248,"line_end":248,"column_start":53,"column_end":65},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/array_storage.rs","byte_start":192123,"byte_end":192135,"line_start":259,"line_end":259,"column_start":56,"column_end":68},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":196551,"byte_end":196558,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":197837,"byte_end":197844,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":198646,"byte_end":198653,"line_start":96,"line_end":96,"column_start":20,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":202711,"byte_end":202723,"line_start":204,"line_end":204,"column_start":5,"column_end":17},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":205851,"byte_end":205863,"line_start":299,"line_end":299,"column_start":5,"column_end":17},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/cg.rs","byte_start":208817,"byte_end":208829,"line_start":385,"line_end":385,"column_start":60,"column_end":72},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":211002,"byte_end":211008,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/componentwise.rs","byte_start":218869,"byte_end":218875,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":220427,"byte_end":220435,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":229831,"byte_end":229838,"line_start":305,"line_end":305,"column_start":17,"column_end":24},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249041,"byte_end":249049,"line_start":740,"line_end":740,"column_start":42,"column_end":50},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1089},"to":{"krate":19,"index":301}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249350,"byte_end":249357,"line_start":756,"line_end":756,"column_start":29,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1093},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249581,"byte_end":249589,"line_start":767,"line_end":767,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1089},"to":{"krate":19,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":249930,"byte_end":249938,"line_start":783,"line_end":783,"column_start":69,"column_end":77},"kind":{"Impl":{"id":126}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":251004,"byte_end":251012,"line_start":818,"line_end":818,"column_start":70,"column_end":78},"kind":{"Impl":{"id":127}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction.rs","byte_start":258723,"byte_end":258730,"line_start":1009,"line_end":1009,"column_start":21,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":262738,"byte_end":262751,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":264755,"byte_end":264771,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":267802,"byte_end":267815,"line_start":135,"line_end":135,"column_start":37,"column_end":50},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/construction_slice.rs","byte_start":268966,"byte_end":268982,"line_start":160,"line_end":160,"column_start":37,"column_end":53},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":276852,"byte_end":276860,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1089},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":287513,"byte_end":287519,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":287985,"byte_end":287991,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":288378,"byte_end":288384,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":288727,"byte_end":288733,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":289205,"byte_end":289211,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":289604,"byte_end":289610,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":289952,"byte_end":289963,"line_start":438,"line_end":438,"column_start":9,"column_end":20},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":17229},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":291031,"byte_end":291042,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":17229},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":292114,"byte_end":292128,"line_start":512,"line_end":512,"column_start":9,"column_end":23},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":17285},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":293576,"byte_end":293588,"line_start":566,"line_end":566,"column_start":46,"column_end":58},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1481},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":293753,"byte_end":293768,"line_start":573,"line_end":573,"column_start":50,"column_end":65},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":293987,"byte_end":293995,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":294607,"byte_end":294615,"line_start":602,"line_end":602,"column_start":9,"column_end":17},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":295323,"byte_end":295331,"line_start":625,"line_end":625,"column_start":9,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/conversion.rs","byte_start":296232,"byte_end":296240,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":298221,"byte_end":298227,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":300930,"byte_end":300936,"line_start":102,"line_end":102,"column_start":57,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":306628,"byte_end":306634,"line_start":265,"line_end":265,"column_start":49,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":307871,"byte_end":307877,"line_start":303,"line_end":303,"column_start":54,"column_end":60},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325083,"byte_end":325090,"line_start":817,"line_end":817,"column_start":17,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":325883,"byte_end":325891,"line_start":836,"line_end":836,"column_start":25,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":326855,"byte_end":326863,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":329897,"byte_end":329903,"line_start":962,"line_end":962,"column_start":29,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":331413,"byte_end":331419,"line_start":1010,"line_end":1010,"column_start":26,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/edition.rs","byte_start":332031,"byte_end":332037,"line_start":1031,"line_end":1031,"column_start":53,"column_end":59},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":335341,"byte_end":335346,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":2,"index":33102},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":336505,"byte_end":336514,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":2,"index":33127},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":337533,"byte_end":337542,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":2,"index":33127},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":338074,"byte_end":338083,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":33086},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":338584,"byte_end":338598,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"kind":{"Impl":{"id":164}},"from":{"krate":2,"index":33171},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":340103,"byte_end":340110,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"kind":{"Impl":{"id":165}},"from":{"krate":2,"index":33148},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":341081,"byte_end":341097,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"kind":{"Impl":{"id":166}},"from":{"krate":2,"index":33194},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":342169,"byte_end":342174,"line_start":326,"line_end":326,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":2708}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":343384,"byte_end":343395,"line_start":362,"line_end":362,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":2708},"to":{"krate":0,"index":2719}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/indexing.rs","byte_start":347030,"byte_end":347036,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359565,"byte_end":359571,"line_start":88,"line_end":88,"column_start":63,"column_end":69},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":359817,"byte_end":359823,"line_start":97,"line_end":97,"column_start":30,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":361847,"byte_end":361853,"line_start":188,"line_end":188,"column_start":36,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":362249,"byte_end":362255,"line_start":200,"line_end":200,"column_start":54,"column_end":60},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":378406,"byte_end":378412,"line_start":733,"line_end":733,"column_start":57,"column_end":63},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386377,"byte_end":386383,"line_start":983,"line_end":983,"column_start":43,"column_end":49},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":386764,"byte_end":386770,"line_start":993,"line_end":993,"column_start":46,"column_end":52},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387193,"byte_end":387199,"line_start":1003,"line_end":1003,"column_start":64,"column_end":70},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387458,"byte_end":387464,"line_start":1011,"line_end":1011,"column_start":67,"column_end":73},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":387729,"byte_end":387735,"line_start":1019,"line_end":1019,"column_start":49,"column_end":55},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":388213,"byte_end":388219,"line_start":1037,"line_end":1037,"column_start":64,"column_end":70},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391183,"byte_end":391189,"line_start":1134,"line_end":1134,"column_start":67,"column_end":73},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":391845,"byte_end":391851,"line_start":1154,"line_end":1154,"column_start":59,"column_end":65},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":392975,"byte_end":392987,"line_start":1190,"line_end":1190,"column_start":46,"column_end":58},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":394537,"byte_end":394549,"line_start":1247,"line_end":1247,"column_start":56,"column_end":68},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":395564,"byte_end":395570,"line_start":1283,"line_end":1283,"column_start":5,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":396342,"byte_end":396348,"line_start":1304,"line_end":1304,"column_start":57,"column_end":63},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397296,"byte_end":397302,"line_start":1332,"line_end":1332,"column_start":57,"column_end":63},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":397921,"byte_end":397927,"line_start":1350,"line_end":1350,"column_start":42,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":17003},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":398391,"byte_end":398397,"line_start":1371,"line_end":1371,"column_start":43,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":17003},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":398855,"byte_end":398861,"line_start":1393,"line_end":1393,"column_start":39,"column_end":45},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":17003},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":399347,"byte_end":399353,"line_start":1413,"line_end":1413,"column_start":43,"column_end":49},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":402025,"byte_end":402031,"line_start":1505,"line_end":1505,"column_start":35,"column_end":41},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":402166,"byte_end":402172,"line_start":1512,"line_end":1512,"column_start":67,"column_end":73},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":406140,"byte_end":406146,"line_start":1631,"line_end":1631,"column_start":5,"column_end":11},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410201,"byte_end":410207,"line_start":1732,"line_end":1732,"column_start":44,"column_end":50},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":410834,"byte_end":410840,"line_start":1753,"line_end":1753,"column_start":64,"column_end":70},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":411586,"byte_end":411592,"line_start":1776,"line_end":1776,"column_start":5,"column_end":11},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":412359,"byte_end":412363,"line_start":1800,"line_end":1800,"column_start":46,"column_end":50},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":17389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":414387,"byte_end":414391,"line_start":1865,"line_end":1865,"column_start":42,"column_end":46},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":17389},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":414818,"byte_end":414822,"line_start":1884,"line_end":1884,"column_start":43,"column_end":47},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":17389},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":415319,"byte_end":415323,"line_start":1907,"line_end":1907,"column_start":39,"column_end":43},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":17389},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix.rs","byte_start":415708,"byte_end":415714,"line_start":1924,"line_end":1924,"column_start":27,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":17003},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_simba.rs","byte_start":416422,"byte_end":416430,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1089},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":421671,"byte_end":421683,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":17122},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":421798,"byte_end":421810,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":17122},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":424465,"byte_end":424480,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":17178},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425074,"byte_end":425086,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":17122},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425203,"byte_end":425218,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":17178},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425338,"byte_end":425353,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":17178},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425485,"byte_end":425497,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":17122},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425621,"byte_end":425636,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":17178},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425763,"byte_end":425778,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":17178},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":425857,"byte_end":425863,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":445940,"byte_end":445945,"line_start":730,"line_end":730,"column_start":32,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":2,"index":33102},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":446294,"byte_end":446303,"line_start":749,"line_end":749,"column_start":32,"column_end":41},"kind":{"Impl":{"id":216}},"from":{"krate":2,"index":33127},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":446662,"byte_end":446669,"line_start":768,"line_end":768,"column_start":32,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":2,"index":33148},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":446996,"byte_end":447005,"line_start":787,"line_end":787,"column_start":32,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":2,"index":33086},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":447329,"byte_end":447335,"line_start":806,"line_end":806,"column_start":54,"column_end":60},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":448579,"byte_end":448585,"line_start":845,"line_end":845,"column_start":57,"column_end":63},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/matrix_slice.rs","byte_start":449908,"byte_end":449919,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":17229},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":451975,"byte_end":451988,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":452821,"byte_end":452827,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3455},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":453840,"byte_end":453851,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3458},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":454901,"byte_end":454907,"line_start":157,"line_end":157,"column_start":64,"column_end":70},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":459222,"byte_end":459228,"line_start":302,"line_end":302,"column_start":60,"column_end":66},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":460416,"byte_end":460422,"line_start":338,"line_end":338,"column_start":67,"column_end":73},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461432,"byte_end":461438,"line_start":370,"line_end":370,"column_start":63,"column_end":69},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":461956,"byte_end":461964,"line_start":387,"line_end":387,"column_start":54,"column_end":62},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1089},"to":{"krate":0,"index":3709}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":462481,"byte_end":462485,"line_start":414,"line_end":414,"column_start":53,"column_end":57},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/norm.rs","byte_start":462946,"byte_end":462953,"line_start":430,"line_end":430,"column_start":35,"column_end":42},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":468308,"byte_end":468314,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":470553,"byte_end":470559,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/properties.rs","byte_start":471115,"byte_end":471127,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471959,"byte_end":471964,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471967,"byte_end":471976,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471979,"byte_end":471984,"line_start":8,"line_end":8,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":471987,"byte_end":471990,"line_start":8,"line_end":8,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/scalar.rs","byte_start":472485,"byte_end":472486,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3620},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":472842,"byte_end":472848,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":474904,"byte_end":474910,"line_start":76,"line_end":76,"column_start":73,"column_end":79},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/statistics.rs","byte_start":477669,"byte_end":477675,"line_start":173,"line_end":173,"column_start":80,"column_end":86},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":487600,"byte_end":487604,"line_start":74,"line_end":74,"column_start":17,"column_end":21},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":17389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":489956,"byte_end":489960,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":17389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":490985,"byte_end":490989,"line_start":179,"line_end":179,"column_start":22,"column_end":26},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":492764,"byte_end":492768,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":493185,"byte_end":493189,"line_start":264,"line_end":264,"column_start":53,"column_end":57},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":493717,"byte_end":493721,"line_start":280,"line_end":280,"column_start":53,"column_end":57},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":494331,"byte_end":494335,"line_start":298,"line_end":298,"column_start":53,"column_end":57},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/unit.rs","byte_start":495110,"byte_end":495114,"line_start":320,"line_end":320,"column_start":54,"column_end":58},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":17389},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":497147,"byte_end":497157,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":17415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498644,"byte_end":498654,"line_start":88,"line_end":88,"column_start":42,"column_end":52},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":17415},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":498839,"byte_end":498849,"line_start":100,"line_end":100,"column_start":59,"column_end":69},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":499802,"byte_end":499812,"line_start":149,"line_end":149,"column_start":63,"column_end":73},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":500805,"byte_end":500815,"line_start":203,"line_end":203,"column_start":62,"column_end":72},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":501155,"byte_end":501165,"line_start":218,"line_end":218,"column_start":69,"column_end":79},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":501325,"byte_end":501335,"line_start":223,"line_end":223,"column_start":72,"column_end":82},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":501489,"byte_end":501499,"line_start":228,"line_end":228,"column_start":66,"column_end":76},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":502269,"byte_end":502279,"line_start":258,"line_end":258,"column_start":73,"column_end":83},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":502443,"byte_end":502453,"line_start":263,"line_end":263,"column_start":76,"column_end":86},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":17415},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":502572,"byte_end":502582,"line_start":268,"line_end":268,"column_start":31,"column_end":41},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":17415},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":503287,"byte_end":503297,"line_start":284,"line_end":284,"column_start":50,"column_end":60},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":17415},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":503779,"byte_end":503789,"line_start":297,"line_end":297,"column_start":50,"column_end":60},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":17415},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/base/vec_storage.rs","byte_start":504696,"byte_end":504706,"line_start":325,"line_end":325,"column_start":23,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":17415},"to":{"krate":2,"index":5451}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517125,"byte_end":517134,"line_start":8,"line_end":8,"column_start":52,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517137,"byte_end":517146,"line_start":8,"line_end":8,"column_start":64,"column_end":73},"kind":"SuperTrait","from":{"krate":30,"index":148},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":517149,"byte_end":517154,"line_start":8,"line_end":8,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":518102,"byte_end":518110,"line_start":33,"line_end":33,"column_start":63,"column_end":71},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":17841},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":519190,"byte_end":519204,"line_start":86,"line_end":86,"column_start":52,"column_end":66},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4827},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/abstract_rotation.rs","byte_start":520019,"byte_end":520030,"line_start":126,"line_end":126,"column_start":52,"column_end":63},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5251},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":521756,"byte_end":521761,"line_start":33,"line_end":33,"column_start":70,"column_end":75},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":522016,"byte_end":522021,"line_start":43,"line_end":43,"column_start":45,"column_end":50},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":523467,"byte_end":523472,"line_start":101,"line_end":101,"column_start":29,"column_end":34},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":17451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":527091,"byte_end":527096,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":17451},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":527507,"byte_end":527512,"line_start":239,"line_end":239,"column_start":57,"column_end":62},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":17451},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":527988,"byte_end":527993,"line_start":261,"line_end":261,"column_start":49,"column_end":54},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":17451},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":528365,"byte_end":528370,"line_start":277,"line_end":277,"column_start":41,"column_end":46},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":528463,"byte_end":528468,"line_start":279,"line_end":279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":528678,"byte_end":528683,"line_start":289,"line_end":289,"column_start":57,"column_end":62},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":529332,"byte_end":529337,"line_start":322,"line_end":322,"column_start":46,"column_end":51},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":17451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point.rs","byte_start":530099,"byte_end":530104,"line_start":351,"line_end":351,"column_start":61,"column_end":66},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":531474,"byte_end":531479,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":17451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534677,"byte_end":534682,"line_start":118,"line_end":118,"column_start":51,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":17451},"to":{"krate":19,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_construction.rs","byte_start":534978,"byte_end":534986,"line_start":133,"line_end":133,"column_start":59,"column_end":67},"kind":{"Impl":{"id":277}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":538337,"byte_end":538342,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":17451},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":539029,"byte_end":539034,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":17451},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":541426,"byte_end":541433,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":541700,"byte_end":541705,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":541948,"byte_end":541953,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":542428,"byte_end":542433,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":542997,"byte_end":543002,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_conversion.rs","byte_start":543675,"byte_end":543680,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_ops.rs","byte_start":546232,"byte_end":546237,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_ops.rs","byte_start":546457,"byte_end":546462,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_ops.rs","byte_start":546697,"byte_end":546702,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":17451},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/point_simba.rs","byte_start":553978,"byte_end":553983,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":17451},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":555923,"byte_end":555931,"line_start":35,"line_end":35,"column_start":70,"column_end":78},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":556192,"byte_end":556200,"line_start":45,"line_end":45,"column_start":45,"column_end":53},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":556358,"byte_end":556366,"line_start":52,"line_end":52,"column_start":39,"column_end":47},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":557899,"byte_end":557907,"line_start":114,"line_end":114,"column_start":29,"column_end":37},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":17841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":567251,"byte_end":567259,"line_start":364,"line_end":364,"column_start":36,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":17841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570295,"byte_end":570303,"line_start":446,"line_end":446,"column_start":41,"column_end":49},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570411,"byte_end":570419,"line_start":448,"line_end":448,"column_start":55,"column_end":63},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":570610,"byte_end":570618,"line_start":458,"line_end":458,"column_start":35,"column_end":43},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":17841},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":571038,"byte_end":571046,"line_start":477,"line_end":477,"column_start":36,"column_end":44},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":17841},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":571536,"byte_end":571544,"line_start":500,"line_end":500,"column_start":32,"column_end":40},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":17841},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation.rs","byte_start":571964,"byte_end":571972,"line_start":522,"line_end":522,"column_start":38,"column_end":46},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573335,"byte_end":573343,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":17841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_construction.rs","byte_start":573930,"byte_end":573938,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":17841},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":575054,"byte_end":575062,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":17841},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":575683,"byte_end":575692,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4385},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":576285,"byte_end":576294,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4383},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":576887,"byte_end":576895,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":17841},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":577553,"byte_end":577561,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":17841},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":578276,"byte_end":578284,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":17841},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":579234,"byte_end":579242,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":17841},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":580848,"byte_end":580855,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":580992,"byte_end":580999,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581132,"byte_end":581139,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581276,"byte_end":581283,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581466,"byte_end":581474,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":581955,"byte_end":581963,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":582526,"byte_end":582534,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_conversion.rs","byte_start":583262,"byte_end":583270,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_ops.rs","byte_start":585050,"byte_end":585058,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_simba.rs","byte_start":590516,"byte_end":590524,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":17841},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":592387,"byte_end":592396,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":599958,"byte_end":599966,"line_start":241,"line_end":241,"column_start":55,"column_end":63},"kind":{"Impl":{"id":375}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":600588,"byte_end":600597,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/rotation_specialization.rs","byte_start":622314,"byte_end":622322,"line_start":867,"line_end":867,"column_start":55,"column_end":63},"kind":{"Impl":{"id":377}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":624960,"byte_end":624970,"line_start":36,"line_end":36,"column_start":32,"column_end":42},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":625563,"byte_end":625573,"line_start":62,"line_end":62,"column_start":36,"column_end":46},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":625650,"byte_end":625660,"line_start":64,"line_end":64,"column_start":38,"column_end":48},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":625986,"byte_end":625996,"line_start":75,"line_end":75,"column_start":52,"column_end":62},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":626140,"byte_end":626150,"line_start":81,"line_end":81,"column_start":45,"column_end":55},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":626196,"byte_end":626206,"line_start":83,"line_end":83,"column_start":39,"column_end":49},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":626973,"byte_end":626983,"line_start":118,"line_end":118,"column_start":24,"column_end":34},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":18097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":632349,"byte_end":632359,"line_start":308,"line_end":308,"column_start":24,"column_end":34},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":18097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652283,"byte_end":652293,"line_start":923,"line_end":923,"column_start":59,"column_end":69},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":18097},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":652809,"byte_end":652819,"line_start":939,"line_end":939,"column_start":61,"column_end":71},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":18097},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":653410,"byte_end":653420,"line_start":958,"line_end":958,"column_start":53,"column_end":63},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":18097},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":653920,"byte_end":653930,"line_start":972,"line_end":972,"column_start":52,"column_end":62},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654284,"byte_end":654294,"line_start":985,"line_end":985,"column_start":35,"column_end":45},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":18097},"to":{"krate":0,"index":3709}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":654756,"byte_end":654770,"line_start":1009,"line_end":1009,"column_start":24,"column_end":38},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673251,"byte_end":673265,"line_start":1547,"line_end":1547,"column_start":32,"column_end":46},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":673383,"byte_end":673397,"line_start":1553,"line_end":1553,"column_start":52,"column_end":66},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":674012,"byte_end":674026,"line_start":1575,"line_end":1575,"column_start":59,"column_end":73},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4827},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":674365,"byte_end":674379,"line_start":1589,"line_end":1589,"column_start":61,"column_end":75},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4827},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion.rs","byte_start":674792,"byte_end":674806,"line_start":1607,"line_end":1607,"column_start":53,"column_end":67},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4827},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":675699,"byte_end":675709,"line_start":22,"line_end":22,"column_start":29,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":18097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":676701,"byte_end":676711,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":18097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678269,"byte_end":678279,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":18097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678804,"byte_end":678814,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":18097},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":678960,"byte_end":678970,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":18097},"to":{"krate":19,"index":301}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679234,"byte_end":679242,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"kind":{"Impl":{"id":402}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":679812,"byte_end":679826,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":703575,"byte_end":703589,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4827},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_construction.rs","byte_start":703762,"byte_end":703770,"line_start":804,"line_end":804,"column_start":60,"column_end":68},"kind":{"Impl":{"id":405}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":706401,"byte_end":706411,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":18097},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":706943,"byte_end":706957,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":707515,"byte_end":707529,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":708113,"byte_end":708127,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":708713,"byte_end":708727,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":709348,"byte_end":709362,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":709966,"byte_end":709980,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711326,"byte_end":711333,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711521,"byte_end":711530,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711717,"byte_end":711731,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":711926,"byte_end":711933,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":712136,"byte_end":712146,"line_start":261,"line_end":261,"column_start":50,"column_end":60},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":712316,"byte_end":712326,"line_start":268,"line_end":268,"column_start":76,"column_end":86},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":712634,"byte_end":712644,"line_start":279,"line_end":279,"column_start":76,"column_end":86},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":713041,"byte_end":713051,"line_start":295,"line_end":295,"column_start":76,"column_end":86},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":713557,"byte_end":713567,"line_start":315,"line_end":315,"column_start":77,"column_end":87},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":714311,"byte_end":714325,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":714689,"byte_end":714703,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":715168,"byte_end":715182,"line_start":373,"line_end":373,"column_start":9,"column_end":23},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_conversion.rs","byte_start":715780,"byte_end":715794,"line_start":394,"line_end":394,"column_start":9,"column_end":23},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4827},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_coordinates.rs","byte_start":716778,"byte_end":716788,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_coordinates.rs","byte_start":716965,"byte_end":716975,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2284}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_ops.rs","byte_start":718642,"byte_end":718652,"line_start":65,"line_end":65,"column_start":41,"column_end":51},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_ops.rs","byte_start":718819,"byte_end":718829,"line_start":74,"line_end":74,"column_start":44,"column_end":54},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_ops.rs","byte_start":732163,"byte_end":732173,"line_start":553,"line_end":553,"column_start":32,"column_end":42},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":18097},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_simba.rs","byte_start":736312,"byte_end":736322,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":18097},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/quaternion_simba.rs","byte_start":737309,"byte_end":737323,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":4827},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":738826,"byte_end":738833,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"kind":{"Impl":{"id":475}},"from":{"krate":31,"index":471},"to":{"krate":0,"index":3709}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":739579,"byte_end":739590,"line_start":43,"line_end":43,"column_start":24,"column_end":35},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749758,"byte_end":749769,"line_start":365,"line_end":365,"column_start":52,"column_end":63},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":749933,"byte_end":749944,"line_start":371,"line_end":371,"column_start":34,"column_end":45},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5251},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":750289,"byte_end":750300,"line_start":385,"line_end":385,"column_start":35,"column_end":46},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5251},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex.rs","byte_start":750736,"byte_end":750747,"line_start":403,"line_end":403,"column_start":31,"column_end":42},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5251},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":751496,"byte_end":751507,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":760869,"byte_end":760880,"line_start":283,"line_end":283,"column_start":32,"column_end":43},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5251},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_construction.rs","byte_start":761050,"byte_end":761058,"line_start":293,"line_end":293,"column_start":57,"column_end":65},"kind":{"Impl":{"id":483}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":762427,"byte_end":762438,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":762970,"byte_end":762981,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":763573,"byte_end":763584,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":764170,"byte_end":764181,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":764802,"byte_end":764813,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":765417,"byte_end":765428,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":765900,"byte_end":765909,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":4383},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766093,"byte_end":766104,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766296,"byte_end":766303,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766491,"byte_end":766498,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":766732,"byte_end":766743,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":767154,"byte_end":767165,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":767620,"byte_end":767631,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_conversion.rs","byte_start":768269,"byte_end":768280,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":770200,"byte_end":770211,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":770710,"byte_end":770721,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":771295,"byte_end":771306,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":771874,"byte_end":771885,"line_start":115,"line_end":115,"column_start":56,"column_end":67},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":778680,"byte_end":778691,"line_start":323,"line_end":323,"column_start":54,"column_end":65},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":778899,"byte_end":778910,"line_start":333,"line_end":333,"column_start":62,"column_end":73},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779144,"byte_end":779155,"line_start":344,"line_end":344,"column_start":54,"column_end":65},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779363,"byte_end":779374,"line_start":354,"line_end":354,"column_start":62,"column_end":73},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779607,"byte_end":779618,"line_start":365,"line_end":365,"column_start":55,"column_end":66},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":779872,"byte_end":779883,"line_start":376,"line_end":376,"column_start":63,"column_end":74},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780161,"byte_end":780172,"line_start":388,"line_end":388,"column_start":55,"column_end":66},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780426,"byte_end":780437,"line_start":399,"line_end":399,"column_start":63,"column_end":74},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":5251},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780714,"byte_end":780722,"line_start":411,"line_end":411,"column_start":54,"column_end":62},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":780999,"byte_end":781007,"line_start":422,"line_end":422,"column_start":62,"column_end":70},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":2175}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":781308,"byte_end":781316,"line_start":434,"line_end":434,"column_start":54,"column_end":62},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_ops.rs","byte_start":781593,"byte_end":781601,"line_start":445,"line_end":445,"column_start":62,"column_end":70},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/unit_complex_simba.rs","byte_start":782018,"byte_end":782029,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5251},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784108,"byte_end":784119,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784340,"byte_end":784351,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":784469,"byte_end":784480,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":785947,"byte_end":785958,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":18666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":788999,"byte_end":789010,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":18666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":789608,"byte_end":789619,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":18666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790200,"byte_end":790211,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790316,"byte_end":790327,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790548,"byte_end":790559,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":18666},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":790970,"byte_end":790981,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":18666},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":791457,"byte_end":791468,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":18666},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation.rs","byte_start":791884,"byte_end":791895,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793262,"byte_end":793273,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":18666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":793946,"byte_end":793957,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":18666},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_construction.rs","byte_start":794146,"byte_end":794154,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"kind":{"Impl":{"id":551}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":797230,"byte_end":797241,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":18666},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":797867,"byte_end":797878,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":18666},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":798499,"byte_end":798510,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":18666},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":799188,"byte_end":799199,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":18666},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":800000,"byte_end":800011,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":18666},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":801143,"byte_end":801150,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":801442,"byte_end":801453,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":801701,"byte_end":801712,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":802170,"byte_end":802181,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":802709,"byte_end":802720,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_conversion.rs","byte_start":803389,"byte_end":803400,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":18666},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/translation_simba.rs","byte_start":812244,"byte_end":812255,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":18666},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":815618,"byte_end":815626,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":815907,"byte_end":815915,"line_start":85,"line_end":85,"column_start":61,"column_end":69},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816046,"byte_end":816054,"line_start":92,"line_end":92,"column_start":49,"column_end":57},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":816340,"byte_end":816348,"line_start":105,"line_end":105,"column_start":56,"column_end":64},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":18824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":817230,"byte_end":817238,"line_start":132,"line_end":132,"column_start":63,"column_end":71},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":18824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":825701,"byte_end":825709,"line_start":359,"line_end":359,"column_start":39,"column_end":47},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":18824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":826889,"byte_end":826897,"line_start":393,"line_end":393,"column_start":46,"column_end":54},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":827045,"byte_end":827053,"line_start":400,"line_end":400,"column_start":53,"column_end":61},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":827346,"byte_end":827354,"line_start":411,"line_end":411,"column_start":49,"column_end":57},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":18824},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":827903,"byte_end":827911,"line_start":431,"line_end":431,"column_start":50,"column_end":58},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":18824},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":828578,"byte_end":828586,"line_start":457,"line_end":457,"column_start":46,"column_end":54},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":18824},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry.rs","byte_start":829169,"byte_end":829177,"line_start":481,"line_end":481,"column_start":67,"column_end":75},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":831530,"byte_end":831538,"line_start":22,"line_end":22,"column_start":63,"column_end":71},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":18824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":833089,"byte_end":833097,"line_start":70,"line_end":70,"column_start":71,"column_end":79},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":18824},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":833367,"byte_end":833375,"line_start":82,"line_end":82,"column_start":71,"column_end":79},"kind":{"Impl":{"id":588}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":834185,"byte_end":834193,"line_start":116,"line_end":116,"column_start":24,"column_end":32},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":18824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_construction.rs","byte_start":835286,"byte_end":835294,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":18824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":846456,"byte_end":846464,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":18824},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":847352,"byte_end":847360,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":18824},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":848096,"byte_end":848104,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":18824},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":849268,"byte_end":849276,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":18824},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":850981,"byte_end":850988,"line_start":154,"line_end":154,"column_start":67,"column_end":74},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":851387,"byte_end":851395,"line_start":167,"line_end":167,"column_start":9,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":852126,"byte_end":852134,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":853089,"byte_end":853097,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_conversion.rs","byte_start":854361,"byte_end":854369,"line_start":252,"line_end":252,"column_start":9,"column_end":17},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":18824},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/isometry_simba.rs","byte_start":876016,"byte_end":876024,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":18824},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":879778,"byte_end":879788,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880101,"byte_end":880111,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880274,"byte_end":880284,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":880511,"byte_end":880521,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881486,"byte_end":881496,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":881746,"byte_end":881756,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":888899,"byte_end":888909,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889534,"byte_end":889544,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889692,"byte_end":889702,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":889987,"byte_end":889997,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":19432},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":890538,"byte_end":890548,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":19432},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":891207,"byte_end":891217,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":19432},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity.rs","byte_start":891753,"byte_end":891763,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":893436,"byte_end":893446,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894150,"byte_end":894160,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":19432},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894465,"byte_end":894473,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"kind":{"Impl":{"id":676}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":894901,"byte_end":894911,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":896494,"byte_end":896504,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_construction.rs","byte_start":897307,"byte_end":897317,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":19432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":907221,"byte_end":907231,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":19432},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":908132,"byte_end":908142,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":19432},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":909296,"byte_end":909306,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":19432},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":912733,"byte_end":912740,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":913150,"byte_end":913160,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":913900,"byte_end":913910,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":914854,"byte_end":914864,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_conversion.rs","byte_start":916077,"byte_end":916087,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":19432},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/similarity_simba.rs","byte_start":937983,"byte_end":937993,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":19432},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942629,"byte_end":942632,"line_start":21,"line_end":21,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942635,"byte_end":942640,"line_start":21,"line_end":21,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":6831},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942643,"byte_end":942647,"line_start":21,"line_end":21,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942650,"byte_end":942659,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1790},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":942662,"byte_end":942666,"line_start":21,"line_end":21,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943356,"byte_end":943365,"line_start":39,"line_end":39,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":6621},"to":{"krate":0,"index":6626}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943748,"byte_end":943757,"line_start":47,"line_end":47,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":6621},"to":{"krate":0,"index":6629}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943949,"byte_end":943958,"line_start":52,"line_end":52,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":6621},"to":{"krate":0,"index":6631}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":943998,"byte_end":944000,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":6634},"to":{"krate":0,"index":6631}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944543,"byte_end":944551,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":20099},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":944786,"byte_end":944797,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":20114},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":945049,"byte_end":945056,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":20129},"to":{"krate":0,"index":6621}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":945767,"byte_end":945768,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":6652},"to":{"krate":0,"index":6626}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":946385,"byte_end":946386,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":6656},"to":{"krate":0,"index":6629}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":947397,"byte_end":947406,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":20159},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":947621,"byte_end":947630,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":20159},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":948871,"byte_end":948880,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":20159},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949040,"byte_end":949049,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":20159},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":949293,"byte_end":949302,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":20159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":957520,"byte_end":957529,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":20159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":958347,"byte_end":958356,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":20159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959236,"byte_end":959245,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":20159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":959687,"byte_end":959696,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":20159},"to":{"krate":18,"index":12}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":960156,"byte_end":960165,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":20159},"to":{"krate":18,"index":56}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform.rs","byte_start":960694,"byte_end":960703,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":20159},"to":{"krate":18,"index":92}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":962546,"byte_end":962555,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":20159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_construction.rs","byte_start":963659,"byte_end":963668,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":20159},"to":{"krate":19,"index":311}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_conversion.rs","byte_start":964201,"byte_end":964210,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":20159},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_conversion.rs","byte_start":965035,"byte_end":965044,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":20159},"to":{"krate":30,"index":174}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_conversion.rs","byte_start":965821,"byte_end":965828,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_ops.rs","byte_start":968131,"byte_end":968140,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":20159},"to":{"krate":2,"index":2352}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_ops.rs","byte_start":968496,"byte_end":968505,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":20159},"to":{"krate":2,"index":2356}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/transform_simba.rs","byte_start":989783,"byte_end":989792,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":20159},"to":{"krate":30,"index":628}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/reflection.rs","byte_start":991624,"byte_end":991634,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":6915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":995978,"byte_end":995991,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":6964},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":996028,"byte_end":996041,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":6964},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":996191,"byte_end":996204,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":6964},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":996349,"byte_end":996362,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":6964},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":997101,"byte_end":997114,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":6964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1021173,"byte_end":1021181,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"kind":{"Impl":{"id":842}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/orthographic.rs","byte_start":1022234,"byte_end":1022241,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1022983,"byte_end":1022995,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":7038},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1023032,"byte_end":1023044,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":7038},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1023194,"byte_end":1023206,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":7038},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1023351,"byte_end":1023363,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":7038},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1024100,"byte_end":1024112,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":7038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1030755,"byte_end":1030763,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"kind":{"Impl":{"id":849}},"from":{"krate":23,"index":1980},"to":{"krate":23,"index":537}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/geometry/perspective.rs","byte_start":1031556,"byte_end":1031563,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1037345,"byte_end":1037355,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":20852},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1037713,"byte_end":1037723,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":20852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/bidiagonal.rs","byte_start":1048266,"byte_end":1048272,"line_start":363,"line_end":363,"column_start":66,"column_end":72},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049795,"byte_end":1049803,"line_start":34,"line_end":34,"column_start":44,"column_end":52},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":20870},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1049922,"byte_end":1049930,"line_start":41,"line_end":41,"column_start":35,"column_end":43},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":20870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1053568,"byte_end":1053576,"line_start":143,"line_end":143,"column_start":31,"column_end":39},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":20870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/cholesky.rs","byte_start":1062699,"byte_end":1062711,"line_start":367,"line_end":367,"column_start":64,"column_end":76},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/convolution.rs","byte_start":1063424,"byte_end":1063430,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/determinant.rs","byte_start":1067564,"byte_end":1067576,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/exp.rs","byte_start":1070565,"byte_end":1070579,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":7301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/exp.rs","byte_start":1081635,"byte_end":1081642,"line_start":428,"line_end":428,"column_start":26,"column_end":33},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085351,"byte_end":1085360,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":20882},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1085591,"byte_end":1085600,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":20882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1088936,"byte_end":1088945,"line_start":155,"line_end":155,"column_start":49,"column_end":58},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":20882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/full_piv_lu.rs","byte_start":1092198,"byte_end":1092204,"line_start":261,"line_end":261,"column_start":66,"column_end":72},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/givens.rs","byte_start":1093036,"byte_end":1093050,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":20899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099027,"byte_end":1099037,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":20911},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1099228,"byte_end":1099238,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":20911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/hessenberg.rs","byte_start":1102299,"byte_end":1102311,"line_start":135,"line_end":135,"column_start":59,"column_end":71},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107535,"byte_end":1107547,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/inverse.rs","byte_start":1107990,"byte_end":1108002,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"kind":{"Impl":{"id":871}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1116718,"byte_end":1116720,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"kind":{"Impl":{"id":872}},"from":{"krate":0,"index":20924},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1118059,"byte_end":1118061,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"kind":{"Impl":{"id":873}},"from":{"krate":0,"index":20924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1121831,"byte_end":1121833,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":20924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/lu.rs","byte_start":1127196,"byte_end":1127202,"line_start":383,"line_end":383,"column_start":66,"column_end":72},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128519,"byte_end":1128538,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":20940},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128660,"byte_end":1128679,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":20940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1128975,"byte_end":1128994,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":20940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/permutation_sequence.rs","byte_start":1129277,"byte_end":1129296,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":20940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133384,"byte_end":1133386,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":20950},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1133595,"byte_end":1133597,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":20950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1137524,"byte_end":1137526,"line_start":159,"line_end":159,"column_start":49,"column_end":51},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":20950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/qr.rs","byte_start":1141385,"byte_end":1141391,"line_start":292,"line_end":292,"column_start":66,"column_end":72},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1142925,"byte_end":1142930,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":20966},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1143045,"byte_end":1143050,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":20966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/schur.rs","byte_start":1157652,"byte_end":1157664,"line_start":491,"line_end":491,"column_start":52,"column_end":64},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1161040,"byte_end":1161052,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/solve.rs","byte_start":1173716,"byte_end":1173728,"line_start":443,"line_end":443,"column_start":56,"column_end":68},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187232,"byte_end":1187235,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":20979},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1187592,"byte_end":1187595,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":20979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/svd.rs","byte_start":1206821,"byte_end":1206827,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":17003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212248,"byte_end":1212262,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":20996},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1212442,"byte_end":1212456,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":20996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_eigen.rs","byte_start":1220495,"byte_end":1220507,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"kind":{"Impl":{"id":894}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225511,"byte_end":1225531,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":21009},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1225722,"byte_end":1225742,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":21009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1229563,"byte_end":1229575,"line_start":166,"line_end":166,"column_start":59,"column_end":71},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}}]}